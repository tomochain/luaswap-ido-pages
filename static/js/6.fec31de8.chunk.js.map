{"version":3,"sources":["hooks/AuthRoute.tsx","hooks/TOSAuthRoute.tsx","views/Idos/components/Hero.tsx","hooks/useDeepMemo.ts","views/Idos/utils/getMediaUrl.ts","utils/formatPoolData.ts","utils/formatTime.ts","views/Idos/hooks/useGetTimeOfPool.ts","views/Idos/hooks/useInterval.ts","views/Idos/hooks/useSecondsUntilCurrent.ts","views/Idos/hooks/usePoolStatus.ts","views/Idos/components/PoolDetail/index.tsx","views/Idos/components/IdoLayout.tsx","views/Idos/components/PageLoading.tsx","views/Idos/components/ProjectDetail/Steps.tsx","views/Idos/components/CurrentIdo.tsx","views/Idos/components/PastIdo.tsx","views/Idos/IdosInfo.tsx","views/Idos/components/DevTools/CreateForm.tsx","state/ido/fetchIdosData.tsx","views/Idos/components/DevTools/ReadForm.tsx","views/Idos/components/DevTools/ApproveToken.tsx","views/Idos/components/DevTools/IncreaseCap.tsx","views/Idos/DevTools.tsx","views/Idos/hooks/useGetTitleOfTier.ts","hooks/useDepositIdo.ts","hooks/useRefresh.ts","hooks/useTokenBalance.ts","hooks/useTimer.ts","hooks/useClaimVesting.tsx","views/Idos/hooks/useVestingInfo.ts","views/Idos/utils/generateClaimInfo.ts","hooks/useClaimRewardIdo.ts","utils/getTimePeriods.ts","views/Idos/components/ProjectDetail/CommitButton.tsx","views/Idos/components/ProjectDetail/ClaimButton.tsx","views/Idos/components/ProjectDetail/VestingButton.tsx","views/Idos/components/ProjectDetail/ActionButton.tsx","views/Idos/hooks/useIsApproved.ts","views/Idos/components/helper.ts","views/Idos/components/Timer.tsx","views/Idos/components/ProjectDetail/CountDown.tsx","views/Idos/components/ProjectDetail/Deposit.tsx","hooks/useApproveIdo.ts","views/Idos/hooks/useTotalDataFromAllPools.ts","views/Idos/components/ProjectDetail/PoolDateStatus.tsx","views/Idos/components/ProjectDetail/PoolSummary.tsx","views/Idos/components/ProjectDetail/ProjectInfo.tsx","views/Idos/components/ProjectDetail/PoolInfo.tsx","views/Idos/components/ProjectDetail/TokenInfo.tsx","views/Idos/components/ExpandableButton.tsx","views/Idos/components/ProjectDetail/TierDetails.tsx","utils/makeBatchRequest.ts","views/Idos/hooks/useDataFromIdoContract.ts","views/Idos/hooks/useTotalDataFromApi.ts","views/Idos/components/ProjectDetail/index.tsx","views/Idos/Idos.tsx","utils/callHelpers.ts","components/UnlockButton.tsx","components/ModalInput/ModalInput.tsx","views/Idos/styles.module.scss"],"names":["AuthRoute","Component","component","rest","useWeb3React","account","render","props","to","TOSAuthRoute","StyledHero","styled","div","process","roller","keyframes","LoaderIcon","StyledInput","input","SubscribeButton","button","ErrorMessage","Text","StyledHeading","theme","mediaQueries","sm","StyledText","Loader","Hero","useState","isLoading","setIsLoading","error","setError","address","setAddress","useToast","toastSuccess","toastError","onSubmit","a","EMAIL_REGEX","test","axios","post","email","mb","Container","textAlign","color","alignItems","mt","justifyContent","bold","mr","placeholder","value","type","onChange","e","target","fontSize","ml","onClick","useDeepMemo","memoFn","key","ref","useRef","current","isEqual","getLink","links","label","result","find","link","formatPoolDetail","allTierPool","mappedIndex","filteredData","reduce","accumulate","currentItem","index","totalCommittedAmount","BigNumber","plus","toString","totalAmountPay","totalAmountIDO","swappedAmountIDO","formatIdoContract","formatPoolTotalTierByChainID","allTierPool1","allTierPool2","map","e2","p","tier","swappedAmountPay","getUtcDateString","timestamp","dateIsoFormatted","parseISO","fromUnixTime","toISOString","dateWithOffset","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","format","compareTwoTimestamp","timestamp1","timestamp2","compareAsc","timestampAndCurrentDifference","date1","getDateTypeValue","date2","differenceInSeconds","convertSecondToDay","seconds","day","differenceInDays","hour","differenceInHours","minute","differenceInMinutes","second","useGetTimeOfPool","untilOpen","untilClose","untilClaim","timeStamp","setTimeStamp","useEffect","time","useInterval","callback","delay","savedCallback","chainId","id","setInterval","clearInterval","useSecondsUntilCurrent","numberOfSeconds","setNumberOfSeconds","newSeconds","usePoolStatus","status","setStatus","openAtSeconds","closedAtSeconds","claimAtSeconds","PoolInfoBlock","CardWrapper","Card","lg","IconWrapper","ImageContainer","img","YellowCard","Box","StyledCardBody","CardBody","SecondaryButtonPool","SecondaryButton","ExclusiveButton","SecondaryButtonWhite","PoolDetail","pool","history","useHistory","path","useRouteMatch","useLocation","poolStatus","poolTimeStamp","navigateToProjectDetail","useCallback","push","isPresent","socials","isWhitelist","isExclusive","_img","_name","name","_description","description","_status","_index","poolInfoChainId","Object","keys","totalPoolData","progressPercentage","payToken","minAmountPay","maxAmountPay","useMemo","dividedBy","multipliedBy","toNumber","flexWrap","src","alt","style","cursor","marginBottom","href","scale","fontWeight","get","network","flexDirection","formatNumberWithComma","variant","primaryStep","IfoLayout","PageLoading","numberOfItems","Array","fill","_","backgroundColor","width","height","Wrapper","MobileWrapper","StepWrapper","Flex","Step","StepWithTail","StepContainer","MobileStepWrapper","Dot","isVertical","DotsComponent","numberOfDots","dotArray","overflowX","_dot","IfoStepsDesktop","selectedUserTier","selectedUserEstLua","isShowTierInfor","fontStyle","hoverContent","TIER_HOVER_CONTENT","hoverPlacement","Number","toFixed","IfoStepsMobile","IfoSteps","navigator","userAgent","fadeIn","fadeOut","Row","PoolContainer","xl","Star","Star1","Star6","Star3","Star4","Star5","StepSection","EmptyPool","CurrentIdo","dispatch","useAppDispatch","useSelector","selectOpenPools","openingPools","upcomingPools","isLoadingOpenPools","selectLoadingOpenPools","fetchOpenPools","IdoLayout","pt","pb","length","as","PastIdo","closedPools","selectClosedPools","isLoadingClosedPool","selectLoadingClosedPools","fetchClosedPools","Idos","url","isExact","Page","activeIndex","Link","className","styles","tabStyle","exact","CreateForm","abi","useForm","handleSubmit","register","web3","useWeb3","inputList","contractFunction","inputs","data","gasLimit","from","idoContractAddress","claimAt","closeAt","creator","idoToken","openAt","currentLuaIdoContract","getLuaIdoContract","methods","createIDO","send","mappingIdoResponse","getBalanceNumber","ReadForm","idoData","setIdoData","idoIndex","IDOs","call","idoDetail","mappedData","JSON","stringify","undefined","ApproveToken","library","idoTokenAddress","approveAmount","eProvider","idoTokenContract","getERC20Contract","approve","IncreaseCap","amountIDO","amountPay","increaseCap","DevTools","LuaswapAbi","titleTierObj","useGetTitleOfTier","estLua","titleTier","setTitleTier","useDepositIdo","contractAddress","payTokenAddress","luaIdoContract","useLuaIdoContract","isNativeToken","ZERO_ADDRESS","onDeposit","amount","proofS","depositIdo","txHash","console","info","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","useTokenBalance","tokenAddress","decimals","BIG_ZERO","balance","setBalance","userEthBalance","useEthBalance","fetchBalance","contract","getBep20Contract","balanceOf","res","BIG_TEN","pow","useCurrentTime","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","useClaimVesting","vestingContract","useLuaVestingContract","handleClaimVesting","claimVesting","onClaimVesting","DEFAULT_USERINFO","claimAtsTime","claimedAmount","formatVestingUserInfo","userInfo","useVestingInfo","vestingAddress","refetching","setRefetching","userVestingInfo","setData","refetchDataFromContract","fetchData","formatedVestingInfo","log","vestingData","estimateClaim","estimatedClaim","isLoadingVestingInfo","generateClaimInfo","claimTime","claimPercent","i","useClaimRewardIdo","onClaimReward","claimRewardIdo","HOUR_IN_SECONDS","getTimePeriods","delta","Math","abs","timeLeft","hours","minutes","floor","CommitButton","symbol","disabled","ClaimButton","VestingButton","timeNextClaim","userClaimFirstPercent","idoReceivedAmount","claimSymbol","estimatedAmount","timeVesting","isClaimedAllVesting","isReject","percentVesting","userTotalCommitted","currentTimestamp","useTimer","isCurrentTimeOutOfClaimTimeFrame","lastTimeFrame","isDisableClaimOrRefundButton","isDisabledButton","ActionButton","onClaim","onCommit","isApproved","handleApprove","isRequestContractAction","isUserDepositMinimumAmount","paytokenAddress","isIdoAvailalbeOnChain","maxAmountAllowedLeft","depositAmount","isClaimed","isLoadingApproveStatus","minAmount","payTokenBalance","isShowVesting","UnlockButton","endIcon","spin","isMaxAmountEqualZero","isDepositAmountTooLarge","isDepositAmountTooSmall","isDepositAmountLargerThanBalance","isDepositAmountInvalid","comparedTo","isZero","useIsApproved","tokenContract","spenderAddress","setIsApproved","isLoadingApproved","setIsLoadingApproved","fetchAllowanceData","allowance","isGreaterThan","DEFAULT_IDO","addressIdoContract","projectId","TimeBlock","Timer","suffix","timeUntil","useTranslation","t","display","FlexWrapper","DateBlock","TimerBlock","ConnectDateTime","Title","TimerOpen","timeUntilOpen","TimerClose","timeUntilClosed","TimerClaim","timeUntilClaim","TimerCountDown","CountDown","title","date","InfoText","BlockTimerWrapper","isShowPoolData","Deposit","currentPoolData","tierDataOfUser","isAvailalbeOnCurrentNetwork","totalAmountUserSwapped","isLoadingDataFromContract","isLoadingTierInfo","setValue","setIdoReceivedAmount","currentTimeIndex","setCurrentTimeIndex","setIsRequestContractAction","cid","setEstimatedAmount","setCurrentVestingPercentage","paytokenContract","onApprove","approveIdo","tx","useApproveIdo","versionContract","isVesting","minus","rate","calculateSwapRate","currentTimestampInSecond","nextClaimTime","b","getFullDisplayBalance","secondsUntilNextClaim","useSecondsUtilTimestamp","handleSelectMax","handleChange","currentTarget","validity","valid","replace","getClaimProof","poolId","poolIndex","API_IDO_URL","response","claimProofData","receivedIdoAmount","finalPay","fetchReceiveIdoAmount","fetchEstimatedAmount","getCommitProof","onHandleCommit","commitedAmmount","getDecimalAmount","proof","s","v","r","deadline","onHandleClaim","formattedFinalPay","onHandleClaimVesting","isPoolInProgress","isClaimable","minimumClaimableAmount","_minAmountPay","ModalInput","onSelectMax","max","min","inputTitle","secondaryTitle","showWarning","useTotalDataFromAllPools","DateStatusWrapper","PoolDateStatus","dateStamp","setDateStamp","dateValue","setDateValue","StatusBar","CapColumnWrapper","SocialLinkWrapper","PoolTag","PoolWrapper","ProcessColumnWrapper","ProcessAmountWrapper","PoolInfoSocialBlock","PoolSummary","contractData","whitelistLink","totalCommitedPercentage","calculateCommittedAmountPercentage","totalSwapAmountPercentage","calculateSwappedAmountPercentage","isPoolOpen","flex","secondaryStep","textDecoration","rel","ProjectInfoWrapper","LinkWrapper","LinkRef","ProjectInfo","projectDetail","isArray","item","wordBreak","whiteSpace","PoolInfo","calculatedPrice","text","onCopy","TokenInfoWrapper","StyledButton","TokenInfo","idoChainId","onAddToken","filter","provider","window","ethereum","request","method","params","options","image","ExpandableButton","expanded","role","opacity","defaultProps","ExpandingWrapper","Divider","TierContainer","TierHeaderWrapper","TierInformationWrapper","CardBodyWrapper","TierCardContainer","TierCardWrapper","TIER_INFO","icon","CTA","lua","CTA2","tomo","TierCard","userTier","nextTier","disabledBuyMore","showExpandableSection","setShowExpandableSection","addLiquidityUrl","totalCommited","addQuantityLua","TierDetails","secondsUntilSnapshot","userNextTier","selectUserNextTier","tierData","tmps","isPoolStarted","tiersss","chainIds","makeBatchRequest","calls","batch","getWeb3NoAccount","BatchRequest","promises","Promise","resolve","reject","add","err","execute","all","defaultIdoDetail","useDataFromIdoContract","idoIndexes","verionContract","luaVestingAddress","setLuaVestingAddress","setIdoDetail","totalUserCommitted","setTotalUserCommitted","setTotalAmountUserSwapped","currentBlock","useBlock","idosOfEachChainId","idoIndexMap","tokenMap","forEach","idosOfCurrentChainId","ido","luaContractAddress","getWeb3BasedOnChainId","contractIdoDetail","processMultipleChainid","chainids","generatedResponse","idos","dataList","mappedContractIdoList","allTiersDataFromContract","chainIdsIdos","userCommitedAmount","commitedAmount","userSwappedAmountIDO","swappedIdoAmount","getBalanceAmount","vesting","fetchVestingInfo","useTotalDataFromApi","StyledFlex","ProjectDetailBox","PoolInfoBox","TokenInfoBox","Heading","ProjectDetail","isLoaded","setIsLoaded","setIsLoadingTierInfo","userTierAfterSnapshot","setUserTierAfterSnapshot","userEstLuaAfterSnapshot","setUserEstLuaAfterSnapshot","useParams","blockNumber","selectCurrentPool","selectUserTier","userEstLua","selectUserEstLua","isLoadingPool","selectLoadingCurrentPool","idoSupportedNetwork","supportIdoNetwork","join","getIdoSupportedNetwork","fetchPool","getTierDataAfterSnapshot","fetchTierAfterSnapshotTime","setDefaultCurrentPool","allIdos","lodashGet","lodashFind","getIdoDataBasedOnChainIdAndTier","totalUserCommittedFromContract","idoDetailFromContract","includes","String","PageLoader","Steps","isNaN","IdosInfo","lpContract","masterChefContract","ethers","constants","MaxUint256","stake","pid","deposit","times","DEFAULT_TOKEN_DECIMAL","on","transactionHash","commit","userClaim","claim","luaIdoAddress","unstake","withdraw","harvest","claimReward","useAuth","login","logout","onPresentConnectModal","useWalletModal","StyledTokenInput","isWarning","shadows","warning","inset","colors","Input","xs","StyledErrorMessage","isBalanceZero","position","pl","pattern","inputMode","step","external","module","exports"],"mappings":"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","file":"static/js/6.fec31de8.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst AuthRoute = ({ component: Component, ...rest }) => {\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return <Redirect to=\"/\" />\n  }\n\n  return <Route render={(props) => <Component {...props} />} {...rest} />\n}\n\nexport default AuthRoute\n","import React, { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport axios from 'axios'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useModal } from 'luastarter-uikits'\nimport TermOfUseModal from 'components/TermOfUseModal'\nimport { API_IDO_URL } from 'config'\nimport { TOUResponse } from 'views/Idos/types'\n\nconst TOSAuthRoute = ({ component: Component, ...rest }) => {\n  const { account } = useWeb3React()\n  // const [onDisplayTermOfUseModal, onDismiss] = useModal(<TermOfUseModal />, false)\n\n  // useEffect(() => {\n  //   const fetchUserTOSInfo = async () => {\n  //     try {\n  //       const response = await axios.get(`${API_IDO_URL}/users/tou/${account}`)\n  //       const { touApproved } = response.data as TOUResponse\n  //       if (!touApproved) {\n  //         onDisplayTermOfUseModal()\n  //       } else {\n  //         onDismiss()\n  //       }\n  //     } catch (error) {\n  //       onDismiss()\n  //       console.log(error, 'Fail to fetch Term of use information')\n  //     }\n  //   }\n\n  //   if (account) {\n  //     fetchUserTOSInfo()\n  //   }\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, [account])\n\n  return <Route render={(props) => <Component {...props} />} {...rest} />\n}\n\nexport default TOSAuthRoute\n","import React, { useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport axios from 'axios'\nimport { Box, Text, Flex } from 'luastarter-uikits'\nimport Container from 'components/layout/Container'\nimport useToast from 'hooks/useToast'\nimport { API_IDO_URL } from 'config'\nimport { EMAIL_REGEX } from 'config/constants/idos'\n\nconst StyledHero = styled.div`\n  padding-bottom: 15px;\n  padding-top: 15px;\n  background-image: url('${process.env.PUBLIC_URL}/images/Group16.png');\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-radius: 40px;\n`\nconst roller = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\n\nconst LoaderIcon = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 40px;\n  height: 40px;\n  & > div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 24px;\n    height: 24px;\n    margin: 8px;\n    border: 2px solid #1a1a1a;\n    border-radius: 50%;\n    animation: ${roller} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #1a1a1a transparent transparent transparent;\n  }\n\n  & > div:nth-child(1) {\n    animation-delay: -0.45s;\n  }\n\n  & > div:nth-child(2) {\n    animation-delay: -0.3s;\n  }\n\n  & > div:nth-child(3) {\n    animation-delay: -0.15s;\n  }\n`\n\nconst StyledInput = styled.input`\n  height: 40px;\n  outline: none;\n  border: 1px solid #ffffff;\n  border-top-left-radius: 20px;\n  border-bottom-left-radius: 20px;\n  background: rgb(234 156 73);\n  padding: 0 15px;\n  min-width: 250px;\n  color: #ffffff;\n  &::placeholder {\n    color: #ffffff;\n  }\n\n  @media (max-width: 576px) {\n    min-width: 200px;\n  }\n`\nconst SubscribeButton = styled.button`\n  height: 40px;\n  color: #fabc46;\n  font-size: 14px;\n  line-height: 24px;\n  font-weight: 700;\n  background-color: #ffffff;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n  padding: 0 10px;\n  border: 1px solid #ffffff;\n  text-transform: uppercase;\n  cursor: pointer;\n  min-width: 100px;\n`\nconst ErrorMessage = styled(Text)``\n\nconst StyledHeading = styled(Text)`\n  font-family: 'Racing Sans One', cursive;\n  font-size: 30px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 48px;\n    line-height: 56px;\n  }\n`\n\nconst StyledText = styled(Text)`\n  font-size: 20px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 24px;\n    font-weight: bold;\n    line-height: 32px;\n  }\n`\n\nconst Loader = () => {\n  return (\n    <LoaderIcon>\n      <div />\n      <div />\n      <div />\n      <div />\n    </LoaderIcon>\n  )\n}\n\nconst Hero = () => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [address, setAddress] = useState(null)\n  const { toastSuccess, toastError } = useToast()\n\n  const handleChangeAddress = (e) => {\n    setError(null)\n    setAddress(e?.target?.value)\n  }\n\n  const onSubmit = async () => {\n    try {\n      if (!address) {\n        setError('Please fill your email address')\n        return\n      }\n\n      if (!EMAIL_REGEX.test(address)) {\n        setError('Invalid email address')\n        return\n      }\n\n      setIsLoading(true)\n      await axios.post(`https://api.luaswap.org/api/luastarter/email/subscription`, {\n        email: address,\n      })\n      setIsLoading(false)\n      setAddress('')\n      toastSuccess('Subscribed')\n    } catch (e) {\n      setIsLoading(false)\n      toastError('Fail to subscribe')\n    }\n  }\n\n  return (\n    <Box mb=\"24px\">\n      <StyledHero>\n        <Container>\n          <StyledHeading mb=\"16px\" textAlign=\"center\" color=\"#FFFFFF\">\n            Decentralize your way of investing\n          </StyledHeading>\n          <Flex alignItems=\"center\" mt=\"20px\" justifyContent=\"center\">\n            <StyledText bold textAlign=\"center\" color=\"#FEF5E3\" mr=\"16px\">\n              Subscribe to upcoming pools\n            </StyledText>\n            <Flex justifyContent=\"center\">\n              <Box>\n                <StyledInput placeholder=\"Your email\" value={address} type=\"email\" onChange={handleChangeAddress} />\n                {error && (\n                  <ErrorMessage color=\"red\" fontSize=\"12px\" ml=\"5px\" mt=\"5px\">\n                    {error}\n                  </ErrorMessage>\n                )}\n              </Box>\n              {isLoading ? (\n                <SubscribeButton>\n                  <Loader />\n                </SubscribeButton>\n              ) : (\n                <SubscribeButton onClick={onSubmit}>Subscribe</SubscribeButton>\n              )}\n            </Flex>\n          </Flex>\n        </Container>\n      </StyledHero>\n    </Box>\n  )\n}\n\nexport default Hero\n","import { useRef } from 'react'\nimport isEqual from 'lodash/isEqual'\n\n/**\n * Should use this function when your deps array value is object (handle deep comparision)\n * Use normal useMemo hook when your deps array is primitive value (no need deep comparision)\n */\nfunction useDeepMemo<T>(memoFn: () => T, key): T {\n  const ref = useRef(null)\n  if (!ref.current || !isEqual(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() }\n  }\n\n  return ref.current.value\n}\n\nexport default useDeepMemo\n","import { ExternalLink } from '../types'\n\nconst getLink = (links: ExternalLink[], label: string): string | null => {\n  if (!links) {\n    return null\n  }\n\n  const result = links.find((link) => link.label === label)\n\n  if (result) {\n    return result.link\n  }\n\n  return null\n}\n\nexport default getLink\n","import BigNumber from 'bignumber.js'\nimport { IdoDetail } from 'state/types'\nimport { IdoDetailInfo } from 'views/Idos/types'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const formatPoolDetail = (allTierPool: IdoDetailInfo[]): IdoDetailInfo => {\n  const mappedIndex = {}\n  const filteredData = allTierPool // .filter((data) => data.tier !== 0)\n  return filteredData.reduce(\n    (accumulate, currentItem) => {\n      if (!mappedIndex[currentItem.index]) {\n        mappedIndex[currentItem.index] = true\n        return {\n          ...accumulate,\n          totalCommittedAmount: new BigNumber(accumulate.totalCommittedAmount)\n            .plus(new BigNumber(currentItem.totalCommittedAmount))\n            .toString(),\n          totalAmountPay: new BigNumber(accumulate.totalAmountPay)\n            .plus(new BigNumber(currentItem.totalAmountPay))\n            .toString(),\n          totalAmountIDO: new BigNumber(accumulate.totalAmountIDO)\n            .plus(new BigNumber(currentItem.totalAmountIDO))\n            .toString(),\n          swappedAmountIDO: new BigNumber(accumulate.swappedAmountIDO)\n            .plus(new BigNumber(currentItem.swappedAmountIDO))\n            .toString(),\n        }\n      }\n      return {\n        ...accumulate,\n      }\n    },\n    {\n      ...filteredData[0],\n      totalCommittedAmount: '0',\n      totalAmountPay: '0',\n      totalAmountIDO: '0',\n      swappedAmountIDO: '0',\n    },\n  )\n}\n\nexport const formatIdoContract = (allTierPool: IdoDetail[]): IdoDetail => {\n  return allTierPool.reduce(\n    (accumulate, currentItem) => {\n      return {\n        ...accumulate,\n        totalCommittedAmount: accumulate.totalCommittedAmount + currentItem.totalCommittedAmount,\n        totalAmountPay: accumulate.totalAmountPay + currentItem.totalAmountPay,\n        totalAmountIDO: accumulate.totalAmountIDO + currentItem.totalAmountIDO,\n        swappedAmountIDO: accumulate.swappedAmountIDO + currentItem.swappedAmountIDO,\n      }\n    },\n    {\n      ...allTierPool[0],\n      totalCommittedAmount: 0,\n      totalAmountPay: 0,\n      totalAmountIDO: 0,\n      swappedAmountIDO: 0,\n    },\n  )\n}\n\nexport const formatPoolTotalTierByChainID = (\n  allTierPool1: IdoDetailInfo[],\n  allTierPool2: IdoDetailInfo[],\n): IdoDetailInfo[] => {\n  return allTierPool1.map((e) => {\n    const e2 = allTierPool2.find((p) => p.tier === e.tier)\n    if (e2) {\n      return {\n        ...e,\n        totalCommittedAmount: new BigNumber(e.totalCommittedAmount)\n          .plus(new BigNumber(e2.totalCommittedAmount))\n          .toString(),\n        swappedAmountPay: new BigNumber(e.swappedAmountPay).plus(new BigNumber(e2.swappedAmountPay)).toString(),\n        totalAmountPay: new BigNumber(e.totalAmountPay).plus(new BigNumber(e2.totalAmountPay)).toString(),\n        totalAmountIDO: new BigNumber(e.totalAmountIDO).plus(new BigNumber(e2.totalAmountIDO)).toString(),\n      }\n    }\n    return e\n  })\n}\n","import fromUnixTime from 'date-fns/fromUnixTime'\nimport format from 'date-fns/format'\nimport parseISO from 'date-fns/parseISO'\nimport compareAsc from 'date-fns/compareAsc'\nimport differenceInDays from 'date-fns/differenceInDays'\nimport differenceInSeconds from 'date-fns/differenceInSeconds'\nimport differenceInHours from 'date-fns/differenceInHours'\nimport differenceInMinutes from 'date-fns/differenceInMinutes'\n\nexport const getDateTypeValue = (timestamp): Date | null => {\n  if (timestamp) {\n    return fromUnixTime(timestamp)\n  }\n\n  return null\n}\n\nexport const getUtcDateString = (timestamp): string | null => {\n  if (timestamp) {\n    const dateIsoFormatted = parseISO(fromUnixTime(timestamp).toISOString())\n    const dateWithOffset = new Date(\n      dateIsoFormatted.getUTCFullYear(),\n      dateIsoFormatted.getUTCMonth(),\n      dateIsoFormatted.getUTCDate(),\n      dateIsoFormatted.getUTCHours(),\n      dateIsoFormatted.getUTCMinutes(),\n      dateIsoFormatted.getUTCSeconds(),\n    )\n    return `${format(dateWithOffset, 'MMM dd yyyy HH:mm:ss')} UTC`\n  }\n\n  return null\n}\n\nexport const formatDateTime = (timestamp, formatType = 'yyyy-MM-dd'): string | null => {\n  if (timestamp) {\n    return format(fromUnixTime(timestamp), formatType)\n  }\n\n  return null\n}\n\n// If function return true: current date > timestamp\nexport const compareWithCurrentDateTime = (timestamp): boolean => {\n  if (timestamp) {\n    const result = compareAsc(new Date(), fromUnixTime(timestamp))\n\n    if (result === 1) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport const compareTwoTimestamp = (timestamp1, timestamp2): boolean => {\n  if (timestamp1 && timestamp2) {\n    const result = compareAsc(fromUnixTime(timestamp1), fromUnixTime(timestamp2))\n\n    if (result === 1) {\n      return true\n    }\n\n    return false\n  }\n\n  return false\n}\n\nexport const differenceInSecond = (date1: Date, date2: Date): number => {\n  if (date1 && date2) {\n    return differenceInSeconds(date1, date2)\n  }\n\n  return null\n}\n\nexport const timestampAndCurrentDifference = (timestamp) => {\n  if (timestamp) {\n    return differenceInSecond(getDateTypeValue(timestamp), new Date())\n  }\n\n  return null\n}\n\nexport const convertSecondToDay = (seconds) => {\n  if (seconds) {\n    const day = differenceInDays(new Date(seconds * 1000), new Date(0))\n    if (day > 0) {\n      return ['day', day]\n    }\n    const hour = differenceInHours(new Date(seconds * 1000), new Date(0))\n    if (hour > 0) {\n      return ['hour', hour]\n    }\n    const minute = differenceInMinutes(new Date(seconds * 1000), new Date(0))\n    if (minute > 0) {\n      return ['minute', minute]\n    }\n    const second = differenceInSeconds(new Date(seconds * 1000), new Date(0))\n    if (second > 0) {\n      return ['second', second]\n    }\n  }\n\n  return [null, null]\n}\n","import { useState, useEffect } from 'react'\nimport { convertSecondToDay } from 'utils/formatTime'\nimport { Pool } from '../types'\n\nconst useGetTimeOfPool = ({ untilOpen, untilClose, untilClaim }: Pool): [t: string] => {\n  const [timeStamp, setTimeStamp] = useState(null)\n\n  useEffect(() => {\n    if (untilOpen) {\n      const [time, value] = convertSecondToDay(untilOpen)\n      setTimeStamp(`${value} ${time}(s) until pool opens.`)\n    } else if (untilClose) {\n      const [time, value] = convertSecondToDay(untilClose)\n      setTimeStamp(`${value} ${time}(s) until pool closes.`)\n    } else if (untilClaim) {\n      const [time, value] = convertSecondToDay(untilClaim)\n      setTimeStamp(`${value} ${time}(s) until claiming time.`)\n    }\n  }, [untilOpen, untilClose, untilClaim])\n\n  return [timeStamp]\n}\n\nexport default useGetTimeOfPool\n","/* eslint-disable consistent-return */\nimport { useEffect, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef()\n  const { chainId, account } = useWeb3React()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      // @ts-ignore\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay, chainId, account])\n}\n","import { useEffect, useState } from 'react'\nimport { timestampAndCurrentDifference } from 'utils/formatTime'\nimport useInterval from './useInterval'\n\n/**\n * Counting how many seconds left until specific seconds\n */\nconst useSecondsUntilCurrent = (seconds) => {\n  const [numberOfSeconds, setNumberOfSeconds] = useState(seconds)\n\n  useEffect(() => {\n    setNumberOfSeconds(seconds)\n  }, [seconds])\n\n  useInterval(() => {\n    const newSeconds = numberOfSeconds - 1\n    if (newSeconds >= 0) {\n      setNumberOfSeconds(newSeconds)\n    }\n  }, 1000)\n  return numberOfSeconds\n}\n\n/**\n * Counting how many seconds left until specific timestamp\n */\nexport const useSecondsUtilTimestamp = (timestamp) => {\n  const [numberOfSeconds, setNumberOfSeconds] = useState(timestampAndCurrentDifference(timestamp))\n\n  useEffect(() => {\n    setNumberOfSeconds(timestampAndCurrentDifference(timestamp))\n  }, [timestamp])\n\n  useInterval(() => {\n    const newSeconds = numberOfSeconds - 1\n    if (newSeconds >= 0) {\n      setNumberOfSeconds(newSeconds)\n    }\n  }, 1000)\n  return numberOfSeconds\n}\n\nexport default useSecondsUntilCurrent\n","import { useState, useEffect } from 'react'\nimport { IdoDetailInfo, Pool, PoolStatus } from '../types'\nimport useSecondsUntilCurrent from './useSecondsUntilCurrent'\n\n/**\n * Get pool's current status based on timestamp\n */\nconst usePoolStatus = ({\n  untilClaim,\n  untilClose,\n  untilOpen,\n}: Pool): [s: PoolStatus, o: number, c: number, d: number] => {\n  const [status, setStatus] = useState(null)\n  const openAtSeconds = useSecondsUntilCurrent(untilOpen)\n  const closedAtSeconds = useSecondsUntilCurrent(untilClose)\n  const claimAtSeconds = useSecondsUntilCurrent(untilClaim)\n\n  useEffect(() => {\n    // If we only has open time, it means that we only allow user to preview the info of the IDO\n    if (openAtSeconds > 0 && !closedAtSeconds) {\n      setStatus('preview')\n      /* If open time > 0 and closed time > 0 -> the Pool is not open yet */\n    } else if (openAtSeconds > 0 && closedAtSeconds > 0) {\n      setStatus('not open')\n    } else if (openAtSeconds <= 0 && closedAtSeconds > 0) {\n      setStatus('open')\n    } else if (openAtSeconds <= 0 && closedAtSeconds <= 0 && claimAtSeconds > 0) {\n      setStatus('claim')\n    } else if (openAtSeconds <= 0 && closedAtSeconds <= 0 && claimAtSeconds <= 0) {\n      setStatus('closed')\n    } else {\n      setStatus(null)\n    }\n  }, [openAtSeconds, closedAtSeconds, claimAtSeconds])\n\n  return [status, openAtSeconds, closedAtSeconds, claimAtSeconds]\n}\n\nexport default usePoolStatus\n","import React, { useCallback, useMemo } from 'react'\nimport { useHistory, useRouteMatch, useLocation } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  CardRibbon,\n  Text,\n  Link,\n  Flex,\n  TwitterIcon,\n  MediumIcon,\n  WorldIcon,\n  TelegramIcon,\n  Progress,\n  SecondaryButton,\n  Image,\n  Box,\n  CalendarIcon,\n} from 'luastarter-uikits'\nimport useDeepMemo from 'hooks/useDeepMemo'\nimport getLink from 'views/Idos/utils/getMediaUrl'\nimport { formatPoolDetail } from 'utils/formatPoolData'\nimport { formatNumberWithComma } from 'utils/formatBalance'\nimport get from 'lodash/get'\nimport useGetTimeOfPool from 'views/Idos/hooks/useGetTimeOfPool'\nimport { Pool, FormatPool } from '../../types'\nimport usePoolStatus from '../../hooks/usePoolStatus'\n\nconst PoolInfoBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled(Card)`\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    width: 100%;\n  }\n\n  &:not(:last-of-type) {\n    margin-bottom: 24px;\n  }\n`\n\nconst IconWrapper = styled.a`\n  margin-right: 14px;\n  border-right: ${(props) => (props['hide-border-right'] === 'true' ? 'none' : '1px solid #606060')};\n  padding-right: 14px;\n  cursor: pointer;\n`\n\nconst ImageContainer = styled.img`\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  cursor: pointer;\n  background-color: #e9e9e9;\n  margin-right: 10px;\n`\n\nexport const YellowCard = styled(Box)`\n  box-sizing: border-box;\n  display: inline-block;\n  background-color: rgba(225, 169, 63, 0.3);\n  color: #fabc46;\n  margin-right: 10px;\n  font-weight: 600;\n  border-radius: 16px;\n  padding: 6px 16px;\n  transition: background-color 0.2s, opacity 0.2s;\n  font-size: 12px;\n`\n\nexport const StyledCardBody = styled(CardBody)`\n  height: 300px;\n  background-color: #353535;\n\n  @media (max-width: 1080px) {\n    height: auto;\n    padding-top: 34px;\n    padding-bottom: 34px;\n  }\n`\n\nconst SecondaryButtonPool = styled(SecondaryButton)`\n  width: auto;\n`\n\nconst ExclusiveButton = styled(SecondaryButtonPool)`\n  border: none;\n  background-color: #606060;\n  padding: 8px 16px;\n  width: auto;\n`\n\nconst SecondaryButtonWhite = styled(SecondaryButtonPool)`\n  border-color: #fffcf6;\n`\n\ninterface PoolDetailProps {\n  pool: Pool\n}\n\nconst PoolDetail: React.FC<PoolDetailProps> = ({ pool }) => {\n  const history = useHistory()\n  const { path } = useRouteMatch()\n  const { chainId } = useWeb3React()\n  const location = useLocation()\n  const [poolStatus] = usePoolStatus(pool)\n  const [poolTimeStamp] = useGetTimeOfPool(pool)\n  const navigateToProjectDetail = useCallback(() => {\n    history.push(`${path}/project/${pool.id}`)\n  }, [history, path, pool.id])\n  const { isPresent, socials, isWhitelist, untilOpen, untilClose, untilClaim, isExclusive } = pool\n  const {\n    img,\n    name,\n    description,\n    totalCommittedAmount,\n    totalAmountPay,\n    totalAmountIDO,\n    swappedAmountIDO,\n    status,\n    payToken,\n    minAmountPay,\n    maxAmountPay,\n  } = useDeepMemo<FormatPool>(() => {\n    const { img: _img, name: _name, description: _description, status: _status, index: _index } = pool\n    const poolInfoChainId = Object.keys(_index).map((id) => {\n      return formatPoolDetail(_index[id])\n    })\n    const totalPoolData = formatPoolDetail(poolInfoChainId)\n    return {\n      img: _img,\n      name: _name,\n      description: _description,\n      status: _status,\n      ...totalPoolData,\n    }\n  }, [pool, chainId])\n\n  const progressPercentage = useMemo(() => {\n    if (poolStatus === 'closed') {\n      return new BigNumber(swappedAmountIDO).dividedBy(new BigNumber(totalAmountIDO)).multipliedBy(100).toNumber()\n    }\n\n    if (totalCommittedAmount && totalAmountPay) {\n      return new BigNumber(totalCommittedAmount).dividedBy(new BigNumber(totalAmountPay)).multipliedBy(100).toNumber()\n    }\n\n    return 0\n  }, [totalCommittedAmount, totalAmountPay, poolStatus, swappedAmountIDO, totalAmountIDO])\n\n  return (\n    <CardWrapper>\n      <StyledCardBody>\n        <Flex alignItems=\"flex-start\" justifyContent=\"space-between\" flexWrap=\"wrap\">\n          <Flex mb=\"15px\" alignItems=\"center\">\n            <ImageContainer src={img} alt=\"img\" onClick={navigateToProjectDetail} />\n            <PoolInfoBlock>\n              <Text\n                fontSize=\"24px\"\n                bold\n                onClick={navigateToProjectDetail}\n                style={{\n                  cursor: 'pointer',\n                }}\n              >\n                {name}\n              </Text>\n              <Flex marginBottom=\"5px\" alignItems=\"center\">\n                <IconWrapper href={getLink(socials, 'TELEGRAM')} target=\"__blank\">\n                  <TelegramIcon />\n                </IconWrapper>\n                <IconWrapper href={getLink(socials, 'TWITTER')} target=\"__blank\">\n                  <TwitterIcon />\n                </IconWrapper>\n                <IconWrapper href={getLink(socials, 'MEDIUM')} target=\"__blank\">\n                  <MediumIcon />\n                </IconWrapper>\n                <IconWrapper href={getLink(socials, 'FORUM')} target=\"__blank\" hide-border-right=\"true\">\n                  <WorldIcon />\n                </IconWrapper>\n              </Flex>\n            </PoolInfoBlock>\n          </Flex>\n          {isExclusive ? (\n            <ExclusiveButton onClick={navigateToProjectDetail} scale=\"sm\" mb=\"15px\">\n              <Text fontSize=\"10px\" color=\"#FABC46\" fontWeight=\"bold\">\n                EXCLUSIVE POOL\n              </Text>\n            </ExclusiveButton>\n          ) : (\n            <>\n              {!isWhitelist ? (\n                <SecondaryButtonPool onClick={navigateToProjectDetail} scale=\"sm\" mb=\"15px\">\n                  <Text fontSize=\"10px\" color=\"#FABC46\" fontWeight=\"bold\">\n                    TIER MEMBER\n                  </Text>\n                </SecondaryButtonPool>\n              ) : (\n                <SecondaryButtonWhite onClick={navigateToProjectDetail} scale=\"sm\" mb=\"15px\">\n                  <Text fontSize=\"10px\" color=\"#FFFCF6\" fontWeight=\"bold\">\n                    WHITELIST MEMBER\n                  </Text>\n                </SecondaryButtonWhite>\n              )}\n            </>\n          )}\n        </Flex>\n        <Box>\n          {get(pool, 'network', []).map((network) => {\n            return <YellowCard>{network}</YellowCard>\n          })}\n        </Box>\n        {poolTimeStamp && (\n          <Flex alignItems=\"center\" mt=\"16px\">\n            <CalendarIcon />\n            <Text ml=\"8px\">{poolTimeStamp}</Text>\n          </Flex>\n        )}\n        <Text color=\"#C3C3C3\" mt=\"16px\">\n          {description}\n        </Text>\n        {!isPresent && (\n          <>\n            <Flex justifyContent=\"space-between\" mb=\"4px\" mt=\"16px\">\n              <Flex justifyContent=\"flex-start\" flexDirection=\"row\">\n                <Text color=\"#8B8B8B\" mr=\"5px\">\n                  Cap:{' '}\n                </Text>\n                <Text color=\"primary\" fontWeight=\"600\">\n                  {formatNumberWithComma(totalAmountIDO, true)}\n                </Text>\n              </Flex>\n            </Flex>\n            <Progress variant=\"round\" scale=\"sm\" primaryStep={progressPercentage} />\n          </>\n        )}\n      </StyledCardBody>\n    </CardWrapper>\n  )\n}\n\nexport default PoolDetail\n","import styled from 'styled-components'\n\nconst IfoLayout = styled.div`\n  display: grid;\n  grid-gap: 32px;\n`\n\nexport default IfoLayout\n","import React from 'react'\nimport { Skeleton, Card, CardBody, Flex } from 'luastarter-uikits'\nimport styled from 'styled-components'\n\nconst CardWrapper = styled(Card)`\n  margin-bottom: 24px;\n`\n\nconst PageLoading = ({ numberOfItems = 1 }) => {\n  return (\n    <>\n      {new Array(numberOfItems).fill(0).map((_) => {\n        return (\n          <CardWrapper key={_ + 1}>\n            <CardBody\n              style={{\n                backgroundColor: '#353535',\n              }}\n            >\n              <Flex>\n                <Skeleton width=\"60px\" height=\"60px\" variant=\"circle\" mr=\"15px\" mb=\"15px\" />\n                <Flex flexDirection=\"column\">\n                  <Skeleton width=\"100px\" mb=\"10px\" />\n                  <Flex>\n                    <Skeleton width=\"20px\" height=\"20px\" variant=\"circle\" mb=\"15px\" mr=\"5px\" />\n                    <Skeleton width=\"20px\" height=\"20px\" variant=\"circle\" mb=\"15px\" mr=\"5px\" />\n                    <Skeleton width=\"20px\" height=\"20px\" variant=\"circle\" mb=\"15px\" mr=\"5px\" />\n                    <Skeleton width=\"20px\" height=\"20px\" variant=\"circle\" mb=\"15px\" mr=\"5px\" />\n                  </Flex>\n                </Flex>\n              </Flex>\n              <Skeleton />\n              <Flex justifyContent=\"space-between\" mt=\"20px\">\n                <Flex flexDirection=\"column\">\n                  <Skeleton width=\"50px\" mb=\"5px\" />\n                  <Skeleton width=\"50px\" mb=\"5px\" />\n                </Flex>\n                <Flex flexDirection=\"column\">\n                  <Skeleton width=\"50px\" mb=\"5px\" />\n                  <Skeleton width=\"50px\" mb=\"5px\" />\n                </Flex>\n              </Flex>\n              <Skeleton mt=\"10px\" />\n            </CardBody>\n          </CardWrapper>\n        )\n      })}\n    </>\n  )\n}\n\nexport default PageLoading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, Text, Flex, TertiaryMessage } from 'luastarter-uikits'\nimport { TIER_HOVER_CONTENT } from 'config/constants/idos'\n\ninterface DotProps {\n  isVertical: boolean\n}\n\nconst Wrapper = styled(Box)`\n  align-items: center;\n  justify-content: flex-start;\n  padding: 24px;\n  border-top-right-radius: 30px;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n  background-color: #282828;\n  height: 240px;\n`\nconst MobileWrapper = styled(Box)`\n  align-items: center;\n  justify-content: flex-start;\n  padding: 24px;\n  border-top-right-radius: 30px;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n  background-color: #282828;\n`\n\nconst StepWrapper = styled(Flex)`\n  margin-bottom: 24px;\n  display: flex;\n  align-items: center;\n`\n\nconst Step = styled(Box)`\n  background-color: #fabc46;\n  width: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 40px;\n  margin-right: 14px;\n  border-radius: 50%;\n  border: 4px solid #5b4c2f;\n\n  &:before {\n    border-radius: 50%;\n    border: 4px solid #3a352a;\n    width: 48px;\n    height: 48px;\n    content: '';\n    display: block;\n    position: absolute;\n  }\n`\nconst StepWithTail = styled(Step)`\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 18px;\n    left: 44px;\n    width: 90%;\n    height: 10px;\n    border-top: 4px dotted #e1a93f;\n  }\n`\n\nconst StepContainer = styled(Flex)`\n  width: calc(25% - 15px);\n  position: relative;\n  &:not(:last-of-type) {\n    margin-right: 15px;\n  }\n`\n\nconst MobileStepWrapper = styled(Flex)`\n  background-color: #1a1a1a;\n  padding: 14px;\n  border-top-right-radius: 30px;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n`\n\nconst Dot = styled(Box)<DotProps>`\n  width: 3px;\n  height: 3px;\n  background-color: #e1a93f;\n  border-radius: 50%;\n  margin-right: ${(props) => (props.isVertical ? '0px' : '8px')};\n  &:not(:last-of-type) {\n    margin-bottom: ${(props) => (props.isVertical ? '8px' : '0px')};\n  }\n\n  @media screen and (max-width: 1500px) {\n    margin-right: 5px;\n  }\n`\nconst DotsComponent = ({ numberOfDots, isVertical = false }) => {\n  const dotArray = new Array(numberOfDots).fill(0)\n\n  return (\n    <Flex flexDirection={isVertical ? 'column' : 'row'} overflowX=\"hidden\">\n      {dotArray.map((_dot) => {\n        return <Dot isVertical={isVertical} />\n      })}\n    </Flex>\n  )\n}\n\nconst IfoStepsDesktop: React.FC<{ selectedUserTier?: string; selectedUserEstLua?: number; isShowTierInfor: boolean }> =\n  ({ selectedUserTier, selectedUserEstLua, isShowTierInfor }) => {\n    return (\n      <Wrapper>\n        <StepWrapper>\n          <StepContainer alignItems=\"center\">\n            <StepWithTail>\n              <Text bold color=\"#353535\">\n                1\n              </Text>\n            </StepWithTail>\n          </StepContainer>\n          <StepContainer alignItems=\"center\">\n            <StepWithTail>\n              <Text bold color=\"#353535\">\n                2\n              </Text>\n            </StepWithTail>\n          </StepContainer>\n          <StepContainer alignItems=\"center\">\n            <StepWithTail>\n              <Text bold color=\"#353535\">\n                3\n              </Text>\n            </StepWithTail>\n          </StepContainer>\n          <StepContainer alignItems=\"center\">\n            <Step>\n              <Text bold color=\"#353535\">\n                4\n              </Text>\n            </Step>\n          </StepContainer>\n        </StepWrapper>\n        <Flex>\n          <Box width=\"25%\" mr=\"15px\">\n            <Text bold color=\"#F6F6F6\">\n              Connect to your wallet\n            </Text>\n            <Text color=\"#8B8B8B\">Connect your wallet to participate in the IDO</Text>\n            <Text color=\"red\" fontSize=\"11px\" fontStyle=\"italic\">\n              Connect your wallet to LuaStarter at least 3 days before the IDO opens to complete your registration\n            </Text>\n          </Box>\n          <Box width=\"25%\" mr=\"15px\">\n            <Text bold color=\"#F6F6F6\">\n              Guarantee your spot\n            </Text>\n            <TertiaryMessage hoverContent={TIER_HOVER_CONTENT} hoverPlacement=\"right\" color=\"#8B8B8B\">\n              Stake more LUA to be qualified for a higher tier level\n            </TertiaryMessage>\n            {isShowTierInfor && (\n              <Text color=\"#8B8B8B\">\n                Your Tier: {selectedUserTier} (Est LUA: {Number(selectedUserEstLua).toFixed(2)})\n              </Text>\n            )}\n          </Box>\n          <Box width=\"25%\" mr=\"15px\">\n            <Text bold color=\"#F6F6F6\">\n              At IDO time\n            </Text>\n            <Text color=\"#8B8B8B\">Purchase your token by committing between the mininum and maximum set value.</Text>\n          </Box>\n          <Box width=\"25%\">\n            <Text bold color=\"#F6F6F6\">\n              After IDO time\n            </Text>\n            <Text color=\"#8B8B8B\">\n              Claim the tokens you have purchased. Any unspent assets will be returned to your wallet.\n            </Text>\n          </Box>\n        </Flex>\n      </Wrapper>\n    )\n  }\n\nconst IfoStepsMobile: React.FC<{ selectedUserTier?: string; selectedUserEstLua?: number; isShowTierInfor: boolean }> =\n  ({ selectedUserTier, selectedUserEstLua, isShowTierInfor }) => {\n    return (\n      <MobileWrapper>\n        <MobileStepWrapper alignItems=\"center\" justifyContent=\"center\">\n          <Step width=\"25%\">\n            <Text bold color=\"#353535\">\n              1\n            </Text>\n          </Step>\n          <Box width=\"75%\">\n            <Text bold color=\"#F6F6F6\">\n              Connect to your wallet\n            </Text>\n            <Text color=\"#8B8B8B\">Connect your wallet to participate in the IDO</Text>\n            <Text color=\"red\" fontSize=\"11px\" fontStyle=\"italic\">\n              Connect your wallet to LuaStarter at least 3 days before the IDO opens to complete your registration\n            </Text>\n          </Box>\n        </MobileStepWrapper>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"8px\" mt=\"8px\">\n          <DotsComponent isVertical numberOfDots={10} />\n        </Flex>\n        <MobileStepWrapper alignItems=\"center\" justifyContent=\"center\">\n          <Step width=\"25%\">\n            <Text bold color=\"#353535\">\n              2\n            </Text>\n          </Step>\n          <Box width=\"75%\">\n            <Text bold color=\"#F6F6F6\">\n              Guarantee your spot\n            </Text>\n            <TertiaryMessage hoverContent={TIER_HOVER_CONTENT} hoverPlacement=\"top\" color=\"#8B8B8B\">\n              Stake more LUA to be qualified for a higher tier level\n            </TertiaryMessage>\n            {isShowTierInfor && (\n              <Text color=\"#8B8B8B\">\n                Your Tier: {selectedUserTier} (Est LUA: {Number(selectedUserEstLua).toFixed(2)})\n              </Text>\n            )}\n          </Box>\n        </MobileStepWrapper>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"8px\" mt=\"8px\">\n          <DotsComponent isVertical numberOfDots={10} />\n        </Flex>\n        <MobileStepWrapper alignItems=\"center\" justifyContent=\"center\">\n          <Step width=\"25%\">\n            <Text bold color=\"#353535\">\n              3\n            </Text>\n          </Step>\n          <Box width=\"75%\">\n            <Text bold color=\"#F6F6F6\">\n              At IDO time\n            </Text>\n            <Text color=\"#8B8B8B\">Purchase your token by committing between the mininum and maximum set value.</Text>\n          </Box>\n        </MobileStepWrapper>\n        <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"8px\" mt=\"8px\">\n          <DotsComponent isVertical numberOfDots={10} />\n        </Flex>\n        <MobileStepWrapper alignItems=\"center\" justifyContent=\"center\">\n          <Step width=\"25%\">\n            <Text bold color=\"#353535\">\n              4\n            </Text>\n          </Step>\n          <Box width=\"75%\">\n            <Text bold color=\"#F6F6F6\">\n              After IDO time\n            </Text>\n            <Text color=\"#8B8B8B\">\n              {' '}\n              Claim the tokens you have purchased. Any unspent assets will be returned to your wallet.\n            </Text>\n          </Box>\n        </MobileStepWrapper>\n      </MobileWrapper>\n    )\n  }\n\nconst IfoSteps: React.FC<{\n  selectedUserTier?: string\n  selectedUserEstLua?: number\n  isShowTierInfor: boolean\n}> = ({ selectedUserTier, isShowTierInfor, selectedUserEstLua }) => {\n  const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent)\n  return isMobile ? (\n    <IfoStepsMobile\n      selectedUserTier={selectedUserTier}\n      isShowTierInfor={isShowTierInfor}\n      selectedUserEstLua={selectedUserEstLua}\n    />\n  ) : (\n    <IfoStepsDesktop\n      selectedUserTier={selectedUserTier}\n      isShowTierInfor={isShowTierInfor}\n      selectedUserEstLua={selectedUserEstLua}\n    />\n  )\n}\n\nexport default IfoSteps\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect } from 'react'\nimport { Text, Flex, Box, Heading } from 'luastarter-uikits'\nimport { useSelector } from 'react-redux'\nimport styled, { keyframes } from 'styled-components'\nimport { fetchOpenPools, selectLoadingOpenPools, selectOpenPools } from 'state/ido'\nimport { useAppDispatch } from 'state'\nimport PoolDetail from './PoolDetail'\nimport IdoLayout from './IdoLayout'\nimport PageLoading from './PageLoading'\nimport { Pool } from '../types'\nimport IfoSteps from './ProjectDetail/Steps'\n\nconst fadeIn = keyframes`\n  from {\n    transform: scale(.25);\n    opacity: 0;\n  }\n\n  to {\n    transform: scale(1);\n    opacity: 1;\n  }\n`\n\nconst fadeOut = keyframes`\n  from {\n    transform: scale(1);\n    opacity: 0;\n  }\n\n  to {\n    transform: scale(.25);\n    opacity: 1;\n  }\n`\n\nconst Row = styled.div`\n  margin: 0 auto;\n`\nconst PoolContainer = styled.div`\n  border-radius: 24px;\n  background-color: #282828;\n  position: relative;\n  width: 100%;\n  padding: 0px 24px;\n  padding-bottom: 24px;\n  margin-bottom: 14px;\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-right: 14px;\n    margin-bottom: 0px;\n    width: calc(50% - 14px);\n  }\n`\n\nconst Star = styled(Box)`\n  position: absolute;\n  background-image: url('${process.env.PUBLIC_URL}/images/star.svg');\n  background-size: contain;\n  overflow: hidden;\n`\nconst Star1 = styled(Star)`\n  width: 30px;\n  height: 30px;\n  top: 10px;\n  left: 40%;\n  animation: ${fadeIn} 0.5s linear infinite, ${fadeOut} 2s linear infinite;\n  animation-fill-mode: both;\n  animation-delay: 500ms;\n`\nconst Star6 = styled(Star)`\n  width: 30px;\n  height: 30px;\n  top: 60px;\n  left: 38%;\n  animation: ${fadeIn} 0.5s linear infinite, ${fadeOut} 3s linear infinite;\n  animation-fill-mode: both;\n  animation-delay: 500ms;\n`\n\nconst Star3 = styled(Star)`\n  width: 35px;\n  height: 35px;\n  top: 20px;\n  right: 30px;\n  animation: ${fadeIn} 1s linear infinite, ${fadeOut} 3s linear infinite;\n  animation-fill-mode: both;\n  animation-delay: 1s;\n`\n\nconst Star4 = styled(Star)`\n  width: 20px;\n  height: 20px;\n  bottom: 20px;\n  left: 10px;\n  animation: ${fadeIn} 0.1s linear infinite, ${fadeOut} 1.5s linear infinite;\n  animation-fill-mode: both;\n  animation-delay: 800ms;\n`\n\nconst Star5 = styled(Star)`\n  width: 40px;\n  height: 40px;\n  bottom: 10px;\n  left: 20px;\n  animation: ${fadeIn} 2s linear infinite, ${fadeOut} 1.5s linear infinite;\n  animation-fill-mode: both;\n  animation-delay: 700ms;\n`\n\nconst StepSection = styled.div`\n  margin-top: 30px;\n`\nconst EmptyPool = () => {\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <img src={`${process.env.PUBLIC_URL}/images/empty.svg`} alt=\"empty\" />\n      <Text color=\"#606060\" textAlign=\"center\">\n        No Data\n      </Text>\n    </Flex>\n  )\n}\n\nconst CurrentIdo: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const { openingPools, upcomingPools } = useSelector(selectOpenPools)\n  const isLoadingOpenPools = useSelector(selectLoadingOpenPools)\n\n  useEffect(() => {\n    dispatch(fetchOpenPools())\n  }, [dispatch])\n\n  return (\n    <IdoLayout>\n      <Flex flexWrap=\"wrap\">\n        <PoolContainer>\n          <Text fontSize=\"24px\" textAlign=\"center\" color=\"#F6F6F6\" pt=\"24px\" pb=\"24px\" fontWeight=\"700\">\n            Opening Pools\n          </Text>\n          <Row>\n            {isLoadingOpenPools ? (\n              <PageLoading />\n            ) : openingPools.length === 0 ? (\n              <EmptyPool />\n            ) : (\n              <>\n                {openingPools.map((pool) => {\n                  return <PoolDetail pool={pool} />\n                })}\n                <Star1 />\n                <Star3 />\n                <Star4 />\n                <Star5 />\n                <Star6 />\n              </>\n            )}\n          </Row>\n        </PoolContainer>\n        <PoolContainer>\n          <Text fontSize=\"24px\" textAlign=\"center\" color=\"#8B8B8B\" pt=\"24px\" pb=\"24px\" fontWeight=\"700\">\n            Upcoming Pools\n          </Text>\n          <Row>\n            {isLoadingOpenPools ? (\n              <PageLoading />\n            ) : upcomingPools.length === 0 ? (\n              <EmptyPool />\n            ) : (\n              <>\n                {upcomingPools.map((pool) => {\n                  return <PoolDetail pool={pool} />\n                })}\n              </>\n            )}\n          </Row>\n        </PoolContainer>\n      </Flex>\n      <StepSection>\n        <Heading as=\"h2\" scale=\"lg\" color=\"#D8D8D8\" mb=\"20px\">\n          How to LuaStarts\n        </Heading>\n        <IfoSteps isShowTierInfor={false} />\n      </StepSection>\n    </IdoLayout>\n  )\n}\n\nexport default CurrentIdo\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex } from 'luastarter-uikits'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { fetchClosedPools, selectClosedPools, selectLoadingClosedPools } from 'state/ido'\nimport { Pool } from '../types'\nimport IdoLayout from './IdoLayout'\nimport PoolDetail from './PoolDetail'\nimport PageLoading from './PageLoading'\n\nconst PoolContainer = styled(IdoLayout)`\n  grid-template-columns: 1fr 1fr;\n\n  @media (max-width: 1366px) {\n    grid-template-columns: 1fr;\n  }\n`\nconst CardWrapper = styled(Flex)`\n  border-radius: 24px;\n  background-color: #282828;\n  width: 50%;\n  padding: 48px 0px;\n  margin: 0 auto;\n\n  @media (max-width: 1366px) {\n    width: 70%;\n  }\n\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n`\n\nconst EmptyPool = () => {\n  return (\n    <CardWrapper alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n      <img src={`${process.env.PUBLIC_URL}/images/empty.svg`} alt=\"empty\" />\n      <Text color=\"#606060\" textAlign=\"center\">\n        No Data\n      </Text>\n    </CardWrapper>\n  )\n}\n\nconst PastIdo: React.FC = () => {\n  const dispatch = useAppDispatch()\n  const closedPools = useSelector(selectClosedPools)\n  const isLoadingClosedPool = useSelector(selectLoadingClosedPools)\n\n  useEffect(() => {\n    dispatch(fetchClosedPools())\n  }, [dispatch])\n\n  if (closedPools.length === 0 && !isLoadingClosedPool) {\n    return <EmptyPool />\n  }\n\n  return (\n    <PoolContainer>\n      {isLoadingClosedPool ? (\n        <PageLoading />\n      ) : (\n        <>\n          {closedPools.map((pool) => {\n            return <PoolDetail pool={pool} />\n          })}\n        </>\n      )}\n    </PoolContainer>\n  )\n}\n\nexport default PastIdo\n","import React from 'react'\nimport { Route, useRouteMatch, Link } from 'react-router-dom'\nimport { Flex, SecondaryButtonMenu, SecondaryMenuItem, useModal } from 'luastarter-uikits'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport CurrentIdo from './components/CurrentIdo'\nimport PastIdo from './components/PastIdo'\nimport styles from './styles.module.scss'\n\nconst Idos = () => {\n  const { path, url, isExact } = useRouteMatch()\n\n  return (\n    <>\n      <Page>\n        <Hero />\n        <Flex mb=\"32px\" alignItems=\"center\" justifyContent=\"center\">\n          <SecondaryButtonMenu activeIndex={!isExact ? 1 : 0} scale=\"sm\" variant=\"primary\">\n            <SecondaryMenuItem as={Link} to={`${url}`} pt=\"24px\" pb=\"24px\" className={styles.tabStyle}>\n              OPENING POOLS\n            </SecondaryMenuItem>\n            <SecondaryMenuItem as={Link} to={`${url}/history`} pt=\"24px\" pb=\"24px\" className={styles.tabStyle}>\n              PREVIOUS POOLS\n            </SecondaryMenuItem>\n          </SecondaryButtonMenu>\n        </Flex>\n        <Route exact path={`${path}`}>\n          <CurrentIdo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIdo />\n        </Route>\n      </Page>\n    </>\n  )\n}\n\nexport default Idos\n","import React from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useWeb3React } from '@web3-react/core'\nimport { Input, Button, Box, Text, Flex } from 'luastarter-uikits'\nimport { getLuaIdoContract } from 'utils/contractHelpers'\nimport useWeb3 from 'hooks/useWeb3'\nimport useToast from 'hooks/useToast'\n\nconst CreateForm = ({ abi }) => {\n  const { handleSubmit, register } = useForm()\n  const web3 = useWeb3()\n  const { account, chainId } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n\n  const inputList = abi.find((contractFunction) => contractFunction.name === 'createIDO')?.inputs\n\n  const onSubmit = async (data) => {\n    const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n    try {\n      const {\n        idoContractAddress,\n        claimAt,\n        closeAt,\n        creator,\n        idoToken,\n        maxAmountPay,\n        minAmountPay,\n        openAt,\n        payToken,\n        totalAmountIDO,\n        totalAmountPay,\n      } = data\n      const currentLuaIdoContract = getLuaIdoContract(web3, idoContractAddress)\n      const result = await currentLuaIdoContract.methods\n        .createIDO(\n          creator,\n          idoToken,\n          payToken,\n          totalAmountIDO,\n          totalAmountPay,\n          minAmountPay,\n          maxAmountPay,\n          openAt,\n          closeAt,\n          claimAt,\n        )\n        .send(gasLimit)\n      toastSuccess('Deploy contract success')\n    } catch (error) {\n      toastError('Deploy contract fail')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Text fontSize=\"24px\" mt=\"14px\">\n        Create Ido\n      </Text>\n      <Box mt=\"12px\">\n        <Flex mb=\"10px\">\n          <Text width=\"15%\">IDO address</Text>\n          <Input width=\"80%\" scale=\"md\" type=\"text\" {...register('idoContractAddress')} />\n        </Flex>\n        {inputList.map((input) => {\n          return (\n            <Flex mb=\"10px\">\n              <Text width=\"15%\">{input.name}</Text>\n              <Input width=\"80%\" scale=\"md\" type=\"text\" {...register(input.name)} />\n            </Flex>\n          )\n        })}\n      </Box>\n      <Button>Submit</Button>\n    </form>\n  )\n}\n\nexport default CreateForm\n","/* eslint-disable import/no-cycle */\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { IdoDetail } from '../types'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const mappingIdoResponse = ({\n  claimAt,\n  closeAt,\n  creator,\n  idoToken,\n  maxAmountPay,\n  minAmountPay,\n  openAt,\n  payToken,\n  swappedAmountIDO,\n  swappedAmountPay,\n  totalAmountIDO,\n  totalAmountPay,\n  totalCommittedAmount,\n}): IdoDetail => {\n  return {\n    claimAt,\n    closeAt,\n    creator,\n    idoToken,\n    maxAmountPay: getBalanceNumber(maxAmountPay),\n    minAmountPay: getBalanceNumber(minAmountPay),\n    openAt,\n    payToken,\n    swappedAmountIDO: getBalanceNumber(swappedAmountIDO),\n    swappedAmountPay: getBalanceNumber(swappedAmountPay),\n    totalAmountIDO: getBalanceNumber(totalAmountIDO),\n    totalAmountPay: getBalanceNumber(totalAmountPay),\n    totalCommittedAmount: getBalanceNumber(totalCommittedAmount),\n  }\n}\n\n// export const fetchIdosInformation = async (chainId: number, web3?: Web3): Promise<IdoDetail[]> => {\n//   try {\n//     const idoList = []\n//     const luaIdoContract = getLuaIdoContract(web3, chainId)\n//     const numberOfIdo = await luaIdoContract.methods.numberOfIDO().call()\n\n//     for (let i = 0; i < numberOfIdo; i++) {\n//       const idoDetail = luaIdoContract.methods.IDOs(i).call()\n//       idoList.push(idoDetail)\n//     }\n\n//     const result = await Promise.all(idoList)\n//     return result.map((item) => mappingIdoResponse(item))\n//   } catch (error) {\n//     console.log(error, 'fail to fetch')\n//     return []\n//   }\n// }\n","import React, { useState } from 'react'\nimport { Text, Input, Box, Flex, Button } from 'luastarter-uikits'\nimport { useForm } from 'react-hook-form'\nimport { getLuaIdoContract } from 'utils/contractHelpers'\nimport useWeb3 from 'hooks/useWeb3'\nimport useToast from 'hooks/useToast'\nimport { mappingIdoResponse } from 'state/ido/fetchIdosData'\n\nconst ReadForm = () => {\n  const { register, handleSubmit } = useForm()\n  const [idoData, setIdoData] = useState(null)\n  const web3 = useWeb3()\n  const { toastSuccess, toastError } = useToast()\n  const onSubmit = async (data) => {\n    try {\n      const { idoContractAddress, idoIndex } = data\n      const currentLuaIdoContract = getLuaIdoContract(web3, idoContractAddress)\n      const idoDetail = await currentLuaIdoContract.methods.IDOs(idoIndex).call()\n      const mappedData = mappingIdoResponse(idoDetail)\n      setIdoData(mappedData)\n    } catch (error) {\n      setIdoData(null)\n      toastError('Fail to fetch data, maybe pool index is not existed')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Text fontSize=\"24px\" mb=\"12px\">\n        Read Ido\n      </Text>\n      <Box>\n        <Flex mb=\"10px\">\n          <Text width=\"15%\">IDO address</Text>\n          <Input width=\"80%\" scale=\"md\" type=\"text\" {...register('idoContractAddress')} />\n        </Flex>\n        <Flex mb=\"10px\">\n          <Text width=\"15%\">IDO index</Text>\n          <Input width=\"80%\" scale=\"md\" type=\"text\" {...register('idoIndex')} />\n        </Flex>\n      </Box>\n      <Flex>\n        <Button type=\"submit\" mb=\"14px\" mr=\"14px\">\n          Read\n        </Button>\n        <Button type=\"button\" onClick={() => setIdoData(null)}>\n          Clear data\n        </Button>\n      </Flex>\n      <pre>{idoData && JSON.stringify(idoData, undefined, 2)}</pre>\n    </form>\n  )\n}\n\nexport default ReadForm\n","import React from 'react'\nimport { Text, Box, Flex, Input, Button } from 'luastarter-uikits'\nimport { useWeb3React } from '@web3-react/core'\nimport { useForm } from 'react-hook-form'\nimport { getERC20Contract } from 'utils/contractHelpers'\nimport { ethers } from 'ethers'\nimport useToast from 'hooks/useToast'\n\nconst ApproveToken = () => {\n  const { library, chainId, account } = useWeb3React()\n  const { register, handleSubmit } = useForm()\n  const { toastSuccess, toastError } = useToast()\n  const onSubmit = async (data) => {\n    try {\n      const { idoTokenAddress, idoContractAddress, approveAmount } = data\n      const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n      const eProvider = library || null\n      const idoTokenContract = getERC20Contract(eProvider, idoTokenAddress, chainId)\n      const result = await idoTokenContract.methods.approve(idoContractAddress, approveAmount).send(gasLimit)\n      toastSuccess('Successfully approve ido contract')\n    } catch (error) {\n      toastError('Fail to approve ido contract')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Text fontSize=\"24px\" mt=\"14px\" mb=\"12px\">\n        Approve Token\n      </Text>\n      <Box>\n        <Flex mb=\"10px\">\n          <Text width=\"15%\">IDO address</Text>\n          <Input width=\"80%\" scale=\"md\" type=\"text\" {...register('idoContractAddress')} />\n        </Flex>\n        <Flex mb=\"10px\">\n          <Text width=\"15%\">IDO Token Address</Text>\n          <Input width=\"80%\" scale=\"md\" type=\"text\" {...register('idoTokenAddress')} />\n        </Flex>\n        <Flex mb=\"10px\">\n          <Text width=\"15%\">Approve Amount</Text>\n          <Input width=\"80%\" scale=\"md\" type=\"text\" {...register('approveAmount')} />\n        </Flex>\n      </Box>\n      <Button type=\"submit\" mb=\"14px\" mr=\"14px\">\n        Approve\n      </Button>\n    </form>\n  )\n}\n\nexport default ApproveToken\n","import React from 'react'\nimport { Input, Button, Box, Text, Flex } from 'luastarter-uikits'\nimport { useForm } from 'react-hook-form'\nimport { useWeb3React } from '@web3-react/core'\nimport { getLuaIdoContract } from 'utils/contractHelpers'\nimport useWeb3 from 'hooks/useWeb3'\nimport useToast from 'hooks/useToast'\n\nconst IncreaseCap = ({ abi }) => {\n  const { handleSubmit, register } = useForm()\n  const web3 = useWeb3()\n  const { account, chainId } = useWeb3React()\n  const { toastSuccess, toastError } = useToast()\n\n  const inputList = abi.find((contractFunction) => contractFunction.name === 'increaseCap')?.inputs\n\n  const onSubmit = async (data) => {\n    const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n    try {\n      const { idoContractAddress, index, amountIDO, amountPay } = data\n      const currentLuaIdoContract = getLuaIdoContract(web3, idoContractAddress)\n      const result = await currentLuaIdoContract.methods.increaseCap(index, amountIDO, amountPay).send(gasLimit)\n      toastSuccess('Deploy contract success')\n    } catch (error) {\n      toastError('Deploy contract fail')\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Text fontSize=\"24px\" mt=\"14px\">\n        IncreaseCAP\n      </Text>\n      <Box mt=\"12px\">\n        <Flex mb=\"10px\">\n          <Text width=\"15%\">IDO address</Text>\n          <Input width=\"80%\" scale=\"md\" type=\"text\" {...register('idoContractAddress')} />\n        </Flex>\n        {inputList.map((input) => {\n          return (\n            <Flex mb=\"10px\">\n              <Text width=\"15%\">{input.name}</Text>\n              <Input width=\"80%\" scale=\"md\" type=\"text\" {...register(input.name)} />\n            </Flex>\n          )\n        })}\n      </Box>\n      <Button>Submit</Button>\n    </form>\n  )\n}\n\nexport default IncreaseCap\n","import React from 'react'\nimport { Text, Box } from 'luastarter-uikits'\nimport Page from 'components/layout/Page'\nimport LuaswapAbi from 'config/abi/LuaSwapIDO.json'\nimport CreateForm from './components/DevTools/CreateForm'\nimport ReadForm from './components/DevTools/ReadForm'\nimport ApproveToken from './components/DevTools/ApproveToken'\nimport IncreaseCap from './components/DevTools/IncreaseCap'\n\nconst DevTools = () => {\n  return (\n    <Page>\n      <Box>\n        <ReadForm />\n        <br />\n        <ApproveToken />\n        <br />\n        <CreateForm abi={LuaswapAbi} />\n        <br />\n        <IncreaseCap abi={LuaswapAbi} />\n      </Box>\n    </Page>\n  )\n}\n\nexport default DevTools\n","import React, { useEffect, useState } from 'react'\n\nconst titleTierObj = {\n  none: 'None',\n  earth: 'Earth',\n  moon: 'Moon',\n  mars: 'Mars',\n  galaxy: 'Galaxy',\n  galaxyPlus: 'Galaxy plus',\n}\n\nconst useGetTitleOfTier = (estLua, isExclusive) => {\n  const [titleTier, setTitleTier] = useState(titleTierObj.none)\n\n  useEffect(() => {\n    if (estLua < 5000) {\n      setTitleTier(titleTierObj.none)\n    } else if (estLua >= 5000 && estLua < 25000) {\n      setTitleTier(titleTierObj.earth)\n    } else if (estLua >= 25000 && estLua < 100000) {\n      setTitleTier(titleTierObj.moon)\n    } else if (estLua >= 100000 && estLua < 250000) {\n      setTitleTier(titleTierObj.mars)\n    } else if (estLua >= 250000 && estLua < 400000) {\n      setTitleTier(titleTierObj.galaxy)\n    } else if (isExclusive) {\n      setTitleTier(titleTierObj.galaxyPlus)\n    } else {\n      setTitleTier(titleTierObj.galaxy)\n    }\n  }, [estLua, isExclusive])\n  return titleTier\n}\n\nexport default useGetTitleOfTier\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLuaIdoContract } from 'hooks/useContract'\nimport { depositIdo } from 'utils/callHelpers'\nimport { ZERO_ADDRESS } from 'config/constants/idos'\n\nconst useDepositIdo = (contractAddress: string, idoIndex: number, payTokenAddress: string) => {\n  const { account } = useWeb3React()\n  const luaIdoContract = useLuaIdoContract(contractAddress)\n  const isNativeToken = payTokenAddress === ZERO_ADDRESS\n\n  const handleDeposit = useCallback(\n    async (amount: string, proofS) => {\n      const txHash = await depositIdo(luaIdoContract, account, amount, idoIndex, isNativeToken, proofS)\n      console.info(txHash)\n    },\n    [account, luaIdoContract, idoIndex, isNativeToken],\n  )\n\n  return { onDeposit: handleDeposit }\n}\n\nexport default useDepositIdo\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { ZERO_ADDRESS } from 'config/constants/idos'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport useWeb3 from './useWeb3'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\nimport useEthBalance from './useEthBalance'\n\nexport const useTokenBalance = (tokenAddress: string, decimals = 18) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const userEthBalance = useEthBalance()\n  const web3 = useWeb3()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf(account).call()\n      setBalance(new BigNumber(res).dividedBy(BIG_TEN.pow(decimals)))\n    }\n    if (tokenAddress === ZERO_ADDRESS) {\n      setBalance(new BigNumber(userEthBalance))\n    }\n\n    if (tokenAddress !== ZERO_ADDRESS && account && tokenAddress) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, web3, fastRefresh, decimals, userEthBalance])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress, web3)\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(res))\n    }\n\n    fetchBalance()\n  }, [web3, tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const web3 = useWeb3()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const walletBalance = await web3.eth.getBalance(account)\n      setBalance(new BigNumber(walletBalance))\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, web3, lastUpdated, setBalance])\n\n  return { balance, refresh: setLastUpdated }\n}\n\nexport default useTokenBalance\n","import { useState, useEffect } from 'react'\n\nconst useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLuaVestingContract } from 'hooks/useContract'\nimport { claimVesting } from 'utils/callHelpers'\n\nconst useClaimVesting = (contractAddress: string) => {\n  const { account } = useWeb3React()\n  const vestingContract = useLuaVestingContract(contractAddress)\n  const handleClaimVesting = useCallback(async () => {\n    const txHash = await claimVesting(vestingContract, account)\n  }, [account, vestingContract])\n\n  if (contractAddress) {\n    return { onClaimVesting: handleClaimVesting }\n  }\n  return {\n    onClaimVesting: () => {},\n  }\n}\n\nexport default useClaimVesting\n","import { useLuaVestingContract } from 'hooks/useContract'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useState, useEffect, useCallback } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useWeb3React } from '@web3-react/core'\n\nexport interface UserVestingInfoType {\n  amount: string\n  claimAtsTime: string\n  claimedAmount: string\n}\n\nexport interface VestingInfo {\n  userVestingInfo: UserVestingInfoType\n}\n\nconst DEFAULT_USERINFO = {\n  amount: '0',\n  claimAtsTime: null,\n  claimedAmount: '0',\n}\n\nconst formatVestingUserInfo = (userInfo: UserVestingInfoType = DEFAULT_USERINFO) => {\n  return {\n    amount: userInfo.amount,\n    claimAtsTime: userInfo.claimAtsTime,\n    claimedAmount: userInfo.claimedAmount,\n  }\n}\n\nconst useVestingInfo = (\n  vestingAddress: string,\n): {\n  vestingData: VestingInfo\n  estimateClaim: (time: any) => Promise<any>\n  refetchDataFromContract: () => any\n  isLoadingVestingInfo: boolean\n} => {\n  const { account } = useWeb3React()\n  // Force the hook to refetch\n  const [refetching, setRefetching] = useState(0)\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState({\n    userVestingInfo: DEFAULT_USERINFO,\n  })\n  const web3 = useWeb3()\n  const vestingContract = useLuaVestingContract(vestingAddress)\n\n  const refetchDataFromContract = useCallback(() => {\n    setRefetching(refetching + 1)\n  }, [refetching])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userVestingInfo = await vestingContract.methods.info(account).call()\n        const formatedVestingInfo = formatVestingUserInfo(userVestingInfo)\n        setData({\n          userVestingInfo: formatedVestingInfo,\n        })\n        setIsLoading(false)\n      } catch (error) {\n        console.log(error, 'fail to fetch vesting info')\n      }\n    }\n\n    if (vestingAddress && vestingContract && account) {\n      fetchData()\n    }\n  }, [vestingContract, web3, account, refetching])\n\n  const estimateClaim = useCallback(\n    async (time) => {\n      try {\n        if (vestingContract) {\n          const estimatedClaim = await vestingContract.methods.estimateClaim(account, time).call()\n          return estimatedClaim\n        }\n        return () => {}\n      } catch (error) {\n        console.log(error, 'fail to fetch estimate claim')\n        return () => {}\n      }\n    },\n    [vestingContract, account],\n  )\n\n  return {\n    vestingData: data,\n    estimateClaim,\n    refetchDataFromContract,\n    isLoadingVestingInfo: isLoading,\n  }\n}\n\nexport default useVestingInfo\n","import { getUtcDateString } from 'utils/formatTime'\n\nconst generateClaimInfo = (claimTime, claimPercent) => {\n  let result = ''\n\n  for (let i = 0; i < claimTime.length; i++) {\n    result += `- Claim (${i + 1}) ${claimPercent[i]}% at ${getUtcDateString(claimTime[i])} \\n`\n  }\n\n  return result\n}\n\nexport default generateClaimInfo\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLuaIdoContract } from 'hooks/useContract'\nimport { claimRewardIdo } from 'utils/callHelpers'\n\nconst useClaimRewardIdo = (contractAddress: string, idoIndex: number) => {\n  const { account } = useWeb3React()\n  const luaIdoContract = useLuaIdoContract(contractAddress)\n  const handleClaimReward = useCallback(\n    async (amount: string, proofS) => {\n      const txHash = await claimRewardIdo(luaIdoContract, account, amount, idoIndex, proofS)\n    },\n    [account, luaIdoContract, idoIndex],\n  )\n\n  return { onClaimReward: handleClaimReward }\n}\n\nexport default useClaimRewardIdo\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nexport interface TimePeriodType {\n  hours: number\n  minutes: number\n  seconds: number\n}\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number): TimePeriodType => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React, { ReactNode } from 'react'\nimport { Button } from 'luastarter-uikits'\n\ninterface CommitButtonProps {\n  onClick(): any\n  symbol: string\n  disabled: boolean\n  isLoading: boolean\n  endIcon: ReactNode\n}\n\nconst CommitButton: React.FC<CommitButtonProps> = ({ onClick, symbol, disabled, ...props }) => {\n  return (\n    <Button mb=\"15px\" mt=\"15px\" width=\"100%\" variant=\"primary\" onClick={onClick} disabled={disabled} {...props}>\n      Commit your {symbol}\n    </Button>\n  )\n}\n\nexport default CommitButton\n","import React, { ReactNode } from 'react'\nimport { Button } from 'luastarter-uikits'\n\ninterface ClaimButtonProps {\n  onClick(): any\n  disabled: boolean\n  isLoading: boolean\n  endIcon: ReactNode\n}\n\nconst ClaimButton: React.FC<ClaimButtonProps> = ({ onClick, disabled, ...props }) => {\n  return (\n    <Button mb=\"15px\" mt=\"15px\" width=\"100%\" variant=\"primary\" onClick={onClick} disabled={disabled} {...props}>\n      Claim your reward\n    </Button>\n  )\n}\n\nexport default ClaimButton\n","import React, { ReactNode, useEffect, useMemo, useState } from 'react'\nimport { Button } from 'luastarter-uikits'\nimport { TimePeriodType } from 'utils/getTimePeriods'\nimport { UserVestingInfoType, VestingInfo } from 'views/Idos/hooks/useVestingInfo'\nimport useTimer from 'hooks/useTimer'\nimport { compareTwoTimestamp } from 'utils/formatTime'\n\ninterface VestingButtonProps {\n  onClick(): any\n  disabled: boolean\n  isLoading: boolean\n  endIcon: ReactNode\n  timeNextClaim: TimePeriodType\n  userVestingInfo: UserVestingInfoType\n  userClaimFirstPercent: boolean\n  idoReceivedAmount: string\n  claimSymbol: string\n  estimatedAmount: string\n  vestingData: VestingInfo\n  isClaimedAllVesting: boolean\n  timeVesting: string[]\n  percentVesting: string[]\n  isReject: boolean\n  userTotalCommitted: string\n}\n\nconst VestingButton: React.FC<VestingButtonProps> = ({\n  onClick,\n  timeNextClaim,\n  disabled,\n  userClaimFirstPercent,\n  userVestingInfo,\n  idoReceivedAmount,\n  claimSymbol,\n  vestingData,\n  estimatedAmount,\n  isClaimedAllVesting,\n  timeVesting,\n  percentVesting,\n  isReject,\n  userTotalCommitted,\n  ...props\n}) => {\n  const { claimAtsTime, claimedAmount } = userVestingInfo\n  const currentTimestamp = useTimer()\n\n  const isCurrentTimeOutOfClaimTimeFrame = useMemo(() => {\n    if (claimAtsTime) {\n      const lastTimeFrame = timeVesting[timeVesting.length - 1]\n      const result = compareTwoTimestamp(currentTimestamp, Number(lastTimeFrame))\n\n      return result\n    }\n\n    return false\n  }, [currentTimestamp, claimAtsTime, timeVesting])\n\n  const isDisableClaimOrRefundButton = useMemo(() => {\n    if (idoReceivedAmount === '0' && claimedAmount === '0' && userTotalCommitted === '0') {\n      return true\n    }\n    return false\n  }, [idoReceivedAmount, claimedAmount, userTotalCommitted])\n\n  const isDisabledButton = useMemo(() => {\n    if (estimatedAmount === '0' || !estimatedAmount) {\n      return true\n    }\n\n    return false\n  }, [estimatedAmount])\n\n  // User not claim anything and current time is out of time frame\n  if (!userClaimFirstPercent && isCurrentTimeOutOfClaimTimeFrame) {\n    return (\n      <Button\n        mb=\"15px\"\n        mt=\"15px\"\n        width=\"100%\"\n        variant=\"primary\"\n        onClick={onClick}\n        {...props}\n        disabled={isDisableClaimOrRefundButton}\n      >\n        {isReject ? 'Refund' : 'Claim reward'}\n      </Button>\n    )\n  }\n  return (\n    <Button mb=\"15px\" mt=\"15px\" width=\"100%\" variant=\"primary\" onClick={onClick} disabled={isDisabledButton} {...props}>\n      {isDisabledButton\n        ? `${timeNextClaim.hours} hour(s) ${timeNextClaim.minutes} minute(s) ${timeNextClaim.seconds} second(s)`\n        : `Claim ${estimatedAmount} ${claimSymbol}`}\n    </Button>\n  )\n}\n\nexport default VestingButton\n","import React, { LegacyRef, ReactElement, useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Button, AutoRenewIcon } from 'luastarter-uikits'\nimport useToast from 'hooks/useToast'\nimport UnlockButton from 'components/UnlockButton'\nimport { ZERO_ADDRESS } from 'config/constants/idos'\nimport { UserVestingInfoType, VestingInfo } from 'views/Idos/hooks/useVestingInfo'\nimport { compareTwoTimestamp } from 'utils/formatTime'\nimport { TimePeriodType } from 'utils/getTimePeriods'\nimport CommitButton from './CommitButton'\nimport ClaimButton from './ClaimButton'\nimport VestingButton from './VestingButton'\nimport { PoolStatus } from '../../types'\n\ninterface ActionButtonProps {\n  poolStatus: PoolStatus\n  isLoadingApproveStatus: boolean\n  onCommit(): any\n  onClaim(): any\n  onClaimVesting(): any\n  disabled: boolean\n  symbol: string\n  isRequestContractAction: boolean\n  isIdoAvailalbeOnChain: boolean\n  isUserDepositMinimumAmount: boolean\n  handleApprove(): any\n  isApproved: boolean\n  paytokenAddress: string\n  maxAmountAllowedLeft: string\n  depositAmount: string\n  isClaimed: boolean\n  minAmount: number\n  payTokenBalance: BigNumber\n  userTotalCommitted: string\n  isShowVesting: boolean\n  timeNextClaim: TimePeriodType\n  idoReceivedAmount: string\n  claimSymbol: string\n  vestingData: VestingInfo\n  estimatedAmount: string\n  isLoadingVestingInfo: boolean\n  isClaimedAllVesting: boolean\n  timeVesting: string[]\n  percentVesting: string[]\n  isReject: boolean\n}\n\nconst ActionButton: React.FC<ActionButtonProps> = ({\n  poolStatus,\n  onClaim,\n  onCommit,\n  symbol,\n  disabled,\n  isApproved,\n  handleApprove,\n  isRequestContractAction,\n  isUserDepositMinimumAmount,\n  paytokenAddress,\n  isIdoAvailalbeOnChain,\n  maxAmountAllowedLeft,\n  depositAmount,\n  isClaimed,\n  isLoadingApproveStatus,\n  minAmount,\n  payTokenBalance,\n  userTotalCommitted,\n  isShowVesting,\n  onClaimVesting,\n  idoReceivedAmount,\n  timeNextClaim,\n  claimSymbol,\n  vestingData,\n  estimatedAmount,\n  isLoadingVestingInfo,\n  isClaimedAllVesting,\n  timeVesting,\n  percentVesting,\n  isReject,\n}): ReactElement | null => {\n  const { account } = useWeb3React()\n  const { toastError } = useToast()\n  const isNativeToken = paytokenAddress === ZERO_ADDRESS\n  const { userVestingInfo } = vestingData\n  const { claimAtsTime } = userVestingInfo\n  const userClaimFirstPercent = useMemo(() => {\n    return claimAtsTime !== '0'\n  }, [claimAtsTime])\n\n  if (!account) {\n    return <UnlockButton />\n  }\n\n  if ((!isIdoAvailalbeOnChain || isClaimed || isLoadingApproveStatus) && !isShowVesting) {\n    return null\n  }\n\n  if (!isApproved && !isNativeToken && poolStatus !== 'closed') {\n    return (\n      <Button\n        mt=\"8px\"\n        width=\"100%\"\n        onClick={handleApprove}\n        isLoading={isRequestContractAction}\n        endIcon={isRequestContractAction && <AutoRenewIcon spin color=\"currentColor\" />}\n      >\n        Approve Contract{' '}\n      </Button>\n    )\n  }\n  if (poolStatus === 'closed') {\n    if (isShowVesting) {\n      if (isLoadingVestingInfo || isClaimedAllVesting) {\n        return null\n      }\n      return (\n        <VestingButton\n          vestingData={vestingData}\n          userVestingInfo={userVestingInfo}\n          timeVesting={timeVesting}\n          percentVesting={percentVesting}\n          estimatedAmount={estimatedAmount}\n          timeNextClaim={timeNextClaim}\n          userClaimFirstPercent={userClaimFirstPercent}\n          claimSymbol={claimSymbol}\n          idoReceivedAmount={idoReceivedAmount}\n          isClaimedAllVesting={isClaimedAllVesting}\n          onClick={() => {\n            // If user already claim 1 time we will call other functi\n            if (!userClaimFirstPercent) {\n              onClaim()\n            } else {\n              onClaimVesting()\n            }\n          }}\n          disabled={userClaimFirstPercent}\n          isLoading={isRequestContractAction}\n          isReject={isReject}\n          userTotalCommitted={userTotalCommitted}\n          endIcon={isRequestContractAction && <AutoRenewIcon spin color=\"currentColor\" />}\n        />\n      )\n    }\n\n    return (\n      <ClaimButton\n        onClick={onClaim}\n        disabled={disabled}\n        isLoading={isRequestContractAction}\n        endIcon={isRequestContractAction && <AutoRenewIcon spin color=\"currentColor\" />}\n      />\n    )\n  }\n\n  if (poolStatus === 'open') {\n    const isMaxAmountEqualZero = maxAmountAllowedLeft === '0'\n    let isDepositAmountTooLarge = false\n    let isDepositAmountTooSmall = false\n    let isDepositAmountLargerThanBalance = false\n    const isDepositAmountInvalid = !depositAmount || depositAmount === '0'\n\n    if (new BigNumber(depositAmount).comparedTo(maxAmountAllowedLeft) > 0) {\n      isDepositAmountTooLarge = true\n    }\n\n    if (new BigNumber(depositAmount).plus(new BigNumber(userTotalCommitted)).comparedTo(minAmount) < 0) {\n      isDepositAmountTooSmall = true\n    }\n\n    if (payTokenBalance.isZero() || new BigNumber(depositAmount).comparedTo(payTokenBalance) > 0) {\n      isDepositAmountLargerThanBalance = true\n    }\n    return (\n      <CommitButton\n        onClick={() => {\n          if (isDepositAmountLargerThanBalance) {\n            toastError('Committed amount is larger than your balance')\n            return\n          }\n          onCommit()\n        }}\n        symbol={symbol}\n        isLoading={isRequestContractAction}\n        endIcon={isRequestContractAction && <AutoRenewIcon spin color=\"currentColor\" />}\n        disabled={\n          isMaxAmountEqualZero ||\n          isDepositAmountTooLarge ||\n          isDepositAmountInvalid ||\n          !isUserDepositMinimumAmount ||\n          isDepositAmountTooSmall\n        }\n      />\n    )\n  }\n\n  return null\n}\n\nexport default ActionButton\n","import { useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\n\n/**\n * Check if user approve to spend the pay token amount or not\n * If the pay token is native token - we can skip this step\n */\nconst useIsApproved = (tokenContract: Contract, spenderAddress: string): [a: boolean, b: () => any, c: boolean] => {\n  const [isApproved, setIsApproved] = useState(false)\n  const [isLoadingApproved, setIsLoadingApproved] = useState(true)\n  const { account } = useWeb3React()\n  const fetchAllowanceData = async () => {\n    try {\n      setIsLoadingApproved(true)\n      const allowance = await tokenContract.methods.allowance(account, spenderAddress).call()\n      const bnAllowance = new BigNumber(allowance)\n      if (bnAllowance.isGreaterThan(0)) {\n        setIsApproved(true)\n        setIsLoadingApproved(false)\n        return null\n      }\n\n      setIsApproved(false)\n      setIsLoadingApproved(false)\n      return null\n    } catch (error) {\n      setIsApproved(false)\n      setIsLoadingApproved(false)\n      console.log(error, 'fail to fetch allowance info of user')\n      return null\n    }\n  }\n\n  useEffect(() => {\n    if (tokenContract && account) {\n      fetchAllowanceData()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [account, spenderAddress])\n\n  return [isApproved, fetchAllowanceData, isLoadingApproved]\n}\n\nexport default useIsApproved\n","import BigNumber from 'bignumber.js'\nimport { ChainId, IdoDetailInfo } from 'views/Idos/types'\nimport lodashFind from 'lodash/find'\nimport lodashGet from 'lodash/get'\nimport { supportIdoNetwork, tierMap } from 'config/constants/idos'\n\nexport const calculateSwapRate = (totalAmountIDO: string | number, totalAmountPay: string | number): string => {\n  if (totalAmountIDO && totalAmountPay) {\n    return new BigNumber(new BigNumber(totalAmountIDO).dividedBy(new BigNumber(totalAmountPay)).toFixed(6)).toString()\n  }\n\n  return null\n}\n\nexport const calculateCommittedAmountPercentage = (\n  totalCommittedAmount: string | number,\n  totalAmountPay: string | number,\n): number => {\n  if (totalCommittedAmount && totalAmountPay) {\n    const result = new BigNumber(totalCommittedAmount)\n      .dividedBy(new BigNumber(totalAmountPay))\n      .multipliedBy(100)\n      .toNumber()\n\n    if (result) {\n      return result\n    }\n  }\n\n  return 0\n}\n\nexport const calculateSwappedAmountPercentage = (\n  swappedAmountPay: string | number,\n  totalAmountIDO: string | number,\n): number => {\n  if (swappedAmountPay && totalAmountIDO) {\n    const result = new BigNumber(swappedAmountPay).dividedBy(new BigNumber(totalAmountIDO)).multipliedBy(100).toNumber()\n\n    if (result) {\n      return result\n    }\n  }\n\n  return 0\n}\n\nexport const getTierName = (tier: number) => {\n  return tierMap[tier]\n}\n\nexport const getIdoSupportedNetwork = (idos: Record<string, IdoDetailInfo[]>): string => {\n  try {\n    const supportedChainId = Object.keys(idos)\n    const supportedNetworkName = supportedChainId.map((chainId) => supportIdoNetwork[chainId])\n    return supportedNetworkName.join(',')\n  } catch (error) {\n    return null\n  }\n}\n\nconst DEFAULT_IDO = {\n  tier: 0,\n  addressIdoContract: '',\n  creator: '',\n  idoToken: {\n    address: '',\n    symbol: null,\n    decimals: null,\n  },\n  payToken: {\n    address: '',\n    symbol: null,\n    decimals: null,\n  },\n  totalAmountIDO: '0',\n  totalAmountPay: '0',\n  maxAmountPay: 0,\n  minAmountPay: 0,\n  projectId: '',\n  claimAt: 0,\n  closeAt: 0,\n  openAt: 0,\n  swappedAmountIDO: '0',\n  swappedAmountPay: '0',\n  totalCommittedAmount: '0',\n  index: 0,\n  chainId: '',\n  vestingContract: '',\n}\n\nexport const getIdoDataBasedOnChainIdAndTier = (\n  index: Record<number, IdoDetailInfo[]>,\n  chainId: number,\n  userTier: number,\n): IdoDetailInfo => {\n  const allIdos = lodashGet(index, chainId, [])\n  if (allIdos.length === 0) {\n    return DEFAULT_IDO\n  }\n\n  const result = lodashFind(allIdos, (ido) => ido.tier === userTier)\n  if (result) return result\n\n  return DEFAULT_IDO\n}\n\nexport const mapProjectStatus = (status: string) => {\n  if (status === 'closed') {\n    return 'Closed'\n  }\n\n  if (status === 'not open') {\n    return 'In Preparation'\n  }\n\n  return 'Opening'\n}\n\nexport const generateColorForStatusBar = (status: string) => {\n  if (status === 'closed') {\n    return '#353535'\n  }\n\n  if (status === 'open') {\n    return '#7fbfaf'\n  }\n\n  return '#6bc1ff'\n}\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Flex, PocketWatchIcon, Text, Box } from 'luastarter-uikits'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TimeBlock = styled(Flex)`\n  border-radius: 10px;\n  background-color: #1a1a1a;\n  display: flex;\n  width: 33%;\n  height: 100%;\n  margin-right: 4px;\n  padding: 5px;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  @media screen and (max-width: 400px) {\n    line-height: 1;\n  }\n`\n\ninterface Props {\n  suffix: string\n  timeUntil: {\n    hours: number\n    minutes: number\n    seconds: number\n  }\n}\n\nconst Timer: React.FC<Props> = ({ suffix, timeUntil }) => {\n  const { t } = useTranslation()\n  const { hours, minutes, seconds } = timeUntil\n\n  return (\n    <Box\n      height=\"100%\"\n      width=\"100%\"\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n      }}\n    >\n      <Text mb=\"5px\" color=\"#8B8B8B\">\n        {suffix}\n      </Text>\n      <Flex flexDirection=\"row\" width=\"100%\">\n        <TimeBlock>\n          <Text color=\"#C3C3C3\" bold>\n            {hours}\n          </Text>\n          <Text color=\"#8B8B8B\">HOURS</Text>\n        </TimeBlock>\n        <TimeBlock>\n          <Text color=\"#C3C3C3\" bold>\n            {minutes}\n          </Text>\n          <Text color=\"#8B8B8B\">MINS</Text>\n        </TimeBlock>\n        <TimeBlock>\n          <Text color=\"#C3C3C3\" bold>\n            {seconds}\n          </Text>\n          <Text color=\"#8B8B8B\">SECS</Text>\n        </TimeBlock>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default Timer\n","import React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Box, Text, Flex } from 'luastarter-uikits'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { getUtcDateString } from 'utils/formatTime'\nimport Timer from '../Timer'\nimport { PoolStatus } from '../../types'\n\nconst FlexWrapper = styled(Flex)`\n  width: 100%;\n  height: 100%;\n`\n\nconst DateBlock = styled(Box)`\n  border-top-left-radius: 50px;\n  padding: 24px 14px;\n  border-top-right-radius: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: calc(50% - 7px);\n  width: 100%;\n  justify-content: center;\n  text-align: center;\n  margin-bottom: 14px;\n  background: linear-gradient(107.27deg, #f5bd6d -12.7%, #d76700 122.45%);\n  position: relative;\n  @media screen and (max-width: 400px) {\n    height: 125px;\n  }\n\n  &::before {\n    content: '';\n    width: 12px;\n    height: 12px;\n    position: absolute;\n    background-color: #1a1a1a;\n    bottom: 5px;\n    border-radius: 50%;\n    left: 30px;\n  }\n\n  &::after {\n    content: '';\n    width: 12px;\n    height: 12px;\n    position: absolute;\n    background-color: #1a1a1a;\n    bottom: 5px;\n    border-radius: 50%;\n    right: 30px;\n  }\n`\nconst TimerBlock = styled(Box)`\n  width: 100%;\n  height: calc(50% - 7px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  background-color: #282828;\n  border-bottom-left-radius: 50px;\n  border-bottom-right-radius: 50px;\n  padding: 10px 15px;\n  position: relative;\n\n  @media screen and (max-width: 768px) {\n    padding: 40px 15px;\n  }\n\n  @media screen and (max-width: 400px) {\n    height: 125px;\n  }\n\n  &::before {\n    content: '';\n    width: 12px;\n    height: 12px;\n    position: absolute;\n    background-color: #1a1a1a;\n    top: 5px;\n    border-radius: 50%;\n    left: 30px;\n  }\n\n  &::after {\n    content: '';\n    width: 12px;\n    height: 12px;\n    position: absolute;\n    background-color: #1a1a1a;\n    top: 5px;\n    border-radius: 50%;\n    right: 30px;\n  }\n`\n\nconst ConnectDateTime = styled.div`\n  position: relative;\n  &::before {\n    content: '';\n    position: absolute;\n    width: 6px;\n    height: 40px;\n    background-color: #606060;\n    z-index: 1;\n    border-radius: 12px;\n    left: 33px;\n    top: -27px;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    width: 6px;\n    height: 40px;\n    background-color: #606060;\n    z-index: 1;\n    border-radius: 12px;\n    right: 33px;\n    top: -27px;\n  }\n`\n\nconst Title = styled(Text)`\n  font-size: 20px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 24px;\n  }\n`\n\ninterface CountDownProps {\n  openAtSeconds: number\n  closedAtSeconds: number\n  claimAtSeconds: number\n  openAt: number\n  closeAt: number\n  claimAt: number\n  poolStatus: PoolStatus\n}\n\nconst TimerOpen = ({ openAtSeconds }) => {\n  const timeUntilOpen = getTimePeriods(openAtSeconds)\n  return <Timer suffix=\"Open on\" timeUntil={timeUntilOpen} />\n}\n\nconst TimerClose = ({ closedAtSeconds }) => {\n  const timeUntilClosed = getTimePeriods(closedAtSeconds)\n  return <Timer suffix=\"Finish at\" timeUntil={timeUntilClosed} />\n}\n\nconst TimerClaim = ({ claimAtSeconds }) => {\n  const timeUntilClaim = getTimePeriods(claimAtSeconds)\n  return <Timer suffix=\"Claim at\" timeUntil={timeUntilClaim} />\n}\n\nconst TimerCountDown = ({ poolStatus, openAtSeconds, closedAtSeconds, claimAtSeconds }) => {\n  if (poolStatus === 'closed' || poolStatus === null) {\n    return (\n      <Timer\n        suffix=\"Claim time\"\n        timeUntil={{\n          minutes: 0,\n          seconds: 0,\n          hours: 0,\n        }}\n      />\n    )\n  }\n\n  if (poolStatus === 'claim') {\n    return <TimerClaim claimAtSeconds={claimAtSeconds} />\n  }\n\n  if (poolStatus === 'not open' || poolStatus === 'preview') {\n    return <TimerOpen openAtSeconds={openAtSeconds} />\n  }\n\n  return <TimerClose closedAtSeconds={closedAtSeconds} />\n}\n\nconst CountDown: React.FC<CountDownProps> = ({\n  openAtSeconds,\n  closedAtSeconds,\n  claimAtSeconds,\n  openAt,\n  closeAt,\n  claimAt,\n  poolStatus,\n}) => {\n  const { title, date } = useMemo(() => {\n    if (poolStatus === 'not open' || poolStatus === 'preview') {\n      return {\n        title: 'Open on',\n        date: getUtcDateString(openAt),\n      }\n    }\n\n    if (poolStatus === 'open') {\n      return {\n        title: 'Close on',\n        date: getUtcDateString(closeAt),\n      }\n    }\n\n    if (poolStatus === 'claim') {\n      return {\n        title: 'Claim at',\n        date: getUtcDateString(claimAt),\n      }\n    }\n\n    return {\n      title: 'Closed',\n      date: '',\n    }\n  }, [poolStatus, openAt, closeAt, claimAt])\n\n  return (\n    <FlexWrapper flexDirection=\"column\">\n      <DateBlock>\n        <Text color=\"#FFFFFF\">{title}</Text>\n        <Title color=\"#FFFFFF\" bold>\n          {date}\n        </Title>\n      </DateBlock>\n      <ConnectDateTime />\n      <TimerBlock>\n        <TimerCountDown\n          openAtSeconds={openAtSeconds}\n          closedAtSeconds={closedAtSeconds}\n          claimAtSeconds={claimAtSeconds}\n          poolStatus={poolStatus}\n        />\n      </TimerBlock>\n    </FlexWrapper>\n  )\n}\n\nexport default CountDown\n","import React, { useMemo, useState, useCallback, useEffect } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, Flex, Text, Mesage, Box, TertiaryMessage } from 'luastarter-uikits'\nimport { useWeb3React } from '@web3-react/core'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport fromUnixTime from 'date-fns/fromUnixTime'\nimport compareAsc from 'date-fns/compareAsc'\nimport get from 'lodash/get'\nimport useToast from 'hooks/useToast'\nimport useDepositIdo from 'hooks/useDepositIdo'\nimport { useApproveIdo } from 'hooks/useApproveIdo'\nimport { useTokenBalance } from 'hooks/useTokenBalance'\nimport useDeepMemo from 'hooks/useDeepMemo'\nimport useCurrentTime from 'hooks/useTimer'\nimport useClaimVesting from 'hooks/useClaimVesting'\nimport useVestingInfo from 'views/Idos/hooks/useVestingInfo'\nimport generateClaimInfo from 'views/Idos/utils/generateClaimInfo'\nimport { useSecondsUtilTimestamp } from 'views/Idos/hooks/useSecondsUntilCurrent'\nimport useClaimRewardIdo from 'hooks/useClaimRewardIdo'\nimport { useLuaVestingContract } from 'hooks/useContract'\nimport {\n  compareTwoTimestamp,\n  compareWithCurrentDateTime,\n  getUtcDateString,\n  timestampAndCurrentDifference,\n} from 'utils/formatTime'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport ModalInput from 'components/ModalInput'\nimport { IdoDetailInfo, Pool } from 'views/Idos/types'\nimport { ZERO_ADDRESS } from 'config/constants/idos'\nimport { API_IDO_URL } from 'config'\nimport { getERC20Contract } from 'utils/contractHelpers'\nimport { getDecimalAmount, getFullDisplayBalance } from 'utils/formatBalance'\nimport useGetTitleOfTier from 'views/Idos/hooks/useGetTitleOfTier'\nimport ActionButton from './ActionButton'\nimport usePoolStatus from '../../hooks/usePoolStatus'\nimport useIsApproved from '../../hooks/useIsApproved'\nimport { calculateSwapRate, getTierName } from '../helper'\nimport CountDown from './CountDown'\n\nconst CardWrapper = styled(Card)`\n  width: calc(65% - 24px);\n  margin-right: 24px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-right: 0px;\n    margin-bottom: 24px;\n  }\n`\ninterface ShowPoolDataProps {\n  isShowPoolData: boolean\n}\n\nconst InfoText = styled(Text)`\n  color: red;\n  font-size: 11px;\n`\n\nconst BlockTimerWrapper = styled(Box)<ShowPoolDataProps>`\n  width: ${(props) => (props.isShowPoolData ? '35%' : '100%')};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 1800px) {\n    width: ${(props) => (props.isShowPoolData ? '35%' : '100%')};\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-right: 0px;\n  }\n`\n\nconst FlexWrapper = styled(Flex)<ShowPoolDataProps>`\n  width: ${(props) => (props.isShowPoolData ? '45%' : '15%')};\n\n  @media (max-width: 1800px) {\n    margin-top: ${(props) => (props.isShowPoolData ? '24px' : '0px')};\n    width: ${(props) => (props.isShowPoolData ? '100%' : '15%')};\n  }\n\n  @media (max-width: 1500px) {\n    width: ${(props) => (props.isShowPoolData ? '100%' : '25%')};\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n  }\n`\n\ninterface DepositProps {\n  currentPoolData: Pool\n  tierDataOfUser: IdoDetailInfo\n  contractData: IdoDetailInfo\n  selectedUserTier: number\n  userTotalCommitted: string\n  totalAmountUserSwapped: string\n  isAvailalbeOnCurrentNetwork: boolean\n  isLoadingDataFromContract: boolean\n  isLoadingTierInfo: boolean\n  isShowPoolData: boolean\n  isShowTierInfor: boolean\n  titleTier: string\n}\n\nconst Deposit: React.FC<DepositProps> = ({\n  currentPoolData,\n  tierDataOfUser,\n  userTotalCommitted,\n  isAvailalbeOnCurrentNetwork,\n  totalAmountUserSwapped,\n  selectedUserTier,\n  isLoadingDataFromContract,\n  isLoadingTierInfo,\n  isShowPoolData,\n  isShowTierInfor,\n  titleTier,\n}) => {\n  const [value, setValue] = useState('0')\n  const [idoReceivedAmount, setIdoReceivedAmount] = useState('0')\n  const [currentTimeIndex, setCurrentTimeIndex] = useState(null)\n  const [isRequestContractAction, setIsRequestContractAction] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { account, library, chainId: cid } = useWeb3React()\n  const { vestingData, estimateClaim, refetchDataFromContract, isLoadingVestingInfo } = useVestingInfo(\n    tierDataOfUser.vestingContract,\n  )\n  const [estimatedAmount, setEstimatedAmount] = useState(null)\n  const { userVestingInfo } = vestingData\n  const { claimAtsTime, claimedAmount } = userVestingInfo\n  const [currentVestingPercentage, setCurrentVestingPercentage] = useState(0)\n  const luaVestingContract = useLuaVestingContract(tierDataOfUser.vestingContract)\n  const currentTimestamp = useCurrentTime()\n  const paytokenContract = getERC20Contract(library, tierDataOfUser.payToken.address, cid)\n  const [isApproved, fetchAllowanceData, isLoadingApproveStatus] = useIsApproved(\n    paytokenContract,\n    tierDataOfUser.addressIdoContract,\n  )\n  const isNativeToken = tierDataOfUser?.payToken?.address === ZERO_ADDRESS\n  const payTokenBalance = useTokenBalance(tierDataOfUser?.payToken?.address, tierDataOfUser?.payToken?.decimals)\n  const { onApprove } = useApproveIdo(paytokenContract, tierDataOfUser.addressIdoContract)\n  const { onDeposit } = useDepositIdo(\n    tierDataOfUser.addressIdoContract,\n    tierDataOfUser.index,\n    tierDataOfUser.payToken.address,\n  )\n  const { onClaimReward } = useClaimRewardIdo(tierDataOfUser.addressIdoContract, tierDataOfUser.index)\n  const { onClaimVesting } = useClaimVesting(tierDataOfUser.vestingContract)\n  // Data we receive from API\n  const { maxAmountPay, payToken, minAmountPay, idoToken, totalAmountIDO, totalAmountPay, index, projectId } =\n    tierDataOfUser\n  const {\n    openAt,\n    closeAt,\n    claimAt,\n    versionContract,\n    timeVesting,\n    percentVesting,\n    isVesting,\n    isReject,\n    isExclusive,\n    isPresent,\n  } = currentPoolData\n  const [poolStatus, openAtSeconds, closedAtSeconds, claimAtSeconds] = usePoolStatus(currentPoolData)\n\n  const maxAmountAllowedLeft = useMemo(() => {\n    return new BigNumber(maxAmountPay).minus(new BigNumber(userTotalCommitted)).toString()\n  }, [maxAmountPay, userTotalCommitted])\n\n  const isUserDepositMinimumAmount = useMemo(() => {\n    const flag = new BigNumber(userTotalCommitted).plus(new BigNumber(value)).comparedTo(new BigNumber(minAmountPay))\n    if (flag < 0) {\n      return false\n    }\n\n    return true\n  }, [value, userTotalCommitted, minAmountPay])\n  const rate = useMemo(() => {\n    return calculateSwapRate(totalAmountIDO, totalAmountPay)\n  }, [totalAmountIDO, totalAmountPay])\n\n  const currentTimestampInSecond = useMemo(() => {\n    return Math.floor(currentTimestamp / 1000)\n  }, [currentTimestamp])\n\n  const isIdoAvailalbeOnChain = useDeepMemo(() => {\n    const { addressIdoContract } = tierDataOfUser\n\n    return !!addressIdoContract\n  }, [tierDataOfUser])\n\n  // Has vesting function or not\n  const isShowVesting = useMemo(() => {\n    if (versionContract === 1) {\n      return false\n    }\n    if (versionContract === 2 && isVesting) {\n      return true\n    }\n\n    return false\n  }, [versionContract])\n  // Find the next time frame\n  const nextClaimTime = useMemo(() => {\n    if (versionContract === 1) {\n      return null\n    }\n    // We start to compare to each time in the claim time array\n    // If userClaimTime smaller than a timestamp in array we will get that timestamp and consider it as the next claim time\n    if (versionContract === 2 && isVesting) {\n      for (let i = 0; i < timeVesting.length; i++) {\n        const result = compareAsc(currentTimestampInSecond, Number(timeVesting[i]))\n        if (result === -1) {\n          setCurrentTimeIndex(i)\n          setCurrentVestingPercentage(\n            percentVesting.reduce((a, b, _index) => {\n              if (_index < i) {\n                return a + Number(b)\n              }\n\n              return a\n            }, 0),\n          )\n          return timeVesting[i]\n        }\n      }\n    }\n    return null\n  }, [timeVesting, percentVesting, currentTimestampInSecond, isVesting, versionContract])\n\n  const isClaimedAllVesting = useMemo(() => {\n    if (isShowVesting && claimedAmount && idoReceivedAmount && claimedAmount !== '0') {\n      if (getFullDisplayBalance(new BigNumber(claimedAmount), idoToken.decimals) === idoReceivedAmount) {\n        return true\n      }\n    }\n\n    return false\n  }, [claimedAmount, idoReceivedAmount, idoToken, isShowVesting])\n  // If current time is larger than claim time frame\n  const isCurrentTimeOutOfClaimTimeFrame = useMemo(() => {\n    if (isShowVesting && timeVesting && timeVesting.length !== 0) {\n      const lastTimeFrame = timeVesting[timeVesting.length - 1]\n      const result = compareTwoTimestamp(currentTimestamp, Number(lastTimeFrame))\n\n      return result\n    }\n\n    return false\n  }, [currentTimestamp, timeVesting])\n\n  // Calculate the time until next claim\n  const secondsUntilNextClaim = useSecondsUtilTimestamp(nextClaimTime)\n  const timeNextClaim = useMemo(() => {\n    return getTimePeriods(secondsUntilNextClaim)\n  }, [secondsUntilNextClaim])\n  const handleSelectMax = useCallback(() => {\n    setValue(maxAmountAllowedLeft)\n  }, [maxAmountAllowedLeft])\n  const handleChange = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      setValue(e.currentTarget.value.replace(/,/g, '.'))\n    }\n  }, [])\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setIsRequestContractAction(true)\n      await onApprove()\n      fetchAllowanceData()\n      setIsRequestContractAction(false)\n    } catch (e) {\n      setIsRequestContractAction(false)\n      console.error(e)\n    }\n  }, [onApprove, fetchAllowanceData])\n\n  const getClaimProof = useCallback(\n    async (poolId, poolIndex) => {\n      const response = await axios.get(\n        `${API_IDO_URL}/pools/claim-info/${poolId}/${cid}/${poolIndex}/${selectedUserTier}/${account}`,\n      )\n      return response.data\n    },\n    [account, cid, selectedUserTier],\n  )\n\n  useEffect(() => {\n    const fetchReceiveIdoAmount = async () => {\n      try {\n        if (projectId) {\n          const claimProofData = await getClaimProof(projectId, index)\n          const receivedIdoAmount = new BigNumber(claimProofData.finalPay)\n            .multipliedBy(totalAmountIDO)\n            .dividedBy(totalAmountPay)\n          setIdoReceivedAmount(getFullDisplayBalance(receivedIdoAmount, claimProofData.payToken.decimals, 6))\n        }\n      } catch (error) {\n        setIdoReceivedAmount('0')\n        console.log(error)\n      }\n    }\n    // We only fetch the IDO token that user can claimed when pool status is closed and when we successfully load tier info after snapshot\n    if (poolStatus === 'closed' && !isLoadingTierInfo) {\n      fetchReceiveIdoAmount()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [poolStatus, getClaimProof, projectId, index, isLoadingTierInfo])\n\n  useEffect(() => {\n    const fetchEstimatedAmount = async () => {\n      try {\n        const res = await estimateClaim(currentTimestampInSecond)\n        if (res) {\n          setEstimatedAmount(getFullDisplayBalance(res, idoToken.decimals))\n        }\n      } catch (error) {\n        console.log(error, 'fail to fetch estimated amount')\n      }\n    }\n\n    if (account) {\n      fetchEstimatedAmount()\n    }\n  }, [estimateClaim, currentTimestampInSecond, account, idoToken])\n\n  const getCommitProof = useCallback(\n    async (poolId, poolIndex, amount) => {\n      const response = await axios.get(\n        `${API_IDO_URL}/pools/proof-commit/${poolId}/${cid}/${poolIndex}/${selectedUserTier}/${account}/${amount}`,\n      )\n      return response.data\n    },\n    [account, cid, selectedUserTier],\n  )\n\n  const onHandleCommit = useCallback(async () => {\n    try {\n      setIsRequestContractAction(true)\n      const commitedAmmount = getDecimalAmount(new BigNumber(value), payToken.decimals).toString()\n      const response = await getCommitProof(projectId, index, commitedAmmount)\n      const { s, v, r, deadline } = response.proof\n      const proofS = [v, r, s, deadline]\n      await onDeposit(commitedAmmount, proofS)\n      toastSuccess('Successfully Deposited')\n      setValue('0')\n      setIsRequestContractAction(false)\n    } catch (error) {\n      setIsRequestContractAction(false)\n      toastError('Failed To deposit')\n    }\n  }, [onDeposit, value, toastError, toastSuccess, payToken.decimals, getCommitProof, index, projectId])\n\n  const onHandleClaim = useCallback(async () => {\n    try {\n      setIsRequestContractAction(true)\n      const response = await getClaimProof(projectId, index)\n      const { s, v, r, deadline } = response.proof\n      const { finalPay } = response\n      const formattedFinalPay = new BigNumber(finalPay).toString()\n      const proofS = [v, r, s, deadline]\n      await onClaimReward(formattedFinalPay, proofS)\n      setIsRequestContractAction(false)\n      toastSuccess('Reward Claimed Successfully')\n      // It will refetch vesting data from contract when user claim successfully\n      if (isShowVesting) {\n        refetchDataFromContract()\n      }\n    } catch (error) {\n      console.log(error, 'Fail to claim reward')\n      toastError('Failed to claim reward')\n      setIsRequestContractAction(false)\n    }\n  }, [onClaimReward, toastError, toastSuccess, projectId, index, getClaimProof, refetchDataFromContract, isShowVesting])\n\n  const onHandleClaimVesting = useCallback(async () => {\n    try {\n      setIsRequestContractAction(true)\n      await onClaimVesting()\n      setIsRequestContractAction(false)\n      toastSuccess('Reward Claimed Successfully')\n      // Reload data from contract when user claim\n      refetchDataFromContract()\n    } catch (error) {\n      toastError('Fail to claim reward')\n      setIsRequestContractAction(false)\n    }\n  }, [onClaimVesting, toastError, toastSuccess, refetchDataFromContract])\n\n  const isPoolInProgress = useMemo(() => {\n    if (poolStatus === 'open') {\n      return true\n    }\n\n    return false\n  }, [poolStatus])\n\n  const isClaimable = useMemo(() => {\n    const comparedNum = new BigNumber(userTotalCommitted).comparedTo(0)\n\n    if (comparedNum === 1) {\n      return true\n    }\n\n    return false\n  }, [userTotalCommitted])\n  const isClaimed = useMemo(() => {\n    if (poolStatus === 'closed' && totalAmountUserSwapped !== '0' && userTotalCommitted === '0') {\n      return true\n    }\n\n    return false\n  }, [poolStatus, totalAmountUserSwapped, userTotalCommitted])\n  const minimumClaimableAmount = useMemo(() => {\n    if (minAmountPay && totalAmountPay && totalAmountIDO) {\n      const _minAmountPay = new BigNumber(minAmountPay)\n        .multipliedBy(new BigNumber(totalAmountIDO).dividedBy(new BigNumber(totalAmountPay)))\n        .toFixed(6)\n        .toString()\n      return new BigNumber(_minAmountPay).toString()\n    }\n\n    return 0\n  }, [minAmountPay, totalAmountIDO, totalAmountPay])\n  return (\n    <FlexWrapper flexDirection=\"row\" flexWrap=\"wrap\" isShowPoolData={isShowPoolData}>\n      {isExclusive && !idoToken.symbol && !isPresent ? null : (\n        <>\n          {isShowPoolData && (\n            <CardWrapper>\n              <CardBody\n                style={{\n                  height: '100%',\n                  ...(!isAvailalbeOnCurrentNetwork && {\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                  }),\n                }}\n              >\n                {isAvailalbeOnCurrentNetwork ? (\n                  <>\n                    {isShowTierInfor && (\n                      <Flex justifyContent=\"space-between\">\n                        <Text>Your Tier</Text>\n                        <Text bold>{titleTier}</Text>\n                      </Flex>\n                    )}\n                    {minAmountPay !== 0 && (\n                      <Flex justifyContent=\"space-between\">\n                        <Text>Min guaranteed</Text>\n                        <Text bold>\n                          {minimumClaimableAmount} {idoToken.symbol} = {minAmountPay} {payToken.symbol}\n                        </Text>\n                      </Flex>\n                    )}\n                    <Flex justifyContent=\"space-between\">\n                      <Text>Max to commit</Text>\n                      <Text bold>\n                        {isLoadingDataFromContract ? '~' : maxAmountPay} {payToken.symbol}\n                      </Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                      <Text>Price</Text>\n                      <Text bold>\n                        1 {payToken.symbol} / {rate} {idoToken.symbol}\n                      </Text>\n                    </Flex>\n                    <Flex justifyContent=\"space-between\">\n                      <Text>Your committed</Text>\n                      <Text bold>\n                        {userTotalCommitted} {payToken.symbol}\n                      </Text>\n                    </Flex>\n                    {isShowVesting ? (\n                      <>\n                        <Flex justifyContent=\"space-between\">\n                          <Text>Total claimable amount</Text>\n                          <Text bold>\n                            {poolStatus === 'claim' ? 'Processing' : idoReceivedAmount} {idoToken.symbol}\n                          </Text>\n                        </Flex>\n                        <Flex justifyContent=\"space-between\">\n                          <Text>Claimed amount</Text>\n                          <Text bold>\n                            {poolStatus === 'claim'\n                              ? 'Processing'\n                              : getFullDisplayBalance(new BigNumber(claimedAmount), idoToken.decimals, 6)}{' '}\n                            {idoToken.symbol}\n                          </Text>\n                        </Flex>\n                        <TertiaryMessage\n                          hoverContent={generateClaimInfo(timeVesting, percentVesting)}\n                          hoverPlacement=\"top\"\n                          color=\"#C3C3C3\"\n                        >\n                          Claim information\n                        </TertiaryMessage>\n                        {/* When user does not claim any thing even after the claim time frame */}\n                        {claimAtsTime === '0' && !isCurrentTimeOutOfClaimTimeFrame ? (\n                          <Mesage variant=\"warning\" mt=\"18px\">\n                            You will be able to claim: {poolStatus === 'claim' ? 'Processing' : idoReceivedAmount}{' '}\n                            {idoToken.symbol}\n                          </Mesage>\n                        ) : (\n                          nextClaimTime &&\n                          (poolStatus === 'claim' || poolStatus === 'closed') && (\n                            <Mesage variant=\"warning\" mt=\"18px\">\n                              The next vesting time: ({currentTimeIndex + 1}) {getUtcDateString(Number(nextClaimTime))}\n                            </Mesage>\n                          )\n                        )}\n\n                        {/* <Flex justifyContent=\"space-between\">\n                    <Text>Total claimed amount</Text>\n                    <Text bold>\n                      {poolStatus === 'claim'\n                        ? 'Processing'\n                        : new BigNumber(idoReceivedAmount)\n                            .multipliedBy(currentVestingPercentage)\n                            .dividedBy(100)\n                            .toString()}{' '}\n                      {idoToken.symbol}\n                    </Text>\n                  </Flex> */}\n                      </>\n                    ) : (\n                      <>\n                        {(poolStatus === 'claim' || poolStatus === 'closed') && (\n                          <Flex justifyContent=\"space-between\">\n                            <Text>Claimable amount</Text>\n                            <Text bold>\n                              {poolStatus === 'claim' ? 'Processing' : idoReceivedAmount} {idoToken.symbol}\n                            </Text>\n                          </Flex>\n                        )}\n\n                        {(poolStatus === 'claim' || poolStatus === 'closed') && (\n                          <Flex justifyContent=\"space-between\">\n                            <Text>Claimed Amount</Text>\n                            <Text bold>\n                              {isClaimed ? idoReceivedAmount : 0} {idoToken.symbol}\n                            </Text>\n                          </Flex>\n                        )}\n                      </>\n                    )}\n\n                    {isIdoAvailalbeOnChain && (\n                      <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\" mt=\"15px\">\n                        {account && isPoolInProgress && (isNativeToken || (!isNativeToken && isApproved)) && (\n                          <ModalInput\n                            value={value}\n                            onSelectMax={handleSelectMax}\n                            onChange={handleChange}\n                            isLoadingDataFromContract={isLoadingDataFromContract}\n                            max={maxAmountAllowedLeft}\n                            min={new BigNumber(minAmountPay).toString()}\n                            symbol={payToken.symbol}\n                            inputTitle=\"Amount\"\n                            secondaryTitle=\"Available Balance\"\n                            showWarning={false}\n                          />\n                        )}\n                      </Flex>\n                    )}\n                    {isReject && (\n                      <InfoText>\n                        (*) This IDO has been officially cancelled. Please click on Refund button to claim back your\n                        investment at TGE time.\n                      </InfoText>\n                    )}\n                    <ActionButton\n                      isRequestContractAction={isRequestContractAction}\n                      isUserDepositMinimumAmount={isUserDepositMinimumAmount}\n                      isApproved={isApproved}\n                      userTotalCommitted={userTotalCommitted}\n                      poolStatus={poolStatus}\n                      payTokenBalance={payTokenBalance}\n                      isLoadingApproveStatus={isLoadingApproveStatus}\n                      idoReceivedAmount={idoReceivedAmount}\n                      claimSymbol={idoToken.symbol}\n                      isIdoAvailalbeOnChain={isIdoAvailalbeOnChain}\n                      handleApprove={handleApprove}\n                      onCommit={onHandleCommit}\n                      onClaimVesting={onHandleClaimVesting}\n                      onClaim={onHandleClaim}\n                      disabled={!isClaimable}\n                      symbol={payToken.symbol}\n                      isClaimed={isClaimed}\n                      paytokenAddress={payToken.address}\n                      maxAmountAllowedLeft={maxAmountAllowedLeft}\n                      minAmount={minAmountPay}\n                      depositAmount={value}\n                      isShowVesting={isShowVesting}\n                      vestingData={vestingData}\n                      timeNextClaim={timeNextClaim}\n                      estimatedAmount={estimatedAmount}\n                      isLoadingVestingInfo={isLoadingVestingInfo}\n                      isClaimedAllVesting={isClaimedAllVesting}\n                      timeVesting={timeVesting}\n                      percentVesting={percentVesting}\n                      isReject={isReject}\n                    />\n                    {isClaimed && !isShowVesting && (\n                      <Mesage variant=\"warning\">You have claimed your reward, check your wallet balance</Mesage>\n                    )}\n                    {isClaimedAllVesting && isShowVesting && (\n                      <Mesage variant=\"warning\">You have claimed all your reward, check your wallet balance</Mesage>\n                    )}\n                  </>\n                ) : (\n                  <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection=\"column\">\n                    <img src={`${process.env.PUBLIC_URL}/images/empty.svg`} alt=\"empty\" />\n                    <Text color=\"#606060\" textAlign=\"center\">\n                      Switch to correct network to see pool&apos;s information\n                    </Text>\n                  </Flex>\n                )}\n              </CardBody>\n            </CardWrapper>\n          )}\n        </>\n      )}\n      <BlockTimerWrapper isShowPoolData={isShowPoolData}>\n        <CountDown\n          openAt={openAt}\n          closeAt={closeAt}\n          claimAt={claimAt}\n          openAtSeconds={openAtSeconds}\n          closedAtSeconds={closedAtSeconds}\n          poolStatus={poolStatus}\n          claimAtSeconds={claimAtSeconds}\n        />\n      </BlockTimerWrapper>\n    </FlexWrapper>\n  )\n}\n\nexport default Deposit\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { approveIdo } from 'utils/callHelpers'\n\n// Approve a Pay token if pay token is not native token\n// eslint-disable-next-line import/prefer-default-export\nexport const useApproveIdo = (paytokenContract: Contract, idoContractAddress: string) => {\n  const { account, chainId } = useWeb3React()\n  const web3 = useWeb3()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approveIdo(paytokenContract, idoContractAddress, account, chainId)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, paytokenContract, chainId, idoContractAddress])\n\n  return { onApprove: handleApprove }\n}\n","import useDeepMemo from 'hooks/useDeepMemo'\nimport { formatPoolDetail } from 'utils/formatPoolData'\nimport { FormatPool, Pool } from '../types'\n\n/**\n * This hook calculate all tier pool's information\n */\nconst useTotalDataFromAllPools = (currentPoolData: Pool): FormatPool => {\n  const data = useDeepMemo<FormatPool>(() => {\n    const { img: _img, name: _name, description: _description, status: _status, index: _index = {} } = currentPoolData\n    const poolInfoChainId = Object.keys(_index).map((id) => {\n      return formatPoolDetail(_index[id])\n    })\n    const totalPoolData = formatPoolDetail(poolInfoChainId)\n    return {\n      img: _img,\n      name: _name,\n      description: _description,\n      status: _status,\n      ...totalPoolData,\n    }\n  }, [currentPoolData])\n\n  return data\n}\n\nexport default useTotalDataFromAllPools\n","import { format } from 'date-fns'\nimport { Flex, Text } from 'luastarter-uikits'\nimport React, { useEffect, useState } from 'react'\nimport { Pool } from 'views/Idos/types'\nimport styled from 'styled-components'\n\nconst DateStatusWrapper = styled(Flex)`\n  padding-left: 12px;\n  margin-left: 12px;\n  position: relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    width: 1px;\n    height: 90%;\n    background-color: #606060;\n    top: 5%;\n    left: 0;\n  }\n`\n\ninterface PoolDateStatusProps {\n  currentPoolData: Pool\n}\n\nconst PoolDateStatus: React.FC<PoolDateStatusProps> = ({ currentPoolData }) => {\n  const { untilOpen, untilClose, untilClaim, openAt, closeAt, claimAt } = currentPoolData\n  const [dateStamp, setDateStamp] = useState(null)\n  const [dateValue, setDateValue] = useState(null)\n\n  useEffect(() => {\n    if (untilOpen) {\n      setDateStamp('Start date: ')\n      setDateValue(format(new Date(openAt * 1000), 'MM/dd/yyyy'))\n    } else if (untilClose) {\n      setDateStamp('End date: ')\n      setDateValue(format(new Date(closeAt * 1000), 'MM/dd/yyyy'))\n    } else if (untilClaim) {\n      setDateStamp('Claiming date: ')\n      setDateValue(format(new Date(claimAt * 1000), 'MM/dd/yyyy'))\n    }\n  }, [untilOpen, untilClose, untilClaim, openAt, closeAt, claimAt])\n\n  return (\n    <>\n      {dateStamp && (\n        <DateStatusWrapper>\n          <Text mr=\"5px\" color=\"#8B8B8B\">\n            {dateStamp}\n          </Text>\n          <Text color=\"#C3C3C3\">{dateValue}</Text>\n        </DateStatusWrapper>\n      )}\n    </>\n  )\n}\n\nexport default PoolDateStatus\n","import React, { useMemo } from 'react'\nimport {\n  Card,\n  CardBody,\n  Flex,\n  Link,\n  Text,\n  TwitterIcon,\n  MediumIcon,\n  WorldIcon,\n  TelegramIcon,\n  Progress,\n  Box,\n  TertiaryMessage,\n  SecondaryButton,\n  Button,\n  LinkExternal,\n} from 'luastarter-uikits'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport get from 'lodash/get'\nimport { IdoDetailInfo, Pool } from 'views/Idos/types'\nimport getLink from 'views/Idos/utils/getMediaUrl'\nimport { formatNumberWithComma } from 'utils/formatBalance'\nimport { supportIdoNetwork } from 'config/constants/idos'\nimport { useWeb3React } from '@web3-react/core'\nimport {\n  calculateCommittedAmountPercentage,\n  calculateSwappedAmountPercentage,\n  mapProjectStatus,\n  generateColorForStatusBar,\n} from '../helper'\nimport usePoolStatus from '../../hooks/usePoolStatus'\nimport useTotalDataFromAllPools from '../../hooks/useTotalDataFromAllPools'\nimport PoolDateStatus from './PoolDateStatus'\n\nconst IconWrapper = styled.a`\n  margin-right: ${(props) => (props['last-child'] === 'true' ? '0' : '14px')};\n  border-right: ${(props) => (props['last-child'] === 'true' ? 'none' : '1px solid #606060')};\n  padding-right: ${(props) => (props['last-child'] === 'true' ? '0' : '14px')};\n  cursor: pointer;\n`\nconst PoolInfoBlock = styled.div`\n  width: calc(80% - 10px);\n`\ninterface StatusBarProps {\n  status: string\n}\n\nconst StatusBar = styled(Box)<StatusBarProps>`\n  background-color: red;\n  border-radius: 50px;\n  padding: 8px 16px;\n  display: flex;\n  font-weight: 700;\n  display: inline-block;\n  justify-content: center;\n  font-size: 12px;\n  align-items: center;\n  color: #8b8b8b;\n  background-color: ${(props) => generateColorForStatusBar(props.status)};\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 12px;\n  }\n`\n\nconst ImageContainer = styled.img`\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  background-color: #e9e9e9;\n  margin-right: 10px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 70px;\n    height: 70px;\n  }\n`\nconst Title = styled(Text)`\n  font-size: 20px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    font-size: 24px;\n  }\n`\n\nconst CapColumnWrapper = styled(Flex)`\n  width: 50%;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 25%;\n  }\n`\n\nconst SocialLinkWrapper = styled(Flex)`\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    justify-content: flex-end;\n  }\n`\n\nconst PoolTag = styled(Flex)`\n  margin-top: 5px;\n  @media screen and (max-width: 768px) {\n    margin-bottom: 15px;\n  }\n`\n\nconst PoolWrapper = styled(Flex)`\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    width: 70%;\n  }\n`\n\nconst AccessColumnWrapper = styled(Flex)`\n  width: 50%;\n  align-items: flex-end;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: 15%;\n    align-items: flex-start;\n  }\n`\n\nconst ProcessColumnWrapper = styled(Flex)`\n  margin-top: 12px;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0px;\n    width: 70%;\n  }\n`\nexport const YellowCard = styled(Box)`\n  box-sizing: border-box;\n  display: inline-block;\n  background-color: rgba(225, 169, 63, 0.3);\n  color: #fabc46;\n  font-weight: bold;\n  border-radius: 16px;\n  padding: 8px 16px;\n  transition: background-color 0.2s, opacity 0.2s;\n  font-size: 12px;\n  align-self: end;\n  text-align: center;\n`\n\nconst ProcessAmountWrapper = styled(Flex)`\n  flex-direction: column;\n  align-items: center;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n  @media screen and (max-width: 768px) {\n    align-items: flex-start;\n  }\n`\nconst InfoText = styled(Text)`\n  color: red;\n  font-size: 11px;\n`\n\nconst CardWrapper = styled(Card)<CardWrapperProps>`\n  width: ${(props) => (props.isShowPoolData ? 'calc(55% - 24px)' : '85%')};\n  margin-right: 24px;\n\n  @media (max-width: 1800px) {\n    width: ${(props) => (props.isShowPoolData ? '100%' : 'calc(85% - 24px)')};\n    margin-right: ${(props) => (props.isShowPoolData ? '0px' : '24px')};\n  }\n\n  @media (max-width: 1500px) {\n    width: ${(props) => (props.isShowPoolData ? '100%' : 'calc(75% - 24px)')};\n  }\n\n  @media (max-width: 1100px) {\n    margin-right: ${(props) => (props.isShowPoolData ? '0px' : '24px')};\n  }\n\n  @media (max-width: 800px) {\n    width: 100%;\n    margin-right: 0px;\n    margin-bottom: ${(props) => (props.isShowPoolData ? '0px' : '24px')};\n  }\n`\n\nconst PoolInfoSocialBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-self: flex-start;\n`\n\nconst SecondaryButtonPool = styled(SecondaryButton)`\n  width: auto;\n  margin-bottom: 0;\n  height: 28px;\n  margin-left: 10px;\n`\n\nconst SecondaryButtonWhite = styled(SecondaryButtonPool)`\n  border-color: #fffcf6;\n`\n\nconst ExclusiveButton = styled(SecondaryButtonPool)`\n  border: none;\n  background-color: #606060;\n  padding: 8px 16px;\n  width: auto;\n`\n\ninterface CardWrapperProps {\n  isShowPoolData: boolean\n}\ninterface PoolSummaryProps {\n  currentPoolData: Pool\n  tierDataOfUser: IdoDetailInfo\n  contractData: IdoDetailInfo\n  isAvailalbeOnCurrentNetwork: boolean\n  isShowPoolData: boolean\n  isShowTierInfor: boolean\n}\n/**\n * In Pool summary component, we get live data from contract\n * and fixed data from API\n */\nconst PoolSummary: React.FC<PoolSummaryProps> = ({\n  currentPoolData,\n  tierDataOfUser,\n  contractData,\n  isShowPoolData,\n  isShowTierInfor,\n  isAvailalbeOnCurrentNetwork,\n}) => {\n  const { account } = useWeb3React()\n  const [poolStatus, openAtSeconds, closedAtSeconds, claimAtSeconds] = usePoolStatus(currentPoolData)\n  const { img, name, description, totalAmountIDO, payToken, idoToken } = useTotalDataFromAllPools(currentPoolData)\n  const { socials, timeVesting, percentVesting, versionContract, isVesting } = currentPoolData\n  const { whitelistLink, isWhitelist, isExclusive, isPresent } = currentPoolData\n  const { totalCommittedAmount, totalAmountPay, swappedAmountIDO } = contractData\n  const totalCommitedPercentage = useMemo(() => {\n    if (totalCommittedAmount && totalAmountPay) {\n      return calculateCommittedAmountPercentage(totalCommittedAmount, totalAmountPay)\n    }\n\n    return 0\n  }, [totalCommittedAmount, totalAmountPay])\n\n  const isShowVesting = useMemo(() => {\n    if (isVesting && versionContract === 2 && tierDataOfUser.vestingContract) {\n      return true\n    }\n\n    return false\n  }, [isVesting, versionContract])\n\n  // const calculatedSwappedAmount = useMemo(() => {\n  //   if (isShowVesting) {\n\n  //   }\n\n  //   return swappedAmountIDO\n  // }, [swappedAmountIDO, isShowVesting])\n\n  const totalPayTokenCommited = useMemo(() => {\n    if (totalCommittedAmount !== null && swappedAmountIDO !== null) {\n      return new BigNumber(totalCommittedAmount).plus(new BigNumber(swappedAmountIDO)).toFixed(2)\n    }\n\n    return '0'\n  }, [totalCommittedAmount, swappedAmountIDO])\n  const totalSwapAmountPercentage = useMemo(() => {\n    if (swappedAmountIDO && totalAmountIDO) {\n      return calculateSwappedAmountPercentage(swappedAmountIDO, totalAmountIDO)\n    }\n\n    return 0\n  }, [swappedAmountIDO, totalAmountIDO])\n  // We will consider pool is open when pool still allows user to commit money and current time is < than claim time\n  const isPoolInProgress = useMemo(() => {\n    if (poolStatus === 'open' || (poolStatus === 'claim' && claimAtSeconds > 0)) {\n      return true\n    }\n\n    return false\n  }, [poolStatus, claimAtSeconds])\n\n  const isPoolOpen = useMemo(() => {\n    if (poolStatus === 'not open') {\n      return false\n    }\n\n    return true\n  }, [poolStatus])\n  return (\n    <CardWrapper isShowPoolData={isShowPoolData}>\n      <CardBody\n        style={{\n          height: 'auto',\n        }}\n      >\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" flexWrap=\"wrap\">\n          <PoolWrapper mb=\"15px\" alignItems=\"center\" flex=\"1\">\n            <ImageContainer src={img} alt=\"img\" width=\"30%\" />\n            <PoolInfoBlock>\n              <Title bold>{name}</Title>\n              {isShowPoolData && (\n                <Flex alignItems=\"center\">\n                  <StatusBar status={poolStatus}>{mapProjectStatus(poolStatus)}</StatusBar>\n                  <PoolDateStatus currentPoolData={currentPoolData} />\n                </Flex>\n              )}\n            </PoolInfoBlock>\n          </PoolWrapper>\n          <PoolInfoSocialBlock>\n            <SocialLinkWrapper marginBottom=\"5px\" alignItems=\"center\">\n              <IconWrapper href={getLink(socials, 'TELEGRAM')} target=\"_blank\">\n                <TelegramIcon />\n              </IconWrapper>\n              <IconWrapper href={getLink(socials, 'TWITTER')} target=\"_blank\">\n                <TwitterIcon />\n              </IconWrapper>\n              <IconWrapper href={getLink(socials, 'MEDIUM')} target=\"_blank\">\n                <MediumIcon />\n              </IconWrapper>\n              <IconWrapper href={getLink(socials, 'FORUM')} target=\"_blank\" last-child=\"true\">\n                <WorldIcon />\n              </IconWrapper>\n            </SocialLinkWrapper>\n            <PoolTag>\n              {get(currentPoolData, 'network', []).map((network) => {\n                return <YellowCard key={network}>{network}</YellowCard>\n              })}\n              {isExclusive ? (\n                <ExclusiveButton scale=\"sm\" mb=\"15px\">\n                  <Text fontSize=\"10px\" color=\"#FABC46\" fontWeight=\"bold\">\n                    EXCLUSIVE POOL\n                  </Text>\n                </ExclusiveButton>\n              ) : (\n                <>\n                  {!isWhitelist ? (\n                    <SecondaryButtonPool scale=\"sm\" mb=\"15px\">\n                      <Text fontSize=\"10px\" color=\"#FABC46\" fontWeight=\"bold\">\n                        TIER MEMBER\n                      </Text>\n                    </SecondaryButtonPool>\n                  ) : (\n                    <SecondaryButtonWhite scale=\"sm\" mb=\"15px\">\n                      <Text fontSize=\"10px\" color=\"#FFFCF6\" fontWeight=\"bold\">\n                        WHITELIST MEMBER\n                      </Text>\n                    </SecondaryButtonWhite>\n                  )}\n                </>\n              )}\n            </PoolTag>\n          </PoolInfoSocialBlock>\n        </Flex>\n        <Text>{description}</Text>\n        {isShowPoolData && (\n          <Flex justifyContent=\"space-between\" mb=\"10px\" mt=\"15px\" alignItems=\"flex-start\" flexWrap=\"wrap\">\n            <CapColumnWrapper alignItems=\"flex-start\" flexDirection=\"column\">\n              <Text>Cap</Text>\n              <Text color=\"primary\" bold fontSize=\"18px\">\n                {formatNumberWithComma(totalAmountIDO, true)} {idoToken?.symbol}\n              </Text>\n            </CapColumnWrapper>\n            <ProcessColumnWrapper flexDirection=\"column\">\n              <Flex justifyContent=\"space-between\" mb=\"3px\">\n                <Box>\n                  {isPoolInProgress || !isPoolOpen ? (\n                    <ProcessAmountWrapper justifyContent=\"flex-start\">\n                      {isShowTierInfor ? (\n                        <TertiaryMessage\n                          hoverContent=\"You can still commit &amp; own a guaranteed share of the token IDO (except for tier None), regardless of the percentage shown.\"\n                          hoverPlacement=\"top\"\n                        >\n                          Commit Process\n                        </TertiaryMessage>\n                      ) : (\n                        <Text>Commit Process</Text>\n                      )}\n                      <Text color=\"primary\" bold fontSize=\"18px\">\n                        &nbsp;{formatNumberWithComma(totalCommittedAmount, true)}/\n                        {formatNumberWithComma(totalAmountPay, true)} {payToken?.symbol}\n                      </Text>\n                    </ProcessAmountWrapper>\n                  ) : (\n                    <ProcessAmountWrapper justifyContent=\"flex-start\">\n                      <Text>Swap Process</Text>\n                      <Text color=\"primary\" bold fontSize=\"18px\">\n                        &nbsp;{formatNumberWithComma(swappedAmountIDO, true)}/\n                        {formatNumberWithComma(totalAmountIDO, true)} {idoToken?.symbol}\n                      </Text>\n                    </ProcessAmountWrapper>\n                  )}\n                </Box>\n                <Text color=\"primary\" bold fontSize=\"18px\">\n                  {isPoolInProgress || !isPoolOpen\n                    ? totalCommitedPercentage.toFixed(2)\n                    : totalSwapAmountPercentage.toFixed(2)}\n                  %\n                </Text>\n              </Flex>\n              <Progress\n                key={poolStatus}\n                variant=\"round\"\n                scale=\"sm\"\n                primaryStep={(isPoolInProgress || !isPoolOpen) && totalCommitedPercentage}\n                secondaryStep={!isPoolInProgress && totalSwapAmountPercentage}\n              />\n            </ProcessColumnWrapper>\n          </Flex>\n        )}\n        {isShowPoolData && isShowTierInfor && !isExclusive && (\n          <InfoText>\n            (*) You can still commit &amp; own a guaranteed share of the token IDO (except for tier None), regardless of\n            the percentage shown.\n          </InfoText>\n        )}\n        {!isShowTierInfor && whitelistLink && (\n          <InfoText>\n            (*) Pool for WHITELIST WINNERS ONLY. If you are not on the&nbsp;\n            <a style={{ textDecoration: 'underline' }} href={whitelistLink} target=\"_blank\" rel=\"noreferrer\">\n              list\n            </a>\n            , you can NOT commit successfully.\n          </InfoText>\n        )}\n        {isShowPoolData && !account && (\n          <InfoText>\n            (*) Connect your wallet to LuaStarter at least 3 days before the IDO opens to complete your registration.\n          </InfoText>\n        )}\n        {isExclusive && !tierDataOfUser?.idoToken.symbol && !isPresent && (\n          <InfoText>\n            (*) NOT eligible for the exclusive pool, please upgrade to Tier Galaxy or Galaxy Plus to join!\n          </InfoText>\n        )}\n      </CardBody>\n    </CardWrapper>\n  )\n}\n\nexport default PoolSummary\n","import React from 'react'\nimport { Flex, Button, Text, Box, Link } from 'luastarter-uikits'\nimport uniqueId from 'lodash/uniqueId'\nimport styled from 'styled-components'\nimport { Pool } from 'views/Idos/types'\n\nconst ProjectInfoWrapper = styled(Box)`\n  border-top-right-radius: 30px;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n  margin-bottom: 0px;\n  padding: 24px;\n  background-color: #282828;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-right: 24px;\n    margin-bottom: 40px;\n  }\n`\n\nconst LinkWrapper = styled(Flex)`\n  border-bottom: 1px solid #353535;\n  padding-bottom: 14px;\n`\n\nconst LinkRef = styled(Flex)`\n  padding-left: 14px;\n  padding-right: 14px;\n  align-items: flex-start;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    border-right: none;\n  }\n\n  &:not(:last-of-type) {\n    border-right: 1px solid #353535;\n  }\n`\n\ninterface ProjectInfoProps {\n  currentPoolData: Pool\n}\n\nconst ProjectInfo: React.FC<ProjectInfoProps> = ({ currentPoolData }) => {\n  const { projectDetail, links } = currentPoolData\n  return (\n    <ProjectInfoWrapper>\n      <LinkWrapper flexWrap=\"wrap\">\n        {Array.isArray(links) &&\n          links.map((item, index) => {\n            return (\n              // eslint-disable-next-line react/no-array-index-key\n              <LinkRef key={`${item.link}-${index}`}>\n                <Link\n                  href={item.link}\n                  target=\"_blank\"\n                  style={{\n                    wordBreak: 'break-all',\n                  }}\n                >\n                  {item.label}\n                </Link>\n              </LinkRef>\n            )\n          })}\n      </LinkWrapper>\n      <Text\n        mt=\"20px\"\n        style={{\n          whiteSpace: 'pre-line',\n        }}\n      >\n        {projectDetail}\n      </Text>\n    </ProjectInfoWrapper>\n  )\n}\n\nexport default ProjectInfo\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Flex, CopyIcon, Text, Box, IconButton } from 'luastarter-uikits'\nimport styled from 'styled-components'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport useToast from 'hooks/useToast'\nimport { Pool } from 'views/Idos/types'\nimport { getUtcDateString } from 'utils/formatTime'\nimport { formatNumberWithComma } from 'utils/formatBalance'\nimport useTotalDataFromAllPools from '../../hooks/useTotalDataFromAllPools'\n\nconst ProjectInfoWrapper = styled(Box)`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding: 24px;\n  border-top-right-radius: 30px;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n  height: 450px;\n  background-color: #282828;\n  margin-bottom: 0px;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-right: 24px;\n    margin-bottom: 40px;\n  }\n`\n\ninterface PoolInfoProps {\n  currentPoolData: Pool\n}\n\nconst PoolInfo: React.FC<PoolInfoProps> = ({ currentPoolData }) => {\n  const { totalAmountIDO, openAt, closeAt, addressIdoContract, totalAmountPay, payToken } =\n    useTotalDataFromAllPools(currentPoolData)\n  const { toastSuccess } = useToast()\n\n  const calculatedPrice = useMemo(() => {\n    if (totalAmountIDO && totalAmountPay) {\n      return new BigNumber(new BigNumber(totalAmountPay).div(new BigNumber(totalAmountIDO)).toFixed(8)).toString()\n    }\n\n    return null\n  }, [totalAmountIDO, totalAmountPay])\n\n  return (\n    <ProjectInfoWrapper>\n      <Flex flexDirection=\"column\" mb=\"10px\">\n        <Text color=\"#8B8B8B\">Pool opens</Text>\n        <Text color=\"#C3C3C3\" bold>\n          {getUtcDateString(openAt)}\n        </Text>\n      </Flex>\n      <Flex flexDirection=\"column\" mb=\"10px\">\n        <Text color=\"#8B8B8B\">Pool closes</Text>\n        <Text color=\"#C3C3C3\" bold>\n          {getUtcDateString(closeAt)}\n        </Text>\n      </Flex>\n      <Flex flexDirection=\"column\" mb=\"10px\">\n        <Text color=\"#8B8B8B\">\n          Pool Address{' '}\n          <span>\n            <CopyToClipboard text={addressIdoContract} onCopy={() => toastSuccess('Copied')}>\n              <IconButton\n                variant=\"text\"\n                style={{\n                  height: 'auto',\n                  width: 'auto',\n                }}\n              >\n                <CopyIcon color=\"primary\" width=\"24px\" />\n              </IconButton>\n            </CopyToClipboard>\n          </span>{' '}\n        </Text>\n        <Text\n          color=\"#C3C3C3\"\n          bold\n          style={{\n            wordBreak: 'break-all',\n          }}\n        >\n          {addressIdoContract}\n        </Text>\n      </Flex>\n      <Flex flexDirection=\"column\" mb=\"10px\">\n        <Text color=\"#8B8B8B\">Total to raise</Text>\n        <Text color=\"#C3C3C3\" bold>\n          {formatNumberWithComma(totalAmountPay)} {payToken?.symbol}\n        </Text>\n      </Flex>\n      <Flex flexDirection=\"column\">\n        <Text color=\"#8B8B8B\">Price</Text>\n        <Text color=\"#C3C3C3\" bold>\n          {calculatedPrice} {payToken?.symbol}\n        </Text>\n      </Flex>\n    </ProjectInfoWrapper>\n  )\n}\n\nexport default PoolInfo\n","import React, { useCallback, useMemo } from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex, Text, Box, AddIcon, IconButton, CopyIcon, useTooltip } from 'luastarter-uikits'\nimport styled from 'styled-components'\nimport useToast from 'hooks/useToast'\nimport { Pool } from 'views/Idos/types'\nimport useTotalDataFromAllPools from '../../hooks/useTotalDataFromAllPools'\n\nconst TokenInfoWrapper = styled(Box)`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  border-top-right-radius: 30px;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n  background-color: #282828;\n  height: 450px;\n  padding: 24px;\n  margin-bottom: 40px;\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    margin-right: 24px;\n  }\n`\nconst StyledButton = styled.button`\n  background: linear-gradient(to right, #f1b90c, #f0b90b);\n  border-radius: 15px;\n  font-size: 16px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  padding: 10px 0px;\n  color: #353535;\n  font-weight: 700;\n  box-shadow: 1px 0 2px #ff1baf5d;\n  border: none;\n  cursor: pointer;\n  &:active:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled) {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n`\n\ninterface TokenInfoProps {\n  currentPoolData: Pool\n}\n\nconst TokenInfo: React.FC<TokenInfoProps> = ({ currentPoolData }) => {\n  const { chainId } = useWeb3React()\n  const { index } = currentPoolData\n  const { name, idoToken = { address: '', symbol: '', decimals: '' }, img } = useTotalDataFromAllPools(currentPoolData)\n  const { address, symbol, decimals } = idoToken\n  const { toastSuccess, toastError } = useToast()\n  const idoChainId = useMemo(() => {\n    if (index) {\n      return Object.keys(index)\n    }\n\n    return []\n  }, [index])\n  // eslint-disable-next-line consistent-return\n  const onAddToken = useCallback(async () => {\n    if (idoChainId.filter((cid) => Number(cid) === chainId).length !== 0) {\n      const provider = (window as WindowChain).ethereum\n      if (provider) {\n        try {\n          await provider.request({\n            method: 'wallet_watchAsset',\n            params: {\n              type: 'ERC20',\n              options: {\n                address,\n                symbol,\n                decimals,\n                image: img,\n              },\n            },\n          })\n          return true\n        } catch (error) {\n          console.error(error)\n          return false\n        }\n      } else {\n        console.error(`Can't add token`)\n        return false\n      }\n    } else {\n      toastError('Wrong network')\n    }\n  }, [address, symbol, decimals, img, idoChainId, chainId, toastError])\n\n  return (\n    <TokenInfoWrapper>\n      <Flex flexDirection=\"column\" mb=\"10px\">\n        <Text color=\"#8B8B8B\">Name</Text>\n        <Text color=\"#C3C3C3\" bold>\n          {name}\n        </Text>\n      </Flex>\n      <Flex flexDirection=\"column\" mb=\"10px\">\n        <Text color=\"#8B8B8B\">Token symbol</Text>\n        <Text color=\"#C3C3C3\" bold>\n          {idoToken?.symbol}\n        </Text>\n      </Flex>\n      <Flex flexDirection=\"column\" mb=\"10px\">\n        <Text color=\"#8B8B8B\">\n          Token Address{' '}\n          <span>\n            <CopyToClipboard text={idoToken?.address} onCopy={() => toastSuccess('Copied')}>\n              <IconButton\n                variant=\"text\"\n                style={{\n                  height: 'auto',\n                  width: 'auto',\n                }}\n              >\n                <CopyIcon color=\"primary\" width=\"24px\" />\n              </IconButton>\n            </CopyToClipboard>\n          </span>{' '}\n        </Text>\n        <Text\n          color=\"#C3C3C3\"\n          bold\n          style={{\n            wordBreak: 'break-all',\n          }}\n        >\n          {idoToken?.address}\n        </Text>\n      </Flex>\n      <StyledButton onClick={onAddToken}>\n        <AddIcon color=\"#353535\" mr=\"5px\" />\n        Add token\n      </StyledButton>\n    </TokenInfoWrapper>\n  )\n}\n\nexport default TokenInfo\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'luastarter-uikits'\n\nexport interface ExpandableButton {\n  onClick?: () => void\n  expanded?: boolean\n  disabled?: boolean\n}\n\nconst Wrapper = styled.div<{ disabled: boolean }>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n\n  svg {\n    fill: #fabc46;\n    opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n  }\n`\n\nconst ExpandableButton: React.FC<ExpandableButton> = ({ onClick, expanded, disabled }) => {\n  return (\n    <Wrapper\n      aria-label=\"Hide or show expandable content\"\n      role=\"button\"\n      onClick={() => {\n        if (!disabled) {\n          onClick()\n        }\n      }}\n      disabled={disabled}\n    >\n      <Text\n        color=\"primary\"\n        bold\n        style={{\n          opacity: disabled ? 0.5 : 1,\n        }}\n      >\n        Higher Tier\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableButton\n","import React, { useState, useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { useSelector } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { selectUserNextTier } from 'state/profile'\n\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  Image,\n  Button,\n  SecondaryMessage,\n  Box,\n  LinkExternal,\n  TertiaryMessage,\n} from 'luastarter-uikits'\nimport { formatPoolTotalTierByChainID } from 'utils/formatPoolData'\nimport { formatNumberWithComma } from 'utils/formatBalance'\nimport { IdoDetailInfo, Pool } from 'views/Idos/types'\nimport { TIER_HOVER_CONTENT } from 'config/constants/idos'\nimport { Tier } from 'state/types'\nimport ExpandableButtonComponent from '../ExpandableButton'\n\ninterface TierProps {\n  data: IdoDetailInfo\n  userTier: number\n  disabledBuyMore: boolean\n  nextTier: { [key: number]: Tier }\n}\n\nconst ExpandingWrapper = styled(Box)<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n  margin-top: 14px;\n`\n\nconst ImageContainer = styled.img`\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  margin-right: 14px;\n`\nconst Divider = styled.div`\n  background-color: #353535;\n  height: 2px;\n  margin: 14px auto;\n  width: 100%;\n`\n\nconst TierContainer = styled(Text)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 4px 10px;\n  background: #353535;\n  border-radius: 24px;\n  color: #8b8b8b;\n`\n\nconst TierHeaderWrapper = styled(Flex)``\n\nconst TierInformationWrapper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-top-right-radius: 30px;\n  border-bottom-right-radius: 30px;\n  border-bottom-left-radius: 30px;\n  background-color: #282828;\n  padding: 24px;\n  margin-bottom: 40px;\n  width: 100%;\n`\n\nconst CardBodyWrapper = styled(CardBody)`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst TierCardContainer = styled(Card)`\n  width: calc(25% - 20px);\n  margin-bottom: 15px;\n  background-color: #1a1a1a;\n\n  @media screen and (max-width: 1500px) {\n    width: calc(50% - 20px);\n    margin-right: 20px;\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: 100%;\n  }\n`\n\nconst TierCardWrapper = styled(Flex)`\n  justify-content: space-between;\n  flex-wrap: wrap;\n\n  @media screen and (max-width: 1500px) {\n    justify-content: center;\n  }\n`\n\nconst TIER_INFO = {\n  '1': {\n    name: 'Earth',\n    description: 'Tier requirement: 5,000 LUA',\n    icon: `${process.env.PUBLIC_URL}/images/earth.svg`,\n    CTA: (lua) => (lua ? `${lua} LUA to JOIN IDO` : `LUA to JOIN IDO`),\n    CTA2: (tomo) => (tomo ? `${tomo} TOMO to JOIN IDO` : `TOMO to JOIN IDO`),\n  },\n  '2': {\n    name: 'Moon',\n    description: 'Tier requirement: 25,000 LUA',\n    icon: `${process.env.PUBLIC_URL}/images/moon.svg`,\n    CTA: (lua) => (lua ? `${lua} LUA to reach tier 2` : `LUA to fly to the Moon`),\n    CTA2: (tomo) => (tomo ? `${tomo} TOMO to reach tier 2` : `TOMO to fly to the Moon`),\n  },\n  '3': {\n    name: 'Mars',\n    description: 'Tier requirement: 100,000 LUA',\n    icon: `${process.env.PUBLIC_URL}/images/mars.svg`,\n    CTA: (lua) => (lua ? `${lua} LUA to reach tier 3` : `LUA to fly to the Moon`),\n    CTA2: (tomo) => (tomo ? `${tomo} TOMO to reach tier 3` : `TOMO to fly to the Moon`),\n  },\n  '4': {\n    name: 'Galaxy',\n    description: 'Tier requirement: 250,000 LUA',\n    icon: `${process.env.PUBLIC_URL}/images/galaxy.svg`,\n    CTA: (lua) => (lua ? `${lua} LUA to reach tier 4` : `LUA to BREAK BORDER`),\n    CTA2: (tomo) => (tomo ? `${tomo} TOMO to reach tier 4` : `TOMO to fly to the Moon`),\n  },\n}\n\n// We have different layout for PC and Mobile/tablet\nconst TierCard: React.FC<TierProps> = ({\n  data: { tier, totalAmountIDO, totalAmountPay, totalCommittedAmount, idoToken = {}, payToken = {}, swappedAmountPay },\n  userTier,\n  nextTier,\n  disabledBuyMore,\n}) => {\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n  const { chainId } = useWeb3React()\n  const addLiquidityUrl = useMemo(() => {\n    if (chainId === 88) {\n      return 'https://app.luaswap.org/#/add/0x7262fa193e9590B2E075c3C16170f3f2f32F5C74/TOMO'\n    }\n\n    if (chainId === 1) {\n      return 'https://app.luaswap.org/#/add/0x05D3606d5c81EB9b7B18530995eC9B29da05FaBa/0xB1f66997A5760428D3a87D68b90BfE0aE64121cC'\n    }\n\n    return 'https://app.luaswap.org/#/pool'\n  }, [chainId])\n  const calculatedPrice = useMemo(() => {\n    if (totalAmountIDO && totalAmountPay) {\n      return new BigNumber(totalAmountIDO).div(new BigNumber(totalAmountPay)).toFixed(6)\n    }\n\n    return null\n  }, [totalAmountIDO, totalAmountPay])\n\n  if (tier === 0) {\n    return null\n  }\n\n  const totalCommited = new BigNumber(totalCommittedAmount).plus(new BigNumber(swappedAmountPay)).toString()\n\n  return (\n    <TierCardContainer>\n      <CardBodyWrapper>\n        <Box>\n          <TierHeaderWrapper mb=\"15px\" flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"14px\">\n              <ImageContainer src={TIER_INFO[tier]?.icon} alt=\"img\" />\n              <Flex alignItems=\"flex-start\" flexDirection=\"column\">\n                <Text fontSize=\"20px\" bold mr=\"8px\">\n                  {TIER_INFO[tier]?.name}\n                </Text>\n                <TierContainer fontSize=\"14px\" bold>\n                  Tier {tier}\n                </TierContainer>\n              </Flex>\n            </Flex>\n            <TertiaryMessage hoverContent={TIER_HOVER_CONTENT} hoverPlacement=\"top\" color=\"#8B8B8B\">\n              {TIER_INFO[tier]?.description}\n            </TertiaryMessage>\n          </TierHeaderWrapper>\n          <Flex justifyContent=\"space-between\" flexDirection=\"column\">\n            {/* <Flex justifyContent=\"space-between\">\n              <Text color=\"#8B8B8B\">Total {idoToken.symbol}&nbsp;</Text>\n              <Text bold color=\"#C3C3C3\">\n                {formatNumberWithComma(totalAmountIDO, true)} {idoToken.symbol}\n              </Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text color=\"#8B8B8B\">Total to raise</Text>\n              <Text bold color=\"#C3C3C3\">\n                {formatNumberWithComma(totalAmountPay, true)} {payToken.symbol}\n              </Text>\n            </Flex> */}\n            <Flex justifyContent=\"space-between\">\n              <Text color=\"#8B8B8B\">Price</Text>\n              <Text bold>\n                {calculatedPrice} {idoToken.symbol}/{payToken.symbol}\n              </Text>\n            </Flex>\n            <Flex justifyContent=\"space-between\">\n              <Text color=\"#8B8B8B\">Total committed&nbsp;</Text>\n              <Text bold>\n                {formatNumberWithComma(totalCommited, true)} {payToken.symbol}\n              </Text>\n            </Flex>\n          </Flex>\n        </Box>\n        <Divider />\n        <Box>\n          {userTier === tier && (\n            <Button width=\"100%\" mt=\"4px\" disabled={userTier + 2 === tier}>\n              <Text bold color=\"#353535\">\n                Your Tier. GET READY!\n              </Text>\n              {/* <Image\n                src=\"https://image.flaticon.com/icons/png/512/1067/1067357.png\"\n                alt=\"img\"\n                width={40}\n                height={40}\n                ml=\"20px\"\n              /> */}\n            </Button>\n          )}\n          {userTier < tier && (\n            <>\n              <ExpandableButtonComponent\n                disabled={disabledBuyMore}\n                onClick={() => setShowExpandableSection(!showExpandableSection)}\n                expanded={showExpandableSection}\n              />\n              <ExpandingWrapper expanded={showExpandableSection}>\n                <LinkExternal href=\"https://app.luaswap.org/#/swap\">Buy LUA or TOMO</LinkExternal>\n                <LinkExternal href=\"https://app.luaswap.org/#/lua-safe\">\n                  Then stake {nextTier[tier]?.addQuantityLua} LUA\n                </LinkExternal>\n                <LinkExternal href={addLiquidityUrl}>Or Add Liquidity</LinkExternal>\n              </ExpandingWrapper>\n            </>\n          )}\n        </Box>\n      </CardBodyWrapper>\n    </TierCardContainer>\n  )\n}\n\nconst TierDetails: React.FC<{\n  currentPoolData: Pool\n  selectedUserTier: number\n  secondsUntilSnapshot: number\n}> = ({ currentPoolData, secondsUntilSnapshot, selectedUserTier }) => {\n  const userNextTier = useSelector(selectUserNextTier)\n  const { index: tierData = {} } = currentPoolData\n  const nextTier = userNextTier.reduce((s: { [key: number]: Tier }, e: Tier) => {\n    const tmps = s\n    tmps[e.tier] = e\n    return tmps\n  }, {})\n\n  const isPoolStarted = useMemo(() => {\n    if (secondsUntilSnapshot <= 0) {\n      return true\n    }\n\n    return false\n  }, [secondsUntilSnapshot])\n\n  const tiersss: IdoDetailInfo[] = useMemo(() => {\n    if (Object.keys(tierData).length !== 0) {\n      const chainIds = Object.keys(tierData)\n      let result: IdoDetailInfo[] = tierData[chainIds[0]]\n      for (let i = 1; i < chainIds.length; i++) {\n        result = formatPoolTotalTierByChainID(result, tierData[chainIds[i]])\n      }\n      return result\n    }\n    return []\n  }, [tierData])\n  return (\n    <>\n      <TierInformationWrapper>\n        <TierCardWrapper>\n          {tiersss.map((e: IdoDetailInfo, i: number) => {\n            return (\n              <TierCard\n                data={e}\n                key={e.tier}\n                userTier={selectedUserTier}\n                nextTier={nextTier}\n                disabledBuyMore={isPoolStarted}\n              />\n            )\n          })}\n        </TierCardWrapper>\n      </TierInformationWrapper>\n      <Box mb=\"24px\">\n        <SecondaryMessage>\n          <Text color=\"#8B8B8B\">\n            If you are not qualified for any tiers, you may still be able to buy IDO tokens by committing funds.\n            <br />\n            But your allocation can not be guaranteed as priority will be given to tier members.\n          </Text>\n        </SecondaryMessage>\n      </Box>\n    </>\n  )\n}\n\nexport default TierDetails\n","import Web3 from 'web3'\nimport { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[], web3?: Web3): Promise<any[]> => {\n  try {\n    const web3Instance = web3 || getWeb3NoAccount()\n    const batch = new web3Instance.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLuaIdoContract } from 'hooks/useContract'\nimport { mappingIdoResponse } from 'state/ido/fetchIdosData'\nimport { IdoDetail } from 'state/types'\nimport get from 'lodash/get'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { formatIdoContract } from 'utils/formatPoolData'\nimport { getWeb3BasedOnChainId } from 'utils/web3'\nimport { getLuaIdoContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { useBlock } from 'state/hooks'\nimport { IdoDetailInfo } from '../types'\n\nconst defaultIdoDetail = {\n  claimAt: null,\n  closeAt: null,\n  creator: null,\n  idoToken: null,\n  maxAmountPay: null,\n  minAmountPay: null,\n  openAt: null,\n  payToken: null,\n  swappedAmountIDO: null,\n  swappedAmountPay: null,\n  totalAmountIDO: null,\n  totalAmountPay: null,\n  totalCommittedAmount: null,\n}\n\n/**\n * This hook fetch live data from contract IDO based on current blocknumber\n * @param contractAddress Ido contract address\n * @param idoIndex Index of the current IDO in contract (based on chain id and user tier)\n * @param idoIndexes List of idos for each chain id in this IDO\n * @param verionContract Version of current contract\n * @returns Data of the current IDO on contract and amount of committed token of current User\n */\nconst useDataFromIdoContract = (\n  contractAddress: string,\n  idoIndex: number,\n  idoIndexes: Record<string, IdoDetailInfo[]>,\n  verionContract: number,\n): [\n  idoData: IdoDetail,\n  commitedAmount: string,\n  totalAmountUserSwapped: string,\n  isLoading: boolean,\n  luaVestingAddress: string,\n] => {\n  const { account, chainId } = useWeb3React()\n  // Current Lua Ido contract based on log in chainid\n  const luaIdoContract = useLuaIdoContract(contractAddress)\n  const [luaVestingAddress, setLuaVestingAddress] = useState(null)\n  const [idoDetail, setIdoDetail] = useState<IdoDetail>(defaultIdoDetail)\n  const [totalUserCommitted, setTotalUserCommitted] = useState<string>('0')\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [totalAmountUserSwapped, setTotalAmountUserSwapped] = useState<string>('0')\n  const { currentBlock } = useBlock()\n  useEffect(() => {\n    const fetchData = async () => {\n      const idosOfEachChainId = {}\n      const idoIndexMap = {}\n      const tokenMap = {}\n      try {\n        /**\n         * We loop through every index and get all idos info in each index\n         * @returns {\n         *  Chainid: []Promise<Idos>\n         * }\n         */\n        Object.keys(idoIndexes).forEach((idoChainId) => {\n          const idosOfCurrentChainId = []\n          idoIndexes[idoChainId].forEach((ido) => {\n            if (!idoIndexMap[ido.index] && ido.tier !== 0) {\n              // We will get new contract based on addressIdoContract received from API\n              const luaContractAddress = ido.addressIdoContract\n              const web3 = getWeb3BasedOnChainId(Number(idoChainId))\n              const currentLuaIdoContract = getLuaIdoContract(web3, luaContractAddress)\n              const contractIdoDetail = currentLuaIdoContract.methods.IDOs(ido.index).call\n              idosOfCurrentChainId.push(contractIdoDetail)\n              tokenMap[ido.index] = {}\n              tokenMap[ido.index].idoToken = ido.idoToken\n              tokenMap[ido.index].payToken = ido.payToken\n              idoIndexMap[ido.index] = true\n            }\n\n            if (ido.tier === 0) {\n              tokenMap[ido.index] = {}\n              tokenMap[ido.index].idoToken = ido.idoToken\n              tokenMap[ido.index].payToken = ido.payToken\n            }\n          })\n          idosOfEachChainId[idoChainId] = idosOfCurrentChainId\n        })\n        /**\n         * We map through all the idos in each chain id and use web3 provider of that chainid to fetch data\n         * from IDO contract\n         * @param chainids - Array of all available chain ids for this project\n         * @returns Total data of all chain ids for this project\n         */\n        const processMultipleChainid = async (chainids) => {\n          const generatedResponse = []\n          await Promise.all(\n            chainids.map(async (cid) => {\n              try {\n                const web3 = getWeb3BasedOnChainId(Number(cid))\n                // idos here is all idos of a single chain id\n                const idos = idosOfEachChainId[cid]\n                const dataList = await makeBatchRequest(idos, web3)\n                const mappedContractIdoList = dataList.map((ido) => mappingIdoResponse(ido))\n                const allTiersDataFromContract = formatIdoContract(mappedContractIdoList)\n                generatedResponse.push(allTiersDataFromContract)\n              } catch (error) {\n                console.log(error)\n              }\n            }),\n          )\n          return generatedResponse\n        }\n        const chainIdsIdos = await processMultipleChainid(Object.keys(idosOfEachChainId))\n        const allTiersDataFromContract = formatIdoContract(chainIdsIdos)\n        setIdoDetail(allTiersDataFromContract)\n        /**\n         * Get total committed amount of current user\n         */\n        const commitedAmount = await luaIdoContract.methods.userCommitedAmount(account, idoIndex).call()\n        const swappedIdoAmount = await luaIdoContract.methods.userSwappedAmountIDO(account, idoIndex).call()\n        setTotalUserCommitted(\n          getBalanceAmount(commitedAmount, get(tokenMap, `${idoIndex}.payToken.decimals`, null)).toString(),\n        )\n        setTotalAmountUserSwapped(\n          getBalanceAmount(swappedIdoAmount, get(tokenMap, `${idoIndex}.idoToken.decimals`, null)).toString(),\n        )\n        setIsLoading(false)\n      } catch (error) {\n        console.log(error, 'error to fetch data from contract')\n      }\n    }\n\n    fetchData()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentBlock, chainId])\n\n  useEffect(() => {\n    const fetchVestingInfo = async () => {\n      try {\n        const vestingContract = await luaIdoContract.methods.vesting().call()\n        setLuaVestingAddress(vestingContract)\n      } catch (error) {\n        console.log(error, 'fail to get vesting contract')\n      }\n    }\n    // Only fetch vesting information when version contract = 2\n    if (verionContract === 2) {\n      fetchVestingInfo()\n    }\n  }, [luaIdoContract, contractAddress, verionContract])\n\n  return [idoDetail, totalUserCommitted, totalAmountUserSwapped, isLoading, luaVestingAddress]\n}\n\nexport default useDataFromIdoContract\n","import { useEffect } from 'react'\nimport useDeepMemo from 'hooks/useDeepMemo'\nimport { formatPoolDetail } from 'utils/formatPoolData'\nimport { IdoDetailInfo, Pool } from '../types'\n\n/**\n * This hook calculate all tier pool's information\n */\nconst useTotalDataFromApi = (currentPoolData: Pool) => {\n  const data = useDeepMemo<IdoDetailInfo>(() => {\n    const { index: _index = {} } = currentPoolData\n    const poolInfoChainId = Object.keys(_index).map((id) => {\n      return formatPoolDetail(_index[id])\n    })\n    const totalPoolData = formatPoolDetail(poolInfoChainId)\n    return {\n      ...totalPoolData,\n    }\n  }, [currentPoolData])\n\n  return data\n}\n\nexport default useTotalDataFromApi\n","import React, { useEffect, useState, useMemo } from 'react'\nimport { Flex, Heading, Mesage, Text, Box } from 'luastarter-uikits'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { useWeb3React } from '@web3-react/core'\nimport Page from 'components/layout/Page'\nimport PageLoader from 'components/PageLoader'\nimport useDeepMemo from 'hooks/useDeepMemo'\nimport { fetchPool, selectCurrentPool, selectLoadingCurrentPool, setDefaultCurrentPool } from 'state/ido'\nimport { selectUserEstLua, selectUserTier } from 'state/profile'\nimport { getTierDataAfterSnapshot } from 'state/profile/getProfile'\nimport { useBlock } from 'state/hooks'\nimport { useAppDispatch } from 'state'\nimport get from 'lodash/get'\nimport useSecondsUntilCurrent from 'views/Idos/hooks/useSecondsUntilCurrent'\n\nimport useGetTitleOfTier from 'views/Idos/hooks/useGetTitleOfTier'\nimport isNaN from 'lodash/isNaN'\nimport Steps from './Steps'\nimport Deposit from './Deposit'\nimport PoolSummary from './PoolSummary'\nimport ProjectInfo from './ProjectInfo'\nimport PoolInfo from './PoolInfo'\nimport TokenInfo from './TokenInfo'\nimport TierDetails from './TierDetails'\nimport useDataFromIdoContract from '../../hooks/useDataFromIdoContract'\nimport useTotalDataFromApi from '../../hooks/useTotalDataFromApi'\nimport { generateColorForStatusBar, getIdoDataBasedOnChainIdAndTier, getIdoSupportedNetwork } from '../helper'\n\ninterface PropjectDetailProps {\n  isShowPoolData: boolean\n}\n\nconst Row = styled.div`\n  max-width: 1600px;\n  padding-left: 24px;\n  padding-right: 24px;\n  margin: 0 auto;\n  @media screen and (max-width: 500px) {\n    padding-left: 0px;\n    padding-right: 0px;\n  } ;\n`\n\nconst StyledFlex = styled(Flex)`\n  @media screen and (min-width: 1800px) {\n    flex-wrap: nowrap;\n  }\n`\n\nconst ProjectDetailBox = styled(Box)<PropjectDetailProps>`\n  width: ${(props) => (props.isShowPoolData ? 'calc(50% - 48px)' : '100%')};\n  margin-right: ${(props) => (props.isShowPoolData ? '24px' : '0px')};\n  @media screen and (max-width: 1366px) {\n    width: ${(props) => (props.isShowPoolData ? 'calc(60% - 48px)' : '100%')};\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: 100%;\n    margin-bottom: 24px;\n  } ;\n`\n\nconst PoolInfoBox = styled(Box)`\n  width: 25%;\n\n  @media screen and (max-width: 1366px) {\n    width: 20%;\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: calc(50% - 24px);\n  }\n\n  @media screen and (max-width: 576px) {\n    width: 100%;\n    margin-bottom: 24px;\n  } ;\n`\n\nconst TokenInfoBox = styled(Box)`\n  width: 25%;\n\n  @media screen and (max-width: 1366px) {\n    width: 20%;\n  }\n\n  @media screen and (max-width: 1024px) {\n    width: calc(50% - 24px);\n  }\n\n  @media screen and (max-width: 576px) {\n    width: 100%;\n  } ;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin-bottom: 14px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n  }\n`\n\ninterface ParamsType {\n  id: string\n}\n\nconst ProjectDetail = () => {\n  const { chainId, account } = useWeb3React()\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [isLoadingTierInfo, setIsLoadingTierInfo] = useState(true)\n  const [userTierAfterSnapshot, setUserTierAfterSnapshot] = useState(0)\n  const [userEstLuaAfterSnapshot, setUserEstLuaAfterSnapshot] = useState(0)\n  const { id } = useParams<ParamsType>()\n  const dispatch = useAppDispatch()\n  const blockNumber = useBlock()\n  const currentPoolData = useSelector(selectCurrentPool)\n  const userTier = useSelector(selectUserTier)\n  const userEstLua = useSelector(selectUserEstLua)\n  const isLoadingPool = useSelector(selectLoadingCurrentPool)\n  const secondsUntilSnapshot = useSecondsUntilCurrent(get(currentPoolData, 'untilSnapshootAt', null))\n  const idoSupportedNetwork = getIdoSupportedNetwork(currentPoolData.index)\n  const { isPresent, isWhitelist, status, isExclusive } = currentPoolData\n  const isShowPoolData = useMemo(() => {\n    if (isPresent && status === 1) {\n      return false\n    }\n\n    return true\n  }, [isPresent, isWhitelist, status, secondsUntilSnapshot])\n\n  const isShowTierInfor = useMemo(() => {\n    if (isWhitelist) {\n      return false\n    }\n\n    return true\n  }, [isPresent, isWhitelist, status, secondsUntilSnapshot])\n\n  useEffect(() => {\n    if (id) {\n      dispatch(\n        fetchPool(id, () => {\n          setIsLoaded(true)\n        }),\n      )\n    }\n  }, [id, dispatch, blockNumber.currentBlock])\n  useEffect(() => {\n    const fetchTierAfterSnapshotTime = async () => {\n      try {\n        const { tier, estLua } = await getTierDataAfterSnapshot(account, id)\n        setUserTierAfterSnapshot(tier)\n        setUserEstLuaAfterSnapshot(estLua)\n        setIsLoadingTierInfo(false)\n      } catch (error) {\n        setUserTierAfterSnapshot(0)\n        setUserEstLuaAfterSnapshot(0)\n        setIsLoadingTierInfo(false)\n        console.log(error, 'fail to fetch tier after snapshot time')\n      }\n    }\n    // Only call this api when current date time > snapshot time\n    if (secondsUntilSnapshot !== null && secondsUntilSnapshot <= 0 && account) {\n      fetchTierAfterSnapshotTime()\n    } else {\n      setIsLoadingTierInfo(false)\n    }\n  }, [secondsUntilSnapshot, account, id])\n\n  // Clear current pool when component unmount\n  useEffect(() => {\n    return () => {\n      dispatch(setDefaultCurrentPool())\n    }\n  }, [dispatch])\n\n  const selectedUserTier = useMemo(() => {\n    // We will get the userTier if current date time < snapshot time or else we will get userTierAfterSnapshot\n    if (secondsUntilSnapshot !== null && secondsUntilSnapshot <= 0) {\n      return userTierAfterSnapshot\n    }\n    return userTier\n  }, [secondsUntilSnapshot, userTier, userTierAfterSnapshot])\n\n  const selectedUserEstLua = useMemo(() => {\n    // We will get the userEstLua if current date time < snapshot time or else we will get userTierAfterSnapshot\n    if (secondsUntilSnapshot !== null && secondsUntilSnapshot <= 0) {\n      return userEstLuaAfterSnapshot\n    }\n    return userEstLua\n  }, [secondsUntilSnapshot, userEstLua, userEstLuaAfterSnapshot])\n\n  const tierDataOfUser = useDeepMemo(() => {\n    const { index = [] } = currentPoolData\n    return getIdoDataBasedOnChainIdAndTier(index, chainId, selectedUserTier)\n  }, [currentPoolData, chainId, selectedUserTier])\n\n  const [_, totalUserCommittedFromContract, totalAmountUserSwapped, isLoadingDataFromContract, luaVestingAddress] =\n    useDataFromIdoContract(\n      tierDataOfUser.addressIdoContract,\n      tierDataOfUser.index,\n      currentPoolData.index,\n      currentPoolData.versionContract,\n    )\n\n  const idoDetailFromContract = useTotalDataFromApi(currentPoolData)\n\n  const isAvailalbeOnCurrentNetwork = useDeepMemo(() => {\n    if (!account || !currentPoolData.index) {\n      return false\n    }\n    const availalbeNetwork = Object.keys(currentPoolData.index)\n    return availalbeNetwork.includes(String(chainId))\n  }, [currentPoolData.index, chainId])\n\n  const titleTier = useGetTitleOfTier(Number(selectedUserEstLua || 0), isExclusive)\n\n  /**\n   * currentPoolData: all tier's information\n   * tierDataOfUser: The correct tier data for user (based on user's tier)\n   * contractData: idos data fetch from contract\n   */\n  return (\n    <Page>\n      <Row>\n        {/* After show the loading component, never show it second time */}\n        {!isLoaded && isLoadingPool ? (\n          <PageLoader />\n        ) : (\n          <>\n            {' '}\n            {!isAvailalbeOnCurrentNetwork && account && isShowPoolData && (\n              <Mesage variant=\"warning\" mb=\"16px\">\n                <Text>\n                  The IDO is on {idoSupportedNetwork}, please switch to {idoSupportedNetwork} to join\n                </Text>\n              </Mesage>\n            )}\n            <StyledFlex mb=\"40px\" flexWrap=\"wrap\">\n              <PoolSummary\n                currentPoolData={currentPoolData}\n                tierDataOfUser={tierDataOfUser}\n                isShowPoolData={isShowPoolData}\n                isShowTierInfor={isShowTierInfor}\n                contractData={idoDetailFromContract}\n                isAvailalbeOnCurrentNetwork={isAvailalbeOnCurrentNetwork}\n              />\n              <Deposit\n                titleTier={titleTier}\n                isShowPoolData={isShowPoolData}\n                isShowTierInfor={isShowTierInfor}\n                isLoadingTierInfo={isLoadingTierInfo}\n                isLoadingDataFromContract={isLoadingDataFromContract}\n                currentPoolData={currentPoolData}\n                tierDataOfUser={tierDataOfUser}\n                totalAmountUserSwapped={totalAmountUserSwapped}\n                userTotalCommitted={totalUserCommittedFromContract}\n                contractData={idoDetailFromContract}\n                selectedUserTier={selectedUserTier}\n                isAvailalbeOnCurrentNetwork={isAvailalbeOnCurrentNetwork}\n              />\n            </StyledFlex>\n            {isShowTierInfor && isShowPoolData && !isExclusive && (\n              <>\n                <Heading as=\"h2\" scale=\"lg\" color=\"#D8D8D8\" mb=\"14px\">\n                  Tier Information\n                </Heading>\n                <TierDetails\n                  currentPoolData={currentPoolData}\n                  selectedUserTier={selectedUserTier}\n                  secondsUntilSnapshot={secondsUntilSnapshot}\n                />\n              </>\n            )}\n            <StyledFlex flexWrap=\"wrap\">\n              <ProjectDetailBox isShowPoolData={isShowPoolData}>\n                <StyledHeading as=\"h2\" scale=\"lg\" color=\"#D8D8D8\" mb=\"14px\">\n                  Project Detail\n                </StyledHeading>\n                <ProjectInfo currentPoolData={currentPoolData} />\n              </ProjectDetailBox>\n              {isShowPoolData && (\n                <>\n                  <PoolInfoBox mr=\"24px\">\n                    <StyledHeading as=\"h2\" scale=\"lg\" color=\"#D8D8D8\">\n                      Pool info\n                    </StyledHeading>\n                    <PoolInfo currentPoolData={currentPoolData} />\n                  </PoolInfoBox>\n                  <TokenInfoBox>\n                    <StyledHeading as=\"h2\" scale=\"lg\" color=\"#D8D8D8\">\n                      Token info\n                    </StyledHeading>\n                    <TokenInfo currentPoolData={currentPoolData} />\n                  </TokenInfoBox>\n                </>\n              )}\n            </StyledFlex>\n            <Heading as=\"h2\" scale=\"lg\" color=\"#D8D8D8\" mb=\"14px\">\n              How to LuaStarts\n            </Heading>\n            <Steps\n              selectedUserTier={titleTier}\n              isShowTierInfor={isShowTierInfor}\n              selectedUserEstLua={isNaN(Number(selectedUserEstLua)) ? 0 : selectedUserEstLua}\n            />\n          </>\n        )}\n      </Row>\n    </Page>\n  )\n}\n\nexport default ProjectDetail\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Route, useRouteMatch, Switch } from 'react-router-dom'\nimport AuthRoute from 'hooks/AuthRoute'\nimport TOSAuthRoute from 'hooks/TOSAuthRoute'\nimport IdosInfo from './IdosInfo'\nimport DevTools from './DevTools'\nimport ProjectDetail from './components/ProjectDetail'\n\nconst Idos = () => {\n  const { t } = useTranslation()\n  const { path } = useRouteMatch()\n\n  return (\n    <Switch>\n      <Route path={`${path}/project/:id`}>\n        <TOSAuthRoute component={ProjectDetail} />\n      </Route>\n      <Route path={`${path}/history/project/:id`}>\n        <TOSAuthRoute component={ProjectDetail} />\n      </Route>\n      <Route path={`${path}/dev-tools`}>\n        <AuthRoute component={DevTools} />\n      </Route>\n      <Route path={`${path}`}>\n        <TOSAuthRoute component={IdosInfo} />\n      </Route>\n    </Switch>\n  )\n}\n\nexport default Idos\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account, chainId?) => {\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  const res = await lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send(gasLimit)\n  return res\n}\n\nexport const stake = async (masterChefContract, pid, amount, account, chainId?) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  //     .send({ from: account, gas: DEFAULT_GAS })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send(gasLimit)\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const depositIdo = async (luaIdoContract, account, amount, idoIndex, isNativeToken, proofS) => {\n  // If pay token is native token, we will send amount or else we wont'\n  return luaIdoContract.methods\n    .commit(idoIndex, amount, proofS)\n    .send({\n      from: account,\n      ...(isNativeToken && { value: amount }),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const claimRewardIdo = async (luaIdoContract, account, amount, idoIndex, proofS) => {\n  // const commitedAmount = await luaIdoContract.methods.userCommitedAmount(account, 0).call()\n  return luaIdoContract.methods\n    .userClaim(idoIndex, account, amount, proofS)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const claimVesting = async (vestingContract, account) => {\n  return vestingContract.methods\n    .claim()\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const approveIdo = async (tokenContract, luaIdoAddress, account, chainId) => {\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  const res = await tokenContract.methods.approve(luaIdoAddress, ethers.constants.MaxUint256).send(gasLimit)\n  return res\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account, chainId?) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  //     .send({ from: account, gas: DEFAULT_GAS })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send(gasLimit)\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account, chainId) => {\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  return masterChefContract.methods\n    .claimReward(pid)\n    .send(gasLimit)\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import React from 'react'\nimport { Button, useWalletModal } from 'luastarter-uikits'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button width=\"100%\" onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link, Box } from 'luastarter-uikits'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  min?: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  secondaryTitle?: string\n  isLoadingDataFromContract?: boolean\n  showWarning?: boolean\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: #1a1a1a;\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  min,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  isLoadingDataFromContract = false,\n  addLiquidityUrl,\n  inputTitle,\n  secondaryTitle = 'Balance',\n  showWarning = true,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n  return (\n    <div style={{ position: 'relative', width: '100%' }}>\n      <StyledTokenInput isWarning={isBalanceZero && showWarning}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{`${secondaryTitle}: ${isLoadingDataFromContract ? '~' : max}`}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-between\">\n          <Box>\n            <StyledInput\n              pattern=\"^[0-9]*[.,]?[0-9]*$\"\n              inputMode=\"decimal\"\n              step=\"any\"\n              min={min}\n              max={max}\n              onChange={onChange}\n              placeholder=\"0\"\n              value={value}\n            />\n          </Box>\n          <Flex alignItems=\"center\">\n            <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\" disabled={isLoadingDataFromContract}>\n              {t('Max')}\n            </Button>\n            <Text>{symbol}</Text>\n          </Flex>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && addLiquidityUrl && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabStyle\":\"styles_tabStyle__4La6g\"};"],"sourceRoot":""}