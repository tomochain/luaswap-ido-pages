{"version":3,"sources":["components/layout/Flex.tsx","hooks/usePersistState.ts","utils/latinise.ts","components/PageHeader/PageHeader.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/DualFarms/components/types.ts","views/DualFarms/components/FarmCard/DetailsSection.tsx","views/DualFarms/components/FarmCard/CardHeading.tsx","hooks/useStake.ts","hooks/useUnstake.ts","components/ModalActions/ModalActions.tsx","views/DualFarms/components/DepositModal.tsx","views/DualFarms/components/WithdrawModal.tsx","views/DualFarms/components/FarmCard/StakeAction.tsx","views/DualFarms/components/FarmCard/HarvestAction.tsx","hooks/useHarvest.ts","views/DualFarms/components/FarmCard/CardActionsContainer.tsx","hooks/useApprove.ts","views/DualFarms/components/FarmCard/FarmCard.tsx","views/DualFarms/Farms.tsx","utils/callHelpers.ts","components/UnlockButton.tsx","components/ModalInput/ModalInput.tsx","components/Spacer/Spacer.tsx"],"names":["FlexLayout","styled","div","usePersistState","initialValue","localStorageKey","useState","valueFromLS","localStorage","getItem","JSON","parse","error","value","setValue","useEffect","setItem","stringify","Latinise","latin_map","τ","Τ","latinise","input","replace","x","Outer","Box","theme","background","colors","gradients","bubblegum","isImage","Inner","Container","PageHeader","children","props","Wrapper","primary","ExpandableSectionButton","onClick","expanded","t","useTranslation","role","color","bold","defaultProps","ViewMode","StyledLinkExternal","LinkExternal","DetailsSection","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","href","Flex","CardHeading","Tag","tokenSymbol","isCommunityFarm","farmImages","farm","alignItems","mb","width","src","icon","alt","height","icon2","flexDirection","trim","useStake","pid","master","dispatch","useAppDispatch","useWeb3React","account","chainId","web3","useWeb3","masterChefContract","useMasterchef","onStake","useCallback","amount","a","stake","txHash","fetchFarmUserDataAsync","console","info","useUnstake","onUnstake","unstake","StyledModalActions","primaryDark","spacing","StyledModalAction","ModalActions","l","React","Children","toArray","length","map","child","i","Spacer","DepositModal","max","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","valNumber","BigNumber","fullBalanceNumber","handleChange","e","currentTarget","validity","valid","handleSelectMax","title","ModalInput","onSelectMax","onChange","symbol","inputTitle","variant","disabled","isFinite","eq","gt","style","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","location","useLocation","reserves0","reserves1","totalSupply","token2Symbol","displayBalance","stakedBalanceNumber","getBalanceNumber","toLocaleString","calculatedAmount1","multipliedBy","getBalanceAmount","dividedBy","toNumber","toFixed","calculatedAmount2","useModal","onPresentDeposit","onPresentWithdraw","fontSize","some","item","pathname","includes","mr","HarvestAction","earnings","token","earningsLua","onReward","farmPid","harvest","useHarvest","rawEarningsBalance","rawEarningsBalanceLua","displayBalanceLua","Action","CardActions","requestedApproval","setRequestedApproval","library","lpAddresses","quoteToken","userData","allowance","allowanceAsString","tokenBalanceAsString","stakedBalanceAsString","earningsAsString","earningsLuaAsString","lpAddress","getAddress","lpName","lpTokenName","toUpperCase","isApproved","isGreaterThan","eProvider","onApprove","lpContract","approve","tx","useApprove","getERC20Contract","handleApprove","textTransform","pr","mt","UnlockButton","AccentGradient","keyframes","StyledCardAccent","primaryBright","secondary","FCard","isPromotedFarm","radii","card","Divider","cardBorder","ExpandingWrapper","FarmCard","luaPrice","ID","IsTomoChain","showExpandableSection","setShowExpandableSection","newReward","reward","lpSymbol","split","usdValue","parseFloat","addLiquidityLink","pairLink","multiplier","isCommunity","luaReward","apy","CardActionsContainer","PoolContainer","PageLoader","mediaQueries","sm","Text","Farms","Image","useRouteMatch","path","useFarms","farmsLP","data","userDataLoaded","isLoading","setIsLoading","useLuaPrice","query","TABLE","useHistory","setDefaultFarmData","fetchFarms","id","setInterval","clearInterval","farmsLpMemoized","lowercaseQuery","toLowerCase","filter","process","as","scale","gasLimit","from","methods","options","address","ethers","constants","MaxUint256","send","res","deposit","times","DEFAULT_TOKEN_DECIMAL","toString","on","transactionHash","depositIdo","luaIdoContract","idoIndex","isNativeToken","proofS","commit","claimRewardIdo","userClaim","claimVesting","vestingContract","claim","approveIdo","tokenContract","luaIdoAddress","withdraw","claimReward","useAuth","login","logout","onPresentConnectModal","useWalletModal","StyledTokenInput","isWarning","shadows","warning","inset","text","StyledInput","Input","xs","StyledErrorMessage","min","isLoadingDataFromContract","secondaryTitle","showWarning","isBalanceZero","position","pl","pattern","inputMode","step","placeholder","external","StyledSpacer","size","s","useContext","ThemeContext"],"mappings":"oPAeeA,EAbIC,IAAOC,IAAV,4N,iBCqBDC,EAlBS,SAACC,EAAmBC,GAC1C,MAA0BC,oBAAS,WACjC,IACE,IAAMC,EAAcC,aAAaC,QAAQJ,GAEzC,OAAOE,EAAcG,KAAKC,MAAMJ,GAAeH,EAC/C,MAAOQ,GACP,OAAOR,MANX,mBAAOS,EAAP,KAAcC,EAAd,KAcA,OAJAC,qBAAU,WACRP,aAAaQ,QAAQX,EAAiBK,KAAKO,UAAUJ,MACpD,CAACA,EAAOR,IAEJ,CAACQ,EAAOC,I,gBCpBJI,EAAW,CACtBC,UAAW,CACTC,SAAG,IACHC,SAAG,MAIMC,EAAW,SAACC,GACvB,OAAOA,EAAMC,QAAQ,qBAAqB,SAACC,GAAD,OAAOP,EAASC,UAAUM,IAAMA,M,iFCHtEC,EAAQzB,YAAO0B,IAAP1B,CAAH,uDACK,gBAAG2B,EAAH,EAAGA,MAAH,SAAUC,YAA+BD,EAAME,OAAOC,UAAUC,aAC5E,qBAAGC,QAAyB,uDAAyD,MAGnFC,EAAQjC,YAAOkC,IAAPlC,CAAH,2EAgBImC,EAX0D,SAAC,GAAD,IACvEP,EADuE,EACvEA,WACAI,EAFuE,EAEvEA,QACAI,EAHuE,EAGvEA,SACGC,EAJoE,wBAMvE,cAACZ,EAAD,yBAAOG,WAAYA,EAAYI,QAASA,GAAaK,GAArD,aACE,cAACJ,EAAD,UAAQG,Q,iBCZNE,EAAUtC,IAAOC,IAAV,sJAOD,qBAAG0B,MAAkBE,OAAOU,WAIlCC,EAAkE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC1EC,EAAMC,cAAND,EAER,OACE,eAACL,EAAD,CAAS,aAAYK,EAAE,mCAAoCE,KAAK,SAASJ,QAAS,kBAAMA,KAAxF,UACE,cAAC,IAAD,CAAMK,MAAM,UAAUC,MAAI,EAA1B,SACcJ,EAAXD,EAAa,OAAY,aAE3BA,EAAW,cAAC,IAAD,IAAoB,cAAC,IAAD,QAKtCF,EAAwBQ,aAAe,CACrCN,UAAU,GAGGF,I,0BCyDHS,E,qBDzDGT,K,mBEzBTF,GAAUtC,IAAOC,IAAV,iDAIPiD,GAAqBlD,YAAOmD,IAAPnD,CAAH,iDAwBToD,GApB0C,SAAC,GAMpD,EALJC,YAKI,EAJJC,QAIK,IAHLC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,gBAEQd,EAAMC,cAAND,EAER,OACE,eAAC,GAAD,WACE,eAAC,IAAD,CAAMe,eAAe,gBAArB,UACE,eAAC,IAAD,WAAOf,EAAE,mBAAT,OACA,cAAC,IAAD,UAAOY,OAET,eAACL,GAAD,CAAoBS,KAAMF,EAA1B,2BAA0DD,SCtB1DlB,GAAUtC,YAAO4D,IAAP5D,CAAH,kEAyBE6D,IAnBO7D,YAAO8D,IAAP9D,CAAH,iDAImC,SAAC,GAAiE,IAA/DwD,EAA8D,EAA9DA,QAAsCO,GAAwB,EAArDC,gBAAqD,EAApCC,WAAoC,EAAxBF,aAAaG,EAAW,EAAXA,KAC1G,OACE,eAAC,GAAD,CAASR,eAAe,gBAAgBS,WAAW,SAASC,GAAG,OAA/D,UACE,eAAC,GAAD,CAASV,eAAe,OAAOS,WAAW,SAASE,MAAM,QAAzD,UACE,cAAC,IAAD,CAAOC,IAAKJ,EAAKK,KAAMC,IAAKT,EAAaM,MAAO,GAAII,OAAQ,KAC5D,cAAC,IAAD,CAAOH,IAAKJ,EAAKQ,MAAOF,IAAKT,EAAaM,MAAO,GAAII,OAAQ,QAE/D,eAAC,IAAD,CAAME,cAAc,SAASR,WAAW,WAAxC,UACE,cAAC,IAAD,CAASC,GAAG,MAAZ,SAAmBZ,EAAQjC,QAAQ,YAAa,IAAIqD,SACpD,cAAC,IAAD,CAAMlB,eAAe,mB,4ECPdmB,GAlBE,SAACC,EAAaC,GAC7B,IAAMC,EAAWC,cACjB,EAA6BC,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QACXC,EAAOC,cACPC,EAAqBC,aAAcJ,EAASL,GAWlD,MAAO,CAAEU,QATWC,sBAAW,yCAC7B,WAAOC,GAAP,gBAAAC,EAAA,sEACuBC,aAAMN,EAAoBT,EAAKa,EAAQR,EAASC,GADvE,OACQU,EADR,OAEEd,EAASe,YAAuBZ,EAASC,EAASC,IAClDW,QAAQC,KAAKH,GAHf,2CAD6B,sDAM7B,CAACX,EAASH,EAAUO,EAAoBT,EAAKM,EAASC,MCM3Ca,GAlBI,SAACpB,EAAaC,GAC/B,IAAMC,EAAWC,cACjB,EAA6BC,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QACXC,EAAOC,cACPC,EAAqBC,aAAcJ,EAASL,GAWlD,MAAO,CAAEoB,UATaT,sBAAW,yCAC/B,WAAOC,GAAP,gBAAAC,EAAA,sEACuBQ,aAAQb,EAAoBT,EAAKa,EAAQR,EAASC,GADzE,OACQU,EADR,OAEEd,EAASe,YAAuBZ,EAASC,EAASC,IAClDW,QAAQC,KAAKH,GAHf,2CAD+B,sDAM/B,CAACX,EAASH,EAAUO,EAAoBT,EAAKM,EAASC,M,UCDpDgB,GAAqBrG,IAAOC,IAAV,qIAEF,SAACoC,GAAD,OAAWA,EAAMV,MAAME,OAAOyE,eAGvC,SAACjE,GAAD,OAAWA,EAAMV,MAAM4E,QAAQ,MAGtCC,GAAoBxG,IAAOC,IAAV,wCAIRwG,GA1BgB,SAAC,GAAkB,IAAhBrE,EAAe,EAAfA,SAC1BsE,EAAIC,IAAMC,SAASC,QAAQzE,GAAU0E,OAC3C,OACE,cAACT,GAAD,UACGM,IAAMC,SAASG,IAAI3E,GAAU,SAAC4E,EAAOC,GAAR,OAC5B,qCACE,cAACT,GAAD,UAAoBQ,IACnBC,EAAIP,EAAI,GAAK,cAACQ,GAAA,EAAD,a,UC+DTC,GA3DmC,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,IAAKC,EAA4D,EAA5DA,UAAWC,EAAiD,EAAjDA,UAAiD,IAAtCC,iBAAsC,MAA1B,GAA0B,EAAtB9D,EAAsB,EAAtBA,gBAC9F,EAAsBpD,mBAAS,IAA/B,mBAAOmH,EAAP,KAAYC,EAAZ,KACA,EAAkCpH,oBAAS,GAA3C,mBAAOqH,EAAP,KAAkBC,EAAlB,KACQhF,EAAMC,cAAND,EACFiF,EAAcC,mBAAQ,WAC1B,OAAOC,aAAsBV,KAC5B,CAACA,IAEEW,EAAY,IAAIC,IAAUR,GAC1BS,EAAoB,IAAID,IAAUJ,GAElCM,EAAexC,uBACnB,SAACyC,GACKA,EAAEC,cAAcC,SAASC,OAC3Bb,EAAOU,EAAEC,cAAcxH,MAAMW,QAAQ,KAAM,QAG/C,CAACkG,IAGGc,EAAkB7C,uBAAY,WAClC+B,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOe,MAAO7F,EAAE,mBAAoB2E,UAAWA,EAA/C,UACE,cAACmB,GAAA,EAAD,CACE7H,MAAO4G,EACPkB,YAAaH,EACbI,SAAUT,EACVd,IAAKQ,EACLgB,OAAQrB,EACR9D,gBAAiBA,EACjBoF,WAAYlG,EAAE,WAEhB,eAAC,GAAD,WACE,cAAC,IAAD,CAAQmG,QAAQ,YAAYrG,QAAS6E,EAAWjD,MAAM,OAAO0E,SAAUrB,EAAvE,SACG/E,EAAE,YAEL,cAAC,IAAD,CACE0B,MAAM,OACN0E,SAAUrB,IAAcK,EAAUiB,YAAcjB,EAAUkB,GAAG,IAAMlB,EAAUmB,GAAGjB,GAChFxF,QAAO,wBAAE,uBAAAmD,EAAA,6DACP+B,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAHX,SAUe3E,EAAZ+E,EAAc,uBAA4B,gBAG/C,cAAC,IAAD,CAAc/D,KAAMF,EAAiB0F,MAAO,CAAEC,UAAW,UAAzD,SACGzG,EAAE,eAAgB,CAAEiG,OAAQrB,UCCtB8B,GAvDqC,SAAC,GAAmD,IAAjDhC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,UAAWF,EAA0B,EAA1BA,IAA0B,IAArBG,iBAAqB,MAAT,GAAS,EACrG,EAAsBlH,mBAAS,IAA/B,mBAAOmH,EAAP,KAAYC,EAAZ,KACA,EAAkCpH,oBAAS,GAA3C,mBAAOqH,EAAP,KAAkBC,EAAlB,KACQhF,EAAMC,cAAND,EACFiF,EAAcC,mBAAQ,WAC1B,OAAOC,aAAsBV,KAC5B,CAACA,IAEEW,EAAY,IAAIC,IAAUR,GAC1BS,EAAoB,IAAID,IAAUJ,GAElCM,EAAexC,uBACnB,SAACyC,GACKA,EAAEC,cAAcC,SAASC,OAC3Bb,EAAOU,EAAEC,cAAcxH,MAAMW,QAAQ,KAAM,QAG/C,CAACkG,IAGGc,EAAkB7C,uBAAY,WAClC+B,EAAOG,KACN,CAACA,EAAaH,IAEjB,OACE,eAAC,IAAD,CAAOe,MAAO7F,EAAE,qBAAsB2E,UAAWA,EAAjD,UACE,cAACmB,GAAA,EAAD,CACEC,YAAaH,EACbI,SAAUT,EACVtH,MAAO4G,EACPJ,IAAKQ,EACLgB,OAAQrB,EACRsB,WAAYlG,EAAE,aAEhB,eAAC,GAAD,WACE,cAAC,IAAD,CAAQmG,QAAQ,YAAYrG,QAAS6E,EAAWjD,MAAM,OAAO0E,SAAUrB,EAAvE,SACG/E,EAAE,YAEL,cAAC,IAAD,CACEoG,SAAUrB,IAAcK,EAAUiB,YAAcjB,EAAUkB,GAAG,IAAMlB,EAAUmB,GAAGjB,GAChFxF,QAAO,wBAAE,uBAAAmD,EAAA,6DACP+B,GAAa,GADN,SAEDN,EAAUG,GAFT,OAGPG,GAAa,GACbL,IAJO,2CAMTjD,MAAM,OARR,SAUe1B,EAAZ+E,EAAc,uBAA4B,oBClC/C4B,GAAoBtJ,IAAOC,IAAV,8EAsGRsJ,GA/FqC,SAAC,GAQ9C,IAPLC,EAOI,EAPJA,cACAC,EAMI,EANJA,aACAlC,EAKI,EALJA,UACAzC,EAII,EAJJA,IACAZ,EAGI,EAHJA,KACAa,EAEI,EAFJA,OACAtB,EACI,EADJA,gBAEQd,EAAMC,cAAND,EACA8C,EAAYZ,GAASC,EAAKC,GAA1BU,QACAU,EAAcD,GAAWpB,EAAKC,GAA9BoB,UACFuD,EAAWC,cACTC,EAAiE1F,EAAjE0F,UAAWC,EAAsD3F,EAAtD2F,UAAWC,EAA2C5F,EAA3C4F,YAAaC,EAA8B7F,EAA9B6F,aAAchG,EAAgBG,EAAhBH,YAEnDiG,EAAiBtE,uBAAY,WACjC,IAAMuE,EAAsBC,aAAiBV,GAC7C,OAAIS,EAAsB,GAAKA,EAAsB,KAC5CnC,aAAsB0B,GAAeW,iBAEvCF,EAAoBE,mBAC1B,CAACX,IAEEY,EAAoBvC,mBAAQ,WAChC,OAAO,IAAIG,IAAU4B,GAClBS,aAAaC,aAAiBd,IAC9Be,UAAUT,GACVU,WACAC,QAAQ,KACV,CAACT,IAEEU,EAAoB7C,mBAAQ,WAChC,OAAO,IAAIG,IAAU6B,GAClBQ,aAAaC,aAAiBd,IAC9Be,UAAUT,GACVU,WACAC,QAAQ,KACV,CAACT,IAEJ,EAA2BW,YACzB,cAAC,GAAD,CAAcvD,IAAKqC,EAAcpC,UAAW5B,EAAS8B,UAAWA,EAAW9D,gBAAiBA,KADvFmH,EAAP,oBAGA,EAA4BD,YAC1B,cAAC,GAAD,CAAevD,IAAKoC,EAAenC,UAAWlB,EAAWoB,UAAWA,KAD/DsD,EAAP,oBA8BA,OACE,eAAC,IAAD,CAAMnH,eAAe,gBAAgBS,WAAW,SAAhD,UACE,cAAC,IAAD,CAASrB,MAAO0G,EAAcP,GAAG,GAAK,eAAiB,OAAvD,SACGO,EAAcP,GAAG,GAChB,IAEA,iCACGe,IACD,uBACEb,MAAO,CACL2B,SAAU,QAFd,kBAKUV,EALV,WAK8BrG,QAL9B,IAK8BA,OAL9B,EAK8BA,EAAa6E,OAL3C,MAKsD8B,EALtD,WAK0EX,QAL1E,IAK0EA,OAL1E,EAK0EA,EAAcnB,OALxF,YAjCDY,EAAcP,GAAG,GACtB,cAAC,IAAD,CACExG,QAASmI,EACT7B,SAAU,CAAC,UAAW,YAAYgC,MAAK,SAACC,GAAD,OAAUtB,EAASuB,SAASC,SAASF,MAF9E,SAIGrI,EAAE,cAGL,eAAC2G,GAAD,WACE,cAAC,IAAD,CAAYR,QAAQ,WAAWrG,QAASoI,EAAmBM,GAAG,MAA9D,SACE,cAAC,IAAD,CAAWrI,MAAM,UAAUuB,MAAM,WAEnC,cAAC,IAAD,CACEyE,QAAQ,WACRrG,QAASmI,EACT7B,SAAU,CAAC,UAAW,YAAYgC,MAAK,SAACC,GAAD,OAAUtB,EAASuB,SAASC,SAASF,MAH9E,SAKE,cAAC,IAAD,CAASlI,MAAM,UAAUuB,MAAM,kBC9C1B+G,GArCuC,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,SAAUC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,YAAazG,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OAClFI,EAAYD,cAAZC,QACAxC,EAAMC,cAAND,EACR,EAAkCtC,oBAAS,GAA3C,mBAAOqH,EAAP,KAAkBC,EAAlB,KACQ6D,ECZgB,SAACC,EAAiB1G,GAC1C,IAAMC,EAAWC,cACjB,EAA6BC,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QACXC,EAAOC,cACPC,EAAqBC,aAAcJ,EAASL,GAQlD,MAAO,CAAEyG,SANa9F,sBAAW,wBAAC,6BAAAE,EAAA,sEACX8F,aAAQnG,EAAoBkG,EAAStG,EAASC,GADnC,cAC1BU,EAD0B,OAEhCd,EAASe,YAAuBZ,EAASC,EAASC,IAFlB,kBAGzBS,GAHyB,2CAI/B,CAACX,EAASH,EAAUyG,EAASlG,EAAoBH,EAASC,KDExCsG,CAAW7G,EAAKC,GAA7ByG,SAEFI,EAAqBzG,EAAU+E,aAAiBmB,GAAY,EAC5DQ,EAAwB1G,EAAU+E,aAAiBqB,GAAe,EAClEvB,EAAiB4B,EAAmBzB,iBACpC2B,EAAoBD,EAAsB1B,iBAIhD,OACE,eAAC,IAAD,CAAM/F,GAAG,MAAMV,eAAe,gBAAgBS,WAAW,SAAzD,UACE,eAAC,IAAD,CAASrB,MAA8B,IAAvB8I,EAA2B,eAAiB,OAA5D,UACG5B,EADH,IACoBsB,KAGpB,eAAC,IAAD,CAASxI,MAA8B,IAAvB8I,EAA2B,eAAiB,OAA5D,UACGE,EADH,UAIA,cAAC,IAAD,CACE/C,SAAiC,IAAvB6C,GAA4BlE,EACtCjF,QAAO,wBAAE,uBAAAmD,EAAA,6DACP+B,GAAa,GADN,SAED6D,IAFC,OAGP7D,GAAa,GAHN,2CAFX,SAQGhF,EAAE,iBE/BLoJ,GAAS/L,IAAOC,IAAV,kDAoGG+L,GAnFqC,SAAC,GAAwC,IAAD,EAArC9H,EAAqC,EAArCA,KAAMiB,EAA+B,EAA/BA,QAAS1B,EAAsB,EAAtBA,gBAC5Dd,EAAMC,cAAND,EACR,EAAkDtC,oBAAS,GAA3D,mBAAO4L,EAAP,KAA0BC,EAA1B,KACA,EAA6BhH,cAArBiH,EAAR,EAAQA,QAAS/G,EAAjB,EAAiBA,QACTN,EAA4EZ,EAA5EY,IAAKsH,EAAuElI,EAAvEkI,YAAarH,EAA0Db,EAA1Da,OAAQsH,EAAkDnI,EAAlDmI,WAClC,GADoFnI,EAAtC0F,UAAsC1F,EAA3B2F,UAA2B3F,EAAhB4F,YAOhE5F,EAAKoI,UAAY,IANrB,IACEC,UAAWC,OADb,MACiC,EADjC,MAEE/C,aAAcgD,OAFhB,MAEuC,EAFvC,MAGEjD,cAAekD,OAHjB,MAGyC,EAHzC,MAIErB,SAAUsB,OAJZ,MAI+B,EAJ/B,MAKEpB,YAAaqB,OALf,MAKqC,EALrC,EAOML,EAAY,IAAIvE,IAAUwE,GAC1B/C,EAAe,IAAIzB,IAAUyE,GAC7BjD,EAAgB,IAAIxB,IAAU0E,GAC9BrB,EAAW,IAAIrD,IAAU2E,GACzBpB,EAAc,IAAIvD,IAAU4E,GAC5BC,EAAYC,aAAWV,EAAahH,GACpC2H,EAAM,UAAG7I,EAAK8I,mBAAR,aAAG,EAAkBC,cAC3BC,EAAa/H,GAAWoH,GAAaA,EAAUY,cAAc,GAE7DC,EAAYjB,GAAW,KAErBkB,EC9CgB,SAACC,EAAsBvI,GAC/C,IAAMC,EAAWC,cACjB,EAA6BC,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QACXC,EAAOC,cACPC,EAAqBC,aAAcJ,EAASL,GAYlD,MAAO,CAAEsI,UAVa3H,sBAAW,wBAAC,6BAAAE,EAAA,+EAEb2H,aAAQD,EAAY/H,EAAoBJ,EAASC,GAFpC,cAExBoI,EAFwB,OAG9BxI,EAASe,YAAuBZ,EAASC,EAASC,IAHpB,kBAIvBmI,GAJuB,0DAMvB,GANuB,yDAQ/B,CAACrI,EAASH,EAAUsI,EAAY/H,EAAoBH,EAASC,KDgC1CoI,CADHC,aAAiBN,EAAWP,EAAWzH,GACbL,GAArCsI,UAEFM,EAAgBjI,sBAAW,wBAAC,uBAAAE,EAAA,sEAE9BsG,GAAqB,GAFS,SAGxBmB,IAHwB,OAI9BnB,GAAqB,GAJS,gDAM9BlG,QAAQrF,MAAR,MAN8B,yDAQ/B,CAAC0M,IAoBJ,OACE,eAACtB,GAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAMhJ,MAAI,EAAC6K,cAAc,YAAY9K,MAAM,UAAUgI,SAAS,OAAO+C,GAAG,MAAxE,UACGxB,EAAWzD,OADd,YAGA,cAAC,IAAD,CAAM7F,MAAI,EAAC6K,cAAc,YAAY9K,MAAM,UAAUgI,SAAS,OAA9D,SACGnI,EAAE,eAGP,cAAC,GAAD,CACE0I,SAAUA,EACVvG,IAAKA,EACLC,OAAQA,EACRuG,MAAOe,EAAWzD,OAClB2C,YAAaA,IAEf,eAAC,IAAD,WACE,cAAC,IAAD,CAAMxI,MAAI,EAAC6K,cAAc,YAAY9K,MAAM,UAAUgI,SAAS,OAAO+C,GAAG,MAAxE,SACGd,IAEH,cAAC,IAAD,CAAMhK,MAAI,EAAC6K,cAAc,YAAY9K,MAAM,UAAUgI,SAAS,OAA9D,SACGnI,EAAE,eAGLwC,EA1CG+H,EACL,cAAC,GAAD,CACE1D,cAAeA,EACftF,KAAMA,EACNuF,aAAcA,EACdlC,UAAWwF,EACXjI,IAAKA,EACLC,OAAQA,EACRtB,gBAAiBA,IAGnB,cAAC,IAAD,CAAQqK,GAAG,MAAMzJ,MAAM,OAAO0E,SAAUkD,EAAmBxJ,QAASkL,EAApE,SACGhL,EAAE,sBA8BO,cAACoL,GAAA,EAAD,CAAcD,GAAG,MAAMzJ,MAAM,aEzFzC2J,GAAiBC,YAAH,gLAYdC,GAAmBlO,IAAOC,IAAV,kPACN,gBAAG0B,EAAH,EAAGA,MAAH,wCAA0CA,EAAME,OAAOsM,cAAvD,aAAyExM,EAAME,OAAOuM,UAAtF,OAEDJ,IAUTK,GAAQrO,IAAOC,IAAV,sSAGQ,gBAAG0B,EAAH,EAAGA,MAAH,SAAU2M,eAAuC,OAAS3M,EAAM4M,MAAMC,QAUnFC,GAAUzO,IAAOC,IAAV,4GACS,qBAAG0B,MAAkBE,OAAO6M,cAM5CC,GAAmB3O,IAAOC,IAAV,iEACV,SAACoC,GAAD,OAAYA,EAAMK,SAAW,OAAS,SA4GnCkM,GA/F2B,SAAC,GAA0C,IAAxC1K,EAAuC,EAAvCA,KAAMZ,EAAiC,EAAjCA,QAAS6B,EAAwB,EAAxBA,QAClDxC,GAD0E,EAAfkM,SACrDjM,cAAND,GACAyC,EAAYF,cAAZE,QACF0J,EAAiB,KAAZ1J,EAAiB,GAAK,EAEjC,GADe2J,aAAYD,GAC+BzO,oBAAS,IAAnE,mBAAO2O,EAAP,KAA8BC,EAA9B,KAEMC,EAAYhL,EAAKiL,OAAS,IAAInH,IAAU9D,EAAKiL,QAAU,IAAInH,IAAU,GAGrE/D,EAAaC,EAAKkL,SAASC,MAAM,KAEjC9L,EAAsBW,EAAKoL,SAAL,WAAoBC,WAAWrL,EAAKoL,SAAS7E,QAAQ,IAAIN,eAAe,UAAa,IAE3G3G,EAAUU,EAAKkL,UAAYlL,EAAKkL,SAASnC,cAAc1L,QAAQ,UAAW,IAI1EkC,EAAkBS,EAAKsL,iBACrBC,EAAavL,EAAbuL,SAEFnB,GADYpK,EAAKkI,YAAYhH,GACU,SAAtBlB,EAAKoH,MAAM1C,QAClC,OAAK1E,EAAKa,OAKR,eAACsJ,GAAD,CAAOC,eAAgBA,EAAvB,UACGA,GAAkB,cAACJ,GAAD,IACnB,cAAC,GAAD,CACEhK,KAAMA,EACNV,QAASA,EACTkM,WAAYxL,EAAKwL,WACjB1L,gBAAiBE,EAAKyL,YACtB1L,WAAYA,EACZF,YAAaG,EAAKoH,MAAM1C,SAE1B,qCAsBE,eAAC,IAAD,CAAMlF,eAAe,gBAArB,UACE,eAAC,IAAD,WAAOf,EAAE,UAAT,OACA,eAAC,IAAD,CAAMI,MAAI,EAAV,UACGmH,aAAiBgF,GAAWzE,QAAQ,GADvC,IAC4CvG,EAAKmI,WAAWzD,OAD5D,YAGGsB,aAAiB,IAAIlC,IAAU9D,EAAK0L,WAAa,MAAMnF,QAAQ,GAHlE,qBAMF,eAAC,IAAD,CAAM/G,eAAe,gBAArB,UACE,cAAC,IAAD,mBACA,eAAC,IAAD,CAAMX,MAAI,EAAV,UAAYmB,EAAK2L,IAAjB,cAOJ,cAACC,GAAD,CAAsB5L,KAAMA,EAAMiB,QAASA,EAAS1B,gBAAiBA,IACrE,cAACgL,GAAD,IACA,cAAC,GAAD,CACEhM,QAAS,kBAAMwM,GAA0BD,IACzCtM,SAAUsM,IAEZ,cAACL,GAAD,CAAkBjM,SAAUsM,EAA5B,SACE,cAAC,GAAD,CACE1L,QAASA,EACTD,YAAaoM,EACblM,oBAAqBA,EACrBC,QAASA,EACTC,gBAAiBA,SAjEhB,wE,SbVCR,K,cAAAA,E,aAAAA,M,KcnEZ,IAAM8M,GAAgB/P,IAAOC,IAAV,mDAqEb+P,IAjEmBhQ,IAAOC,IAAV,qTAUlB,qBAAG0B,MAAkBsO,aAAaC,MAOhBlQ,IAAOC,IAAV,kIAKfkQ,KAKiBnQ,IAAOC,IAAV,mEACZkQ,KAKkBnQ,IAAOC,IAAV,gKAMjB,qBAAG0B,MAAkBsO,aAAaC,MAMjBlQ,IAAOC,IAAV,qSAWd,qBAAG0B,MAAkBsO,aAAaC,MASnBlQ,IAAOC,IAAV,qIA2KDmQ,IApKKpQ,YAAOqQ,IAAPrQ,CAAH,gGAKO,WACLsQ,cAATC,KAAR,IACQ5N,EAAMC,cAAND,EACR,EAA0C6N,cAA5BC,EAAd,EAAQC,KACR,GADA,EAAuBC,eACWtQ,oBAAS,IAA3C,mBAAOuQ,EAAP,KAAkBC,EAAlB,KACMhC,EAAWiC,cACjB,EAA0BzQ,mBAAS,IAAnC,mBAAO0Q,EAAP,KACA,GADA,KACgC7Q,EAAgB+C,EAAS+N,MAAO,sBAAhE,mBACA,GADA,UAC6B9L,eAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QACXC,EAAOC,cACPN,EAAWC,cAEDgM,cAChBnQ,qBAAU,WACRkE,EAASkM,YAAmB9L,IAC5BJ,EACEmM,YAAW/L,EAASC,GAAM,GAAM,WAC9BwL,GAAa,SAGhB,CAAC1L,EAASH,EAAUI,EAASC,IAEhCvE,qBAAU,WACR,IAAIsQ,EAOJ,OANIjM,GAAWsL,EAAQ3J,OAAS,GAAK2J,EAAQ,GAAG1L,SAC9CqM,EAAKC,aAAY,WACfrM,EAASe,YAAuBZ,EAASC,EAASC,EAAMoL,MACvD,MAGE,WACLa,cAAcF,MAEf,CAACjM,EAASsL,EAAQ3J,OAAQ1B,EAASC,EAAML,IAI5C,IAMMuM,EAAkB1J,mBAAQ,WAC9B,GAAIkJ,EAAO,CACT,IAAMS,EAAiBnQ,EAAS0P,EAAMU,eACtC,OAAOhB,EAAQiB,QAAO,SAACxN,GACrB,OAAO7C,EAAS6C,EAAKkL,SAASqC,eAAevG,SAASsG,MAG1D,OAAOf,IACN,CAACM,EAAON,IA2EX,OACE,qCACE,eAAC,EAAD,CAAY7O,WAAU,cAAS+P,GAAT,wBAAuD3P,SAHjE,EAGZ,UACE,cAAC,IAAD,CAAS4P,GAAG,KAAKC,MAAM,MAAM/O,MAAM,UAAUsB,GAAG,OAAhD,SACGzB,EAAE,WAEL,cAAC,IAAD,CAASkP,MAAM,KAAK/O,MAAM,OAA1B,4DAIF,eAACiN,GAAD,WACe,KAAZ3K,IAAmBwL,GAClB,cAAC,IAAD,CAAQ9H,QAAQ,UAAhB,SACE,cAAC,IAAD,kEAnCN,8BACI8H,EAaA,cAACZ,GAAD,UACE,cAAC,IAAD,MAbF,cAACpM,EAAD,UACG2N,EAAgBxK,KAAI,SAAC7C,GAAD,OACnB,cAAC,GAAD,CAEEA,KAAMA,EACNiB,QAASA,EACT7B,SAAS,EACTuL,SAAUA,GALZ,UACU3K,EAAKa,QADf,OACwBb,EAAKY,sB,uXCrN9ByI,G,MAAO,uCAAG,WAAOD,EAAY/H,EAAoBJ,EAASC,GAAhD,iBAAAQ,EAAA,6DACfkM,EAAuB,KAAZ1M,EAAiB,CAAE2M,KAAM5M,EAAS2M,SAAU,WAAc,CAAEC,KAAM5M,GAD9D,SAEHmI,EAAW0E,QAC1BzE,QAAQhI,EAAmB0M,QAAQC,QAASC,IAAOC,UAAUC,YAC7DC,KAAKR,GAJa,cAEfS,EAFe,yBAKdA,GALc,2CAAH,6DAQP1M,EAAK,uCAAG,WAAON,EAAoBT,EAAKa,EAAQR,EAASC,GAAjD,eAAAQ,EAAA,6DASbkM,EAAuB,KAAZ1M,EAAiB,CAAE2M,KAAM5M,EAAS2M,SAAU,WAAc,CAAEC,KAAM5M,GAThE,kBAUZI,EAAmByM,QACvBQ,QAAQ1N,EAAK,IAAIkD,IAAUrC,GAAQ8M,MAAMC,KAAuBC,YAChEL,KAAKR,GACLc,GAAG,mBAAmB,SAACpF,GACtB,OAAOA,EAAGqF,oBAdK,2CAAH,8DAkBLC,EAAU,uCAAG,WAAOC,EAAgB5N,EAASQ,EAAQqN,EAAUC,EAAeC,GAAjE,SAAAtN,EAAA,+EAEjBmN,EAAef,QACnBmB,OAAOH,EAAUrN,EAAQuN,GACzBZ,KAFI,aAGHP,KAAM5M,GACF8N,GAAiB,CAAErS,MAAO+E,KAE/BiN,GAAG,mBAAmB,SAACpF,GACtB,OAAOA,EAAGqF,oBATU,2CAAH,gEAaVO,EAAc,uCAAG,WAAOL,EAAgB5N,EAASQ,EAAQqN,EAAUE,GAAlD,SAAAtN,EAAA,+EAErBmN,EAAef,QACnBqB,UAAUL,EAAU7N,EAASQ,EAAQuN,GACrCZ,KAAK,CACJP,KAAM5M,IAEPyN,GAAG,mBAAmB,SAACpF,GACtB,OAAOA,EAAGqF,oBARc,2CAAH,8DAYdS,EAAY,uCAAG,WAAOC,EAAiBpO,GAAxB,SAAAS,EAAA,+EACnB2N,EAAgBvB,QACpBwB,QACAlB,KAAK,CACJP,KAAM5M,IAEPyN,GAAG,mBAAmB,SAACpF,GACtB,OAAOA,EAAGqF,oBAPY,2CAAH,wDAWZY,EAAU,uCAAG,WAAOC,EAAeC,EAAexO,EAASC,GAA9C,iBAAAQ,EAAA,6DAClBkM,EAAuB,KAAZ1M,EAAiB,CAAE2M,KAAM5M,EAAS2M,SAAU,WAAc,CAAEC,KAAM5M,GAD3D,SAENuO,EAAc1B,QAAQzE,QAAQoG,EAAexB,IAAOC,UAAUC,YAAYC,KAAKR,GAFzE,cAElBS,EAFkB,yBAGjBA,GAHiB,2CAAH,4DAwBVnM,EAAO,uCAAG,WAAOb,EAAoBT,EAAKa,EAAQR,EAASC,GAAjD,eAAAQ,EAAA,6DASfkM,EAAuB,KAAZ1M,EAAiB,CAAE2M,KAAM5M,EAAS2M,SAAU,WAAc,CAAEC,KAAM5M,GAT9D,kBAUdI,EAAmByM,QACvB4B,SAAS9O,EAAK,IAAIkD,IAAUrC,GAAQ8M,MAAMC,KAAuBC,YACjEL,KAAKR,GACLc,GAAG,mBAAmB,SAACpF,GACtB,OAAOA,EAAGqF,oBAdO,2CAAH,8DAoCPnH,EAAO,uCAAG,WAAOnG,EAAoBT,EAAKK,EAASC,GAAzC,eAAAQ,EAAA,6DACfkM,EAAuB,KAAZ1M,EAAiB,CAAE2M,KAAM5M,EAAS2M,SAAU,WAAc,CAAEC,KAAM5M,GAD9D,kBAEdI,EAAmByM,QACvB6B,YAAY/O,GACZwN,KAAKR,GACLc,GAAG,mBAAmB,SAACpF,GACtB,OAAOA,EAAGqF,oBANO,2CAAH,6D,qFC9GL9E,IAZM,SAAC1L,GACpB,IAAQM,EAAMC,cAAND,EACR,EAA0BmR,cAAlBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,OACPC,EAA0BC,YAAeH,EAAOC,GAAhDC,sBAER,OACE,cAAC,IAAD,yBAAQ5P,MAAM,OAAO5B,QAASwR,GAA2B5R,GAAzD,aACGM,EAAE,sB,2HCgBHwR,EAAmBnU,IAAOC,IAAV,8MARD,SAAC,GAAkC,IAAD,IAA/BmU,iBAA+B,SAAZzS,EAAY,EAAZA,MACzC,OAAIyS,EACKzS,EAAM0S,QAAQC,QAGhB3S,EAAM0S,QAAQE,SASZ,qBAAG5S,MAAkBE,OAAO2S,QAKjCC,EAAczU,YAAO0U,IAAP1U,CAAH,0KAMb,qBAAG2B,MAAkBsO,aAAa0E,MAIlC,qBAAGhT,MAAkBsO,aAAaC,MAKhC0E,EAAqB5U,YAAOmQ,IAAPnQ,CAAH,uGA+DTyI,EAvD+B,SAAC,GAYxC,IAXLrB,EAWI,EAXJA,IACAyN,EAUI,EAVJA,IACAjM,EASI,EATJA,OACAD,EAQI,EARJA,SACAD,EAOI,EAPJA,YACA9H,EAMI,EANJA,MAMI,IALJkU,iCAKI,SAJJrR,EAII,EAJJA,gBACAoF,EAGI,EAHJA,WAGI,IAFJkM,sBAEI,MAFa,UAEb,MADJC,mBACI,SACIrS,EAAMC,cAAND,EACFsS,EAAwB,MAAR7N,IAAgBA,EACtC,OACE,sBAAK+B,MAAO,CAAE+L,SAAU,WAAY7Q,MAAO,QAA3C,UACE,eAAC8P,EAAD,CAAkBC,UAAWa,GAAiBD,EAA9C,UACE,eAAC,IAAD,CAAMtR,eAAe,gBAAgByR,GAAG,OAAxC,UACE,cAAC,IAAD,CAAMrK,SAAS,OAAf,SAAuBjC,IACvB,cAAC,IAAD,CAAMiC,SAAS,OAAf,mBAA0BiK,EAA1B,aAA6CD,EAA4B,IAAM1N,QAEjF,eAAC,IAAD,CAAMjD,WAAW,WAAWT,eAAe,gBAA3C,UACE,cAAC,IAAD,UACE,cAAC+Q,EAAD,CACEW,QAAQ,sBACRC,UAAU,UACVC,KAAK,MACLT,IAAKA,EACLzN,IAAKA,EACLuB,SAAUA,EACV4M,YAAY,IACZ3U,MAAOA,MAGX,eAAC,IAAD,CAAMuD,WAAW,SAAjB,UACE,cAAC,IAAD,CAAQ0N,MAAM,KAAKpP,QAASiG,EAAayC,GAAG,MAAMpC,SAAU+L,EAA5D,SACGnS,EAAE,SAEL,cAAC,IAAD,UAAOiG,aAIZqM,GAAiBxR,GAChB,eAACmR,EAAD,CAAoB9J,SAAS,OAAOhI,MAAM,UAA1C,UACGH,EAAE,sBADL,IAC6B,IAC3B,cAAC,IAAD,CAAMmI,SAAS,OAAO/H,MAAM,EAAOY,KAAMF,EAAiB+R,UAAQ,EAAC1S,MAAM,UAAzE,SACGH,EAAE,eAAgB,CAAEiG,qB,uGC/E3B6M,EAAezV,IAAOC,IAAV,+DACN,SAACoC,GAAD,OAAWA,EAAMqT,QAClB,SAACrT,GAAD,OAAWA,EAAMqT,QAGbxO,EA5BuB,SAAC,GAAqB,IAGtDyO,EAHqD,IAAlBD,YAAkB,MAAX,KAAW,EACjDnP,EAAYqP,qBAAWC,KAAvBtP,QAGR,OAAQmP,GACN,IAAK,KACHC,EAAIpP,EAAQ,GACZ,MACF,IAAK,KACHoP,EAAIpP,EAAQ,GACZ,MACF,IAAK,KACL,QACEoP,EAAIpP,EAAQ,GAGhB,OAAO,cAACkP,EAAD,CAAcC,KAAMC","file":"static/js/8.34b99eaf.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useEffect, useState } from 'react'\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, localStorageKey: string) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? JSON.parse(valueFromLS) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value))\n  }, [value, localStorageKey])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from 'luastarter-uikits'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string; isImage?: boolean }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n  ${({ isImage }) => (isImage ? 'background-size: cover;background-repeat: no-repeat;' : '')}\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string; isImage?: boolean }> = ({\n  background,\n  isImage,\n  children,\n  ...props\n}) => (\n  <Outer background={background} isImage={isImage} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'luastarter-uikits'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 4,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  // {\n  //   id: 5,\n  //   name: 'multiplier',\n  //   sortable: true,\n  //   label: 'Multiplier',\n  // },\n  {\n    id: 5,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal } from 'luastarter-uikits'\n\nexport interface ExpandableSectionProps {\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        <Text>{totalValueFormatted}</Text>\n      </Flex>\n      <StyledLinkExternal href={addLiquidityUrl}>Add liquidity {lpLabel}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading, Image } from 'luastarter-uikits'\nimport { CommunityTag, CoreTag } from 'components/Tags'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isCommunityFarm?: boolean\n  farmImages?: string[]\n  tokenSymbol?: string\n  farm?: any\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({ lpLabel, isCommunityFarm, farmImages, tokenSymbol, farm }) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Wrapper justifyContent=\"left\" alignItems=\"center\" width=\"130px\">\n        <Image src={farm.icon} alt={tokenSymbol} width={64} height={64} />\n        <Image src={farm.icon2} alt={tokenSymbol} width={64} height={64} />\n      </Wrapper>\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\n        <Heading mb=\"4px\">{lpLabel.replace('LUA-V1 LP', '').trim()}</Heading>\n        <Flex justifyContent=\"center\">{/* {isCommunityFarm ? <CommunityTag /> : <CoreTag />} */}</Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport useWeb3 from 'hooks/useWeb3'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { stake } from 'utils/callHelpers'\nimport { useMasterchef } from './useContract'\n\nconst useStake = (pid: number, master?: string) => {\n  const dispatch = useAppDispatch()\n  const { account, chainId } = useWeb3React()\n  const web3 = useWeb3()\n  const masterChefContract = useMasterchef(chainId, master)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account, chainId)\n      dispatch(fetchFarmUserDataAsync(account, chainId, web3))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid, chainId, web3],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport useWeb3 from 'hooks/useWeb3'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { unstake } from 'utils/callHelpers'\nimport { useMasterchef } from './useContract'\n\nconst useUnstake = (pid: number, master?: string) => {\n  const dispatch = useAppDispatch()\n  const { account, chainId } = useWeb3React()\n  const web3 = useWeb3()\n  const masterChefContract = useMasterchef(chainId, master)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account, chainId)\n      dispatch(fetchFarmUserDataAsync(account, chainId, web3))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid, chainId, web3],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal, LinkExternal } from 'luastarter-uikits'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from 'luastarter-uikits'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback, useMemo } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal, Text } from 'luastarter-uikits'\nimport { useLocation } from 'react-router-dom'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  reserves0?: string\n  reserves1?: string\n  totalSupply?: string\n}\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n  master?: string\n  farm: FarmWithStakedValue\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  farm,\n  master,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStake(pid, master)\n  const { onUnstake } = useUnstake(pid, master)\n  const location = useLocation()\n  const { reserves0, reserves1, totalSupply, token2Symbol, tokenSymbol } = farm\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceNumber.toLocaleString()\n  }, [stakedBalance])\n\n  const calculatedAmount1 = useMemo(() => {\n    return new BigNumber(reserves0)\n      .multipliedBy(getBalanceAmount(stakedBalance))\n      .dividedBy(totalSupply)\n      .toNumber()\n      .toFixed(2)\n  }, [displayBalance])\n\n  const calculatedAmount2 = useMemo(() => {\n    return new BigNumber(reserves1)\n      .multipliedBy(getBalanceAmount(stakedBalance))\n      .dividedBy(totalSupply)\n      .toNumber()\n      .toFixed(2)\n  }, [displayBalance])\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake LP')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n  // (${calculatedAmount1} ${tokenSymbol?.symbol} + ${calculatedAmount2} ${\n  //   token2Symbol?.symbol\n  // })\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>\n        {stakedBalance.eq(0) ? (\n          '0'\n        ) : (\n          <span>\n            {displayBalance()}\n            <span\n              style={{\n                fontSize: '15px',\n              }}\n            >\n              &nbsp;({calculatedAmount1} {tokenSymbol?.symbol} + {calculatedAmount2} {token2Symbol?.symbol})\n            </span>\n          </span>\n        )}\n      </Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'luastarter-uikits'\nimport { useTranslation } from 'contexts/Localization'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useWeb3React } from '@web3-react/core'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  earningsLua?: BigNumber\n  token?: string\n  pid?: number\n  master?: string\n}\n\n// TODO: Change value of the cakePrice here\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, token, earningsLua, pid, master }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid, master)\n\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\n  const rawEarningsBalanceLua = account ? getBalanceNumber(earningsLua) : 0\n  const displayBalance = rawEarningsBalance.toLocaleString()\n  const displayBalanceLua = rawEarningsBalanceLua.toLocaleString()\n\n  // const earningsBusd = rawEarningsBalance ? new BigNumber(rawEarningsBalance).multipliedBy(cakePrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\n        {displayBalance} {token}\n        {/* {earningsBusd > 0 && <CardBusdValue value={earningsBusd} />} */}\n      </Heading>\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\n        {displayBalanceLua} LUA\n        {/* {earningsBusd > 0 && <CardBusdValue value={earningsBusd} />} */}\n      </Heading>\n      <Button\n        disabled={rawEarningsBalance === 0 || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          setPendingTx(false)\n        }}\n      >\n        {t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport useWeb3 from 'hooks/useWeb3'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { harvest } from 'utils/callHelpers'\nimport { useMasterchef } from './useContract'\n\n// eslint-disable-next-line import/prefer-default-export\nexport const useHarvest = (farmPid: number, master?: string) => {\n  const dispatch = useAppDispatch()\n  const { account, chainId } = useWeb3React()\n  const web3 = useWeb3()\n  const masterChefContract = useMasterchef(chainId, master)\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account, chainId)\n    dispatch(fetchFarmUserDataAsync(account, chainId, web3))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract, chainId, web3])\n\n  return { onReward: handleHarvest }\n}\n","import React, { useState, useCallback, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { provider as ProviderType } from 'web3-core'\nimport BigNumber from 'bignumber.js'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getERC20Contract } from 'utils/contractHelpers'\nimport { useWeb3React } from '@web3-react/core'\nimport { Button, Flex, Text } from 'luastarter-uikits'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  reserves0?: string\n  reserves1?: string\n  totalSupply?: string\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  provider?: ProviderType\n  account?: string\n  addLiquidityUrl?: string\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { library, chainId } = useWeb3React()\n  const { pid, lpAddresses, master, quoteToken, reserves0, reserves1, totalSupply } = farm\n  const {\n    allowance: allowanceAsString = 0,\n    tokenBalance: tokenBalanceAsString = 0,\n    stakedBalance: stakedBalanceAsString = 0,\n    earnings: earningsAsString = 0,\n    earningsLua: earningsLuaAsString = 0,\n  } = farm.userData || {}\n  const allowance = new BigNumber(allowanceAsString)\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\n  const earnings = new BigNumber(earningsAsString)\n  const earningsLua = new BigNumber(earningsLuaAsString)\n  const lpAddress = getAddress(lpAddresses, chainId)\n  const lpName = farm.lpTokenName?.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  // @ts-ignore\n  const eProvider = library || null\n  const lpContract = getERC20Contract(eProvider, lpAddress, chainId)\n  const { onApprove } = useApprove(lpContract, master)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        farm={farm}\n        tokenBalance={tokenBalance}\n        tokenName={lpName}\n        pid={pid}\n        master={master}\n        addLiquidityUrl={addLiquidityUrl}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"#FABC46\" fontSize=\"12px\" pr=\"3px\">\n          {quoteToken.symbol} & LUA\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"#c3c3c3\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction\n        earnings={earnings}\n        pid={pid}\n        master={master}\n        token={quoteToken.symbol}\n        earningsLua={earningsLua}\n      />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"#FABC46\" fontSize=\"12px\" pr=\"3px\">\n          {lpName}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"#c3c3c3\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport useWeb3 from 'hooks/useWeb3'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef } from './useContract'\n\n// Approve a Farm\n// eslint-disable-next-line import/prefer-default-export\nexport const useApprove = (lpContract: Contract, master?: string) => {\n  const dispatch = useAppDispatch()\n  const { account, chainId } = useWeb3React()\n  const web3 = useWeb3()\n  const masterChefContract = useMasterchef(chainId, master)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account, chainId)\n      dispatch(fetchFarmUserDataAsync(account, chainId, web3))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract, chainId, web3])\n\n  return { onApprove: handleApprove }\n}\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { provider as ProviderType } from 'web3-core'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from 'luastarter-uikits'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL, NUMBER_BLOCKS_PER_YEAR } from 'config'\nimport { IsTomoChain } from 'utils/wallet'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  reserves0?: string\n  reserves1?: string\n  totalSupply?: string\n}\n\nconst AccentGradient = keyframes`  \n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\n  background-size: 400% 400%;\n  animation: ${AccentGradient} 2s linear infinite;\n  border-radius: 32px;\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\n  align-self: baseline;\n  background: #282828;\n  border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  cakePrice?: BigNumber\n  provider?: ProviderType\n  account?: string\n  luaPrice?: BigNumber\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, account, luaPrice }) => {\n  const { t } = useTranslation()\n  const { chainId } = useWeb3React()\n  const ID = chainId === 88 ? 88 : 1\n  const isTomo = IsTomoChain(ID)\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n  // const newReward = useNewRewards(farm.pid + 1)\n  const newReward = farm.reward ? new BigNumber(farm.reward) : new BigNumber(0)\n  // We assume the token name is coin pair + lp e.g. CAKE-BNB LP, LINK-BNB LP,\n  // NAR-CAKE LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\n  const farmImages = farm.lpSymbol.split('-')\n\n  const totalValueFormatted = farm.usdValue ? `$${parseFloat(farm.usdValue.toFixed(0)).toLocaleString('en-US')}` : '-'\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = 'LUA'\n\n  // const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  const addLiquidityUrl = farm.addLiquidityLink\n  const { pairLink } = farm\n  const lpAddress = farm.lpAddresses[chainId]\n  const isPromotedFarm = farm.token.symbol === 'CAKE'\n  if (!farm.master) {\n    return <div>Missing master address in this pool</div>\n  }\n\n  return (\n    <FCard isPromotedFarm={isPromotedFarm}>\n      {isPromotedFarm && <StyledCardAccent />}\n      <CardHeading\n        farm={farm}\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isCommunityFarm={farm.isCommunity}\n        farmImages={farmImages}\n        tokenSymbol={farm.token.symbol}\n      />\n      <>\n        {/* <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {newReward && farm && luaPrice && farm.usdValue && farm.totalToken2Value && farm.poolWeight ? (\n              <>\n                {parseFloat(\n                  luaPrice\n                    .times(NUMBER_BLOCKS_PER_YEAR[ID])\n                    .times(newReward.div(10 ** 18))\n                    .div(farm.usdValue)\n                    .div(10 ** 8)\n                    .times(100)\n                    .toFixed(2),\n                ).toLocaleString('en-US')}\n                %\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex> */}\n        <Flex justifyContent=\"space-between\">\n          <Text>{t('Reward')}:</Text>\n          <Text bold>\n            {getBalanceNumber(newReward).toFixed(2)} {farm.quoteToken.symbol}\n            &nbsp;+&nbsp;\n            {getBalanceNumber(new BigNumber(farm.luaReward || '0')).toFixed(2)} LUA / block\n          </Text>\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <Text>APY:</Text>\n          <Text bold>{farm.apy} %</Text>\n        </Flex>\n      </>\n      {/* <Flex justifyContent=\"space-between\">\n        <Text>{t('Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex> */}\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          infoAddress={pairLink}\n          totalValueFormatted={totalValueFormatted}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useHistory } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { useSelector } from 'react-redux'\nimport { useWeb3React } from '@web3-react/core'\nimport { Image, Heading, RowType, Text, Mesage, Spinner } from 'luastarter-uikits'\nimport styled from 'styled-components'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms } from 'state/hooks'\nimport useLuaPrice from 'hooks/useLuaPrice'\nimport usePersistState from 'hooks/usePersistState'\nimport useWeb3 from 'hooks/useWeb3'\nimport { useTranslation } from 'contexts/Localization'\nimport { NUMBER_BLOCKS_PER_YEAR } from 'config'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { IsTomoChain } from 'utils/wallet'\nimport { latinise } from 'utils/latinise'\nimport { fetchFarms, fetchFarmUserDataAsync, setDefaultFarmData } from 'state/actions'\nimport PageHeader from 'components/PageHeader'\nimport FarmCard from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\nimport SearchInput from './components/SearchInput'\nimport { RowProps } from './components/FarmTable/Row'\nimport ToggleView from './components/ToggleView/ToggleView'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\n\nconst PoolContainer = styled.div`\n  padding: 48px 24px;\n`\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\nconst PageLoader = styled.div`\n  height: calc(100vh - 312px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const [isLoading, setIsLoading] = useState(true)\n  const luaPrice = useLuaPrice()\n  const [query, setQuery] = useState('')\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, 'pancake_farm_view')\n  const { account, chainId } = useWeb3React()\n  const web3 = useWeb3()\n  const dispatch = useAppDispatch()\n  const ID = 88 // chainId === 88 ? 88 : 1\n  const history = useHistory()\n  useEffect(() => {\n    dispatch(setDefaultFarmData(chainId))\n    dispatch(\n      fetchFarms(chainId, web3, true, () => {\n        setIsLoading(false)\n      }),\n    )\n  }, [account, dispatch, chainId, web3])\n\n  useEffect(() => {\n    let id\n    if (account && farmsLP.length > 0 && farmsLP[0].master) {\n      id = setInterval(() => {\n        dispatch(fetchFarmUserDataAsync(account, chainId, web3, farmsLP))\n      }, 2000)\n    }\n\n    return () => {\n      clearInterval(id)\n    }\n  }, [account, farmsLP.length, chainId, web3, dispatch])\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const farmsLpMemoized = useMemo(() => {\n    if (query) {\n      const lowercaseQuery = latinise(query.toLowerCase())\n      return farmsLP.filter((farm) => {\n        return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n      })\n    }\n    return farmsLP\n  }, [query, farmsLP])\n\n  const rowData = []\n  /*\n  farmsLpMemoized.map((farm) => {\n    console.log(farm)\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n    const reward = farm.reward ? new BigNumber(farm.reward) : new BigNumber(0)\n    const row: RowProps = {\n      apr: {\n        value: '1', // have to fill correct value\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        luaPrice,\n        originalValue: parseFloat(\n          luaPrice\n            .times(NUMBER_BLOCKS_PER_YEAR[ID])\n            .times(reward.div(10 ** 18))\n            .div(farm.usdValue)\n            .div(10 ** 8)\n            .times(100)\n            .toFixed(2),\n        ).toLocaleString('en-US'), // have to fill correct value\n      },\n      farm: {\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\n        label: lpLabel,\n        pid: farm.pid,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.usdValue, // have to fill correct value\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n  */\n\n  const renderContent = (): JSX.Element => {\n    return (\n      <div>\n        {!isLoading ? (\n          <FlexLayout>\n            {farmsLpMemoized.map((farm) => (\n              <FarmCard\n                key={`${farm.master}${farm.pid}`}\n                farm={farm}\n                account={account}\n                removed={false}\n                luaPrice={luaPrice}\n              />\n            ))}\n          </FlexLayout>\n        ) : (\n          <PageLoader>\n            <Spinner />\n          </PageLoader>\n        )}\n      </div>\n    )\n  }\n  const isImage = true\n  return (\n    <>\n      <PageHeader background={`url(${process.env.PUBLIC_URL}/images/farm-bg.png)`} isImage={isImage}>\n        <Heading as=\"h1\" scale=\"xxl\" color=\"#FFFFFF\" mb=\"24px\">\n          {t('Farms')}\n        </Heading>\n        <Heading scale=\"lg\" color=\"text\">\n          Stake your LP tokens and earn token rewards\n        </Heading>\n      </PageHeader>\n      <PoolContainer>\n        {chainId !== 88 && !isLoading && (\n          <Mesage variant=\"warning\">\n            <Text>Please switch to Tomo Mainnet to use this feature</Text>\n          </Mesage>\n        )}\n        {/* <ControlContainer>\n          <ViewControls>\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n          </ViewControls>\n          <FilterContainer>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text textTransform=\"uppercase\">{t('Search')}</Text>\n              <SearchInput onChange={handleChangeQuery} />\n            </LabelWrapper>\n          </FilterContainer>\n        </ControlContainer> */}\n        {renderContent()}\n      </PoolContainer>\n    </>\n  )\n}\n\nexport default Farms\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account, chainId?) => {\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  const res = await lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send(gasLimit)\n  return res\n}\n\nexport const stake = async (masterChefContract, pid, amount, account, chainId?) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  //     .send({ from: account, gas: DEFAULT_GAS })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send(gasLimit)\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const depositIdo = async (luaIdoContract, account, amount, idoIndex, isNativeToken, proofS) => {\n  // If pay token is native token, we will send amount or else we wont'\n  return luaIdoContract.methods\n    .commit(idoIndex, amount, proofS)\n    .send({\n      from: account,\n      ...(isNativeToken && { value: amount }),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const claimRewardIdo = async (luaIdoContract, account, amount, idoIndex, proofS) => {\n  // const commitedAmount = await luaIdoContract.methods.userCommitedAmount(account, 0).call()\n  return luaIdoContract.methods\n    .userClaim(idoIndex, account, amount, proofS)\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const claimVesting = async (vestingContract, account) => {\n  return vestingContract.methods\n    .claim()\n    .send({\n      from: account,\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const approveIdo = async (tokenContract, luaIdoAddress, account, chainId) => {\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  const res = await tokenContract.methods.approve(luaIdoAddress, ethers.constants.MaxUint256).send(gasLimit)\n  return res\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account, chainId?) => {\n  // if (pid === 0) {\n  //   return masterChefContract.methods\n  //     .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n  //     .send({ from: account, gas: DEFAULT_GAS })\n  //     .on('transactionHash', (tx) => {\n  //       return tx.transactionHash\n  //     })\n  // }\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send(gasLimit)\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account, chainId) => {\n  const gasLimit = chainId === 88 ? { from: account, gasLimit: '0x7A120' } : { from: account }\n  return masterChefContract.methods\n    .claimReward(pid)\n    .send(gasLimit)\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import React from 'react'\nimport { Button, useWalletModal } from 'luastarter-uikits'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button width=\"100%\" onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link, Box } from 'luastarter-uikits'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ModalInputProps {\n  max: string\n  min?: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  secondaryTitle?: string\n  isLoadingDataFromContract?: boolean\n  showWarning?: boolean\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: #1a1a1a;\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 8px 16px 8px 0;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  width: 60px;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  min,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  isLoadingDataFromContract = false,\n  addLiquidityUrl,\n  inputTitle,\n  secondaryTitle = 'Balance',\n  showWarning = true,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n  return (\n    <div style={{ position: 'relative', width: '100%' }}>\n      <StyledTokenInput isWarning={isBalanceZero && showWarning}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{`${secondaryTitle}: ${isLoadingDataFromContract ? '~' : max}`}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-between\">\n          <Box>\n            <StyledInput\n              pattern=\"^[0-9]*[.,]?[0-9]*$\"\n              inputMode=\"decimal\"\n              step=\"any\"\n              min={min}\n              max={max}\n              onChange={onChange}\n              placeholder=\"0\"\n              value={value}\n            />\n          </Box>\n          <Flex alignItems=\"center\">\n            <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\" disabled={isLoadingDataFromContract}>\n              {t('Max')}\n            </Button>\n            <Text>{symbol}</Text>\n          </Flex>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && addLiquidityUrl && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n"],"sourceRoot":""}